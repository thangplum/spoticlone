[{"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\index.tsx":"1","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\serviceWorker.ts":"2","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\App.tsx":"3","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\FooterComponent\\Player.tsx":"4","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\context.tsx":"5","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\getHashParams.tsx":"6","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\MainPage.tsx":"7","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\Loading.tsx":"8","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\FooterComponent\\Footer.tsx":"9","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\SidebarComponent\\Sidebar.tsx":"10","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\FooterComponent\\Banner.tsx":"11","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\UserPrompt.tsx":"12","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\UserInfo.tsx":"13","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\CollectionHeader.tsx":"14","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\HistoryToggle.tsx":"15","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\SearchBar.tsx":"16","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\SidebarComponent\\NavItem.tsx":"17","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\PageContent.tsx":"18","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\NavBar.tsx":"19","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\SidebarComponent\\NavList.tsx":"20","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\SidebarComponent\\PlayList.tsx":"21","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\SidebarComponent\\Install.tsx":"22","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Logo.tsx":"23","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\PromptButton.tsx":"24","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\HistoryButton.tsx":"25","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\pages\\Home.tsx":"26","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\SidebarComponent\\Playlists\\FeaturedPlaylists.tsx":"27","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\SidebarComponent\\Playlists\\NormalPlaylists.tsx":"28","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\index.tsx":"29","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\locale.tsx":"30","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\CollectionRow.tsx":"31","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\createRequest.tsx":"32","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\SidebarComponent\\Playlists\\CreatePlaylist.tsx":"33","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\SidebarComponent\\Playlists\\FeaturedItem.tsx":"34","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\SidebarComponent\\Playlists\\ListItem.tsx":"35","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Home.tsx":"36","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Install.tsx":"37","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Search.tsx":"38","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Library.tsx":"39","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Back.tsx":"40","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Create.tsx":"41","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Like.tsx":"42","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Play.tsx":"43","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Forward.tsx":"44","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\NSearch.tsx":"45","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Music2.tsx":"46","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Music.tsx":"47","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\PrevTrack.tsx":"48","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\CD.tsx":"49","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Heart.tsx":"50","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Shuffle.tsx":"51","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Repeat.tsx":"52","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\NextTrack.tsx":"53","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Pause.tsx":"54","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Volume.tsx":"55","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\CollectionTitle.tsx":"56","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\CollectionDisplay.tsx":"57","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\PlayCard.tsx":"58","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\CardDisplay.tsx":"59","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\CardInfo.tsx":"60","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\FooterComponent\\PlayerComponent\\CurrentlyPlayedSong.tsx":"61","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\FooterComponent\\PlayerComponent\\ControlButton.tsx":"62","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\FooterComponent\\PlayerComponent\\ProgressBar.tsx":"63","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\FooterComponent\\PlayerComponent\\ConnectDevices.tsx":"64","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\FooterComponent\\PlayerComponent\\ConnectDevicesItem.tsx":"65","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Devices.tsx":"66","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\timeFormat.ts":"67","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\types\\index.ts":"68","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\types\\spotify.ts":"69","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\pages\\Search.tsx":"70","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\pages\\Browse.tsx":"71","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\PageTitle.tsx":"72","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\BrowseCard.tsx":"73","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\pages\\SearchResult.tsx":"74","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\SearchRow.tsx":"75","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\SearchRowTitle.tsx":"76","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\SearchRowGrid.tsx":"77","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\tipContent.tsx":"78","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\pages\\Collection.tsx":"79","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\pages\\Like.tsx":"80","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\PageBanner.tsx":"81","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\PlaylistFunc.tsx":"82","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\hooks\\useLoadScroll.ts":"83","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\TrackList.tsx":"84","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\TrackListItem.tsx":"85","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\requestWithToken.ts":"86","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\pages\\Playlist.tsx":"87","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\hooks\\useID.ts":"88","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\hooks\\useInfiScroll.tsx":"89","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\pages\\Album.tsx":"90","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\pages\\Artist.tsx":"91","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\AboutMenu.tsx":"92","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\ArtistRow.tsx":"93","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\ArtistRowGrid.tsx":"94","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\ArtistRowTitle.tsx":"95","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\ArtistRowItem.tsx":"96","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\RowGrid.tsx":"97","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\pages\\Podcast.tsx":"98"},{"size":610,"mtime":1602829642783,"results":"99","hashOfConfig":"100"},{"size":5295,"mtime":1589746112329,"results":"101","hashOfConfig":"100"},{"size":4275,"mtime":1607976018515,"results":"102","hashOfConfig":"100"},{"size":18274,"mtime":1607986669234,"results":"103","hashOfConfig":"100"},{"size":1148,"mtime":1607477644959,"results":"104","hashOfConfig":"100"},{"size":410,"mtime":1607009256814,"results":"105","hashOfConfig":"100"},{"size":1362,"mtime":1607898246229,"results":"106","hashOfConfig":"100"},{"size":507,"mtime":1607098882502,"results":"107","hashOfConfig":"100"},{"size":223,"mtime":1604899735476,"results":"108","hashOfConfig":"100"},{"size":1483,"mtime":1607872490529,"results":"109","hashOfConfig":"100"},{"size":1118,"mtime":1603263431601,"results":"110","hashOfConfig":"100"},{"size":515,"mtime":1607009256811,"results":"111","hashOfConfig":"100"},{"size":2581,"mtime":1607009256809,"results":"112","hashOfConfig":"100"},{"size":1077,"mtime":1603438748906,"results":"113","hashOfConfig":"100"},{"size":384,"mtime":1603438748908,"results":"114","hashOfConfig":"100"},{"size":1362,"mtime":1607439030607,"results":"115","hashOfConfig":"100"},{"size":1315,"mtime":1607469732214,"results":"116","hashOfConfig":"100"},{"size":2297,"mtime":1607974526345,"results":"117","hashOfConfig":"100"},{"size":319,"mtime":1607439030603,"results":"118","hashOfConfig":"100"},{"size":262,"mtime":1607469732215,"results":"119","hashOfConfig":"100"},{"size":1416,"mtime":1607898246233,"results":"120","hashOfConfig":"100"},{"size":537,"mtime":1603263431602,"results":"121","hashOfConfig":"100"},{"size":2877,"mtime":1602829642770,"results":"122","hashOfConfig":"100"},{"size":1279,"mtime":1607446183171,"results":"123","hashOfConfig":"100"},{"size":502,"mtime":1603438748907,"results":"124","hashOfConfig":"100"},{"size":5707,"mtime":1607956638674,"results":"125","hashOfConfig":"100"},{"size":459,"mtime":1603178542060,"results":"126","hashOfConfig":"100"},{"size":942,"mtime":1607872490527,"results":"127","hashOfConfig":"100"},{"size":2023,"mtime":1607359660970,"results":"128","hashOfConfig":"100"},{"size":159,"mtime":1607030496874,"results":"129","hashOfConfig":"100"},{"size":685,"mtime":1607836245594,"results":"130","hashOfConfig":"100"},{"size":771,"mtime":1607956183342,"results":"131","hashOfConfig":"100"},{"size":449,"mtime":1603007428677,"results":"132","hashOfConfig":"100"},{"size":880,"mtime":1607728561227,"results":"133","hashOfConfig":"100"},{"size":586,"mtime":1607872490525,"results":"134","hashOfConfig":"100"},{"size":445,"mtime":1602056523945,"results":"135","hashOfConfig":"100"},{"size":690,"mtime":1602056523946,"results":"136","hashOfConfig":"100"},{"size":911,"mtime":1602056523963,"results":"137","hashOfConfig":"100"},{"size":492,"mtime":1602056523947,"results":"138","hashOfConfig":"100"},{"size":334,"mtime":1602056523939,"results":"139","hashOfConfig":"100"},{"size":480,"mtime":1602056523942,"results":"140","hashOfConfig":"100"},{"size":1598,"mtime":1602056523948,"results":"141","hashOfConfig":"100"},{"size":324,"mtime":1602056523959,"results":"142","hashOfConfig":"100"},{"size":333,"mtime":1602056523943,"results":"143","hashOfConfig":"100"},{"size":719,"mtime":1602056523955,"results":"144","hashOfConfig":"100"},{"size":796,"mtime":1602056523953,"results":"145","hashOfConfig":"100"},{"size":1182,"mtime":1602056523951,"results":"146","hashOfConfig":"100"},{"size":710,"mtime":1606537004625,"results":"147","hashOfConfig":"100"},{"size":829,"mtime":1602056523941,"results":"148","hashOfConfig":"100"},{"size":1376,"mtime":1602056523944,"results":"149","hashOfConfig":"100"},{"size":1786,"mtime":1602056523964,"results":"150","hashOfConfig":"100"},{"size":1514,"mtime":1602056523961,"results":"151","hashOfConfig":"100"},{"size":662,"mtime":1602056523957,"results":"152","hashOfConfig":"100"},{"size":700,"mtime":1602056523958,"results":"153","hashOfConfig":"100"},{"size":2236,"mtime":1602056523966,"results":"154","hashOfConfig":"100"},{"size":1008,"mtime":1607469732205,"results":"155","hashOfConfig":"100"},{"size":910,"mtime":1607836245589,"results":"156","hashOfConfig":"100"},{"size":3410,"mtime":1607963049050,"results":"157","hashOfConfig":"100"},{"size":435,"mtime":1604476474530,"results":"158","hashOfConfig":"100"},{"size":1024,"mtime":1604800968118,"results":"159","hashOfConfig":"100"},{"size":3200,"mtime":1607987013194,"results":"160","hashOfConfig":"100"},{"size":661,"mtime":1606537309317,"results":"161","hashOfConfig":"100"},{"size":3346,"mtime":1607439030601,"results":"162","hashOfConfig":"100"},{"size":3307,"mtime":1607098882501,"results":"163","hashOfConfig":"100"},{"size":633,"mtime":1606688502496,"results":"164","hashOfConfig":"100"},{"size":1260,"mtime":1607359660968,"results":"165","hashOfConfig":"100"},{"size":205,"mtime":1607359660974,"results":"166","hashOfConfig":"100"},{"size":26,"mtime":1607293832633,"results":"167","hashOfConfig":"100"},{"size":4880,"mtime":1607292756218,"results":"168","hashOfConfig":"100"},{"size":397,"mtime":1607439030613,"results":"169","hashOfConfig":"100"},{"size":1243,"mtime":1607956553500,"results":"170","hashOfConfig":"100"},{"size":463,"mtime":1607439030606,"results":"171","hashOfConfig":"100"},{"size":1213,"mtime":1607439030602,"results":"172","hashOfConfig":"100"},{"size":668,"mtime":1607439030614,"results":"173","hashOfConfig":"100"},{"size":1539,"mtime":1607956479105,"results":"174","hashOfConfig":"100"},{"size":561,"mtime":1607439030610,"results":"175","hashOfConfig":"100"},{"size":426,"mtime":1607439030610,"results":"176","hashOfConfig":"100"},{"size":1713,"mtime":1607446183178,"results":"177","hashOfConfig":"100"},{"size":3850,"mtime":1607836245605,"results":"178","hashOfConfig":"100"},{"size":3493,"mtime":1607836245610,"results":"179","hashOfConfig":"100"},{"size":3884,"mtime":1607978375942,"results":"180","hashOfConfig":"100"},{"size":4765,"mtime":1607979019868,"results":"181","hashOfConfig":"100"},{"size":1715,"mtime":1607898246237,"results":"182","hashOfConfig":"100"},{"size":1099,"mtime":1607963441627,"results":"183","hashOfConfig":"100"},{"size":5329,"mtime":1607836245605,"results":"184","hashOfConfig":"100"},{"size":743,"mtime":1607728561227,"results":"185","hashOfConfig":"100"},{"size":5816,"mtime":1607959699423,"results":"186","hashOfConfig":"100"},{"size":613,"mtime":1607836245613,"results":"187","hashOfConfig":"100"},{"size":1724,"mtime":1607956679036,"results":"188","hashOfConfig":"100"},{"size":4289,"mtime":1607974916271,"results":"189","hashOfConfig":"100"},{"size":7117,"mtime":1607974902858,"results":"190","hashOfConfig":"100"},{"size":1461,"mtime":1607966800727,"results":"191","hashOfConfig":"100"},{"size":742,"mtime":1607962905046,"results":"192","hashOfConfig":"100"},{"size":432,"mtime":1607965195844,"results":"193","hashOfConfig":"100"},{"size":497,"mtime":1607962460258,"results":"194","hashOfConfig":"100"},{"size":865,"mtime":1607964395027,"results":"195","hashOfConfig":"100"},{"size":389,"mtime":1607963249686,"results":"196","hashOfConfig":"100"},{"size":3007,"mtime":1607978858861,"results":"197","hashOfConfig":"100"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},"e5hdjd",{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"200"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"200"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"200"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"200"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"200"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"200"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"200"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"200"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"200"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"200"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"200"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"200"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"200"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"200"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"200"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"200"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"200"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"200"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"200"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"200"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"347","usedDeprecatedRules":"200"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"200"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"200"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"200"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383","usedDeprecatedRules":"200"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\index.tsx",[],["420","421"],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\serviceWorker.ts",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\App.tsx",["422","423"],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\FooterComponent\\Player.tsx",["424","425","426","427"],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\context.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\getHashParams.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\MainPage.tsx",["428"],"import React, { useContext, useState } from 'react'\r\nimport { HistoryToggle } from './HistoryToggle';\r\nimport { NavBar } from './NavBar';\r\nimport { Route } from 'react-router-dom'\r\nimport { SearchBar } from './SearchBar';\r\nimport { CollectionHeader } from './CollectionHeader';\r\nimport { LinkContext, LoginContext } from '../../utilities/context';\r\nimport UserInfo from './UserInfo';\r\nimport { UserPrompt } from './UserPrompt';\r\nimport { PageContent } from './PageContent';\r\n\r\ninterface MainPageProps {\r\n  message: string;\r\n  status: boolean;\r\n}\r\n\r\nexport const MainPage: React.FC<MainPageProps> = ({message, status}) => {\r\n    const [query, setQuery] = useState(\"\")\r\n    const login = useContext(LoginContext);\r\n    \r\n    const resetQuery = () => {\r\n        setQuery(\"\")\r\n    }\r\n    \r\n    return (\r\n        <div className=\"featured\">\r\n            <NavBar>\r\n                <HistoryToggle />\r\n                <Route exact path='/search'>\r\n                    <SearchBar query={query} setQuery={setQuery} resetQuery={resetQuery} />\r\n                </Route>\r\n                <Route path='/collection'>\r\n                    <CollectionHeader />\r\n                </Route>\r\n                {login ? <UserInfo /> : <UserPrompt />}\r\n            </NavBar>\r\n            <PageContent query={query} message={message} status={status} />\r\n        </div>\r\n        \r\n    );\r\n}","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\Loading.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\FooterComponent\\Footer.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\SidebarComponent\\Sidebar.tsx",["429","430"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport Logo from \"../../icons/Logo\";\r\nimport NavList from './NavList';\r\nimport { NavItem } from './NavItem';\r\nimport { PlayList } from './PlayList';\r\nimport { Install } from './Install';\r\nimport { LoginContext } from '../../utilities/context';\r\nimport { generateContent } from '../../utilities/tipContent';\r\nimport ReactToolTip from 'react-tooltip';\r\n\r\ninterface SideBarProps {\r\n    \r\n}\r\n\r\nconst SideBar: React.FC<SideBarProps> = () => {\r\n    const loggedIn = useContext(LoginContext);\r\n    return (\r\n        <>\r\n            <div className=\"sidebar\">\r\n                <Logo />\r\n                <NavList>\r\n                    <NavItem to=\"/\" exact={true} iconName='Home' label='Home' />\r\n                    <NavItem to=\"/search\" exact={true} iconName='Search' label='Search'  />\r\n                    <NavItem to=\"/collection\" exact={false} iconName='Library' label='Your Library' dataTip='library' dataFor='tooltip' dataEvent='click' style={{ pointerEvents: loggedIn? 'auto':'none'}} />\r\n                </NavList>\r\n                \r\n                <PlayList />\r\n                {loggedIn ? <Install /> : null}\r\n            </div>\r\n            <ReactToolTip className='toolTip' id='tooltip' disable={loggedIn} place='right' effect='solid' globalEventOff='click' backgroundColor= '#2e77d0' getContent={dataTip => generateContent(dataTip)} clickable={true}/>\r\n        </>\r\n        \r\n    );\r\n}\r\n\r\nexport default SideBar;","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\FooterComponent\\Banner.tsx",["431"],"import React from 'react'\r\n\r\ninterface BannerProps {\r\n\r\n}\r\n\r\nexport const Banner: React.FC<BannerProps> = ({}) => {\r\n    return (\r\n        <div className='CTA-banner'>\r\n            <div className=\"cta-content\">\r\n                <h2 style={{\r\n                    fontSize: '12px',\r\n                    fontWeight: 400,\r\n                    lineHeight: '16px',\r\n                    letterSpacing: '.1em',\r\n                    textTransform: 'uppercase',\r\n                    marginBottom: '4px'\r\n                }}>A spotify clone</h2>\r\n                <h3 style={{\r\n                    fontSize: '16px',\r\n                    fontWeight: 500,\r\n                    lineHeight: '24px',\r\n                    letterSpacing: 'normal',\r\n                    textTransform: 'none'\r\n                }}>This is a clone website intended to be an exercise in web application building - not for profit/commercial use. If you are looking for the real app go to open.spotify.com</h3>\r\n            </div>\r\n            {/* <PromptButton to='https://spotify.com/signup' name='Sign up free' styleName='CTA'/> */}\r\n        </div>\r\n    );\r\n}","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\UserPrompt.tsx",["432"],"import React from 'react'\r\nimport { PromptButton } from './PromptButton';\r\n\r\ninterface UserPromptProps {\r\n\r\n}\r\n\r\nexport const UserPrompt: React.FC<UserPromptProps> = ({}) => {\r\n    \r\n    return (\r\n        <div className='UserPrompt'>\r\n            <PromptButton to='https://www.spotify.com/us/signup/?forward_url=https%3A%2F%2Fopen.spotify.com%2F' name='Sign Up' styleName='dark'/>\r\n            <PromptButton to={`${process.env.REACT_APP_BACK_URI}/login`} name='Log In' styleName='light'/>\r\n        </div>\r\n    );\r\n}","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\UserInfo.tsx",["433"],"import React, { useContext, useState } from 'react';\r\nimport {UserContext} from '../../utilities/context';\r\nimport axios from 'axios';\r\n\r\ninterface UserInfoProps {\r\n\r\n}\r\n\r\nconst UserInfo: React.FC<UserInfoProps> = ({}) => {\r\n    const [open, setOpen] = useState(false);\r\n    const {images, display_name, id} = useContext(UserContext);\r\n    let img_url;\r\n    if (images.length > 0) {\r\n        img_url = images[0].url\r\n    }\r\n\r\n    const logout = () => {\r\n        axios(`${process.env.REACT_APP_BACK_URI}/logout`, {withCredentials: true})\r\n            .then(response => {\r\n                window.location.reload()\r\n            })\r\n            .catch(error => console.log(error))\r\n    }\r\n\r\n    return (\r\n        <div style={divStyle}>\r\n            <button className='UserInfoButton no-outline' onClick={() => setOpen(!open)}>\r\n                <figure style={figureStyle}>\r\n                    <img loading='eager' src={img_url} style={imgStyle} alt=''></img>\r\n                </figure>\r\n                <span className='UserInfoSpan mediaNoneXL'>\r\n                    {display_name}\r\n                </span>\r\n                <span style={spanStyle} className='mediaNoneXL'> \r\n                    {open? <p>&#9650;</p>:<p>&#9660;</p>}\r\n                </span>\r\n            </button>\r\n            <ul className='UserInfoOptions' style={{display: open?'block':'none'}}>\r\n                <li>\r\n                    <a href=\"https://www.spotify.com/account/?utm_source=play&amp;utm_campaign=wwwredirect\" target=\"_blank\" rel=\"noopener noreferrer\">Account</a>\r\n                </li>\r\n                <li>\r\n                    <a href={`/user/${id}`}>Profile</a>\r\n                </li>\r\n                <li>\r\n                    <button onClick={logout}>Log out</button>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\n//type check does not let like this so this is a temp fix, i guess\r\nconst divStyle = {\r\n    position: \"relative\" as \"relative\",\r\n    whiteSpace: \"nowrap\" as \"nowrap\"\r\n}\r\n\r\nconst figureStyle = {\r\n    width: '28px' as '28px',\r\n    height: '28px' as '28px',\r\n    overflow: 'hidden' as 'hidden',\r\n    position: 'relative' as 'relative',\r\n    display: 'inline-block' as 'inline-block'\r\n}\r\n\r\nconst imgStyle = {\r\n    borderRadius: '50%' as '50%',\r\n    width: '100%' as '100%',\r\n    height: '100%' as '100%',\r\n    objectFit: 'cover' as 'cover',\r\n    objectPosition: 'center center' as 'center center'\r\n}\r\n\r\n\r\nconst spanStyle = {\r\n    marginRight: '6px' as '6px',\r\n    marginLeft: '8px' as '8px',\r\n    fontSize: '10px' as '10px'\r\n}\r\n\r\nexport default UserInfo;","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\CollectionHeader.tsx",["434"],"import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\ninterface CollectionHeaderProps {\r\n\r\n}\r\n\r\nconst activeStyle = {\r\n    backgroundColor: '#333'\r\n}\r\n\r\nexport const CollectionHeader: React.FC<CollectionHeaderProps> = ({}) => {\r\n    return (\r\n        <div className='cNavWrapper'>\r\n            <nav className='cNav'>\r\n                <ul className='cNavList'>\r\n                    <li>\r\n                        <NavLink to='/collection/playlists' activeStyle={activeStyle}>Playlists</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to='/collection/podcasts' activeStyle={activeStyle}>Podcasts</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to='/collection/artists' activeStyle={activeStyle}>Artists</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to='/collection/albums' activeStyle={activeStyle}>Albums</NavLink>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    );\r\n}","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\HistoryToggle.tsx",["435"],"import React from 'react'\r\nimport { HistoryButton } from './HistoryButton';\r\n\r\ninterface HistoryToggleProps {\r\n\r\n}\r\n\r\nexport const HistoryToggle: React.FC<HistoryToggleProps> = ({}) => {\r\n        return (\r\n            <div className='HistoryNav'>\r\n                <HistoryButton property='Back'/>\r\n                <HistoryButton property='Forward'/>\r\n            </div>\r\n        );\r\n}","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\SearchBar.tsx",["436"],"import React, { useEffect } from 'react'\r\nimport Icon from '../../icons';\r\n\r\ninterface SearchBarProps {\r\n    query: string,\r\n    setQuery: React.Dispatch<React.SetStateAction<string>>,\r\n    resetQuery: Function\r\n}\r\n\r\nexport const SearchBar: React.FC<SearchBarProps> = ({ query, setQuery, resetQuery }) => {\r\n    useEffect(() => {\r\n        resetQuery();\r\n    }, [])\r\n    \r\n    return (\r\n        <div className=\"SearchContainer\">\r\n            <div className='SearchBar'>\r\n                <div style={{\r\n                    position:'absolute',\r\n                    top: '0',\r\n                    bottom: '0',\r\n                    left: '12px',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    cursor:'text'\r\n                }}>\r\n                    <Icon name=\"N-Search\" /> \r\n                </div>\r\n                <input className= 'SearchInput no-outline' \r\n                        maxLength={80} \r\n                        autoCorrect='off' \r\n                        autoCapitalize='off' \r\n                        spellCheck='false'\r\n                        autoFocus={true}\r\n                        placeholder='Search for Artists, Songs, or Podcasts'\r\n                        value={query}\r\n                        onChange={e => setQuery(e.target.value)}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\SidebarComponent\\NavItem.tsx",["437"],"import React, { CSSProperties, useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Icon from '../../icons';\r\n\r\ninterface NavItemProps {\r\n    to: string;\r\n    exact: boolean;\r\n    label: string;\r\n    iconName: string;\r\n    dataTip?: string;\r\n    dataFor?: string;\r\n    dataEvent?: string;\r\n    style?: CSSProperties;\r\n}\r\n\r\nexport const NavItem: React.FC<NavItemProps> = ({to, exact, label, iconName, dataTip, dataEvent, dataFor, style}) => {\r\n    return (\r\n        <li className='NavItem' data-tip={dataTip} data-for={dataFor} data-event={dataEvent}>\r\n            {exact \r\n                ?   <NavLink exact to={to} className=\"nav-link\" activeClassName='activeMainNav' style={style}>\r\n                        <div className=\"nav-icon\">\r\n                            <Icon name={iconName} />\r\n                        </div>\r\n                        <span>{label}</span>\r\n                    </NavLink>\r\n                :   <NavLink to={to} className=\"nav-link\" activeClassName='activeMainNav' style={style}>\r\n                        <div className=\"nav-icon\">\r\n                            <Icon name={iconName} />\r\n                        </div>\r\n                        <span>{label}</span>\r\n                    </NavLink>\r\n            }\r\n            \r\n            \r\n        </li>\r\n    );\r\n}","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\PageContent.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\NavBar.tsx",["438","439","440"],"import React, { useEffect, useState } from 'react';\r\nimport {useLocation} from 'react-router-dom';\r\n\r\ninterface NavBarProps {\r\n    children: any\r\n}\r\n\r\n\r\nexport const NavBar: React.FC<NavBarProps> = ({children}) => {\r\n    return (\r\n        <div className=\"header-bar\" >\r\n            {children}\r\n        </div>\r\n    );\r\n}","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\SidebarComponent\\NavList.tsx",["441"],"import React, { useContext } from 'react';\r\n\r\ninterface NavListProps {\r\n\r\n}\r\n\r\nconst NavList: React.FC<NavListProps> = ({children}) => {\r\n    return (\r\n        <ul className=\"nav-list\">\r\n            {children}\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default NavList;","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\SidebarComponent\\PlayList.tsx",["442"],"import React, { useContext, useEffect, useState } from 'react'\r\nimport { FeaturedPlaylists } from './Playlists/FeaturedPlaylists';\r\nimport SpotifyWebApi from 'spotify-web-api-js';\r\nimport { NormalPlaylists } from './Playlists/NormalPlaylists';\r\nimport { TokenContext } from '../../utilities/context';\r\nimport { useLoadScroll } from '../../utilities/hooks/useLoadScroll';\r\nimport axios from  'axios';\r\n\r\ninterface PlayListProps {\r\n\r\n}\r\n\r\nexport const PlayList: React.FC<PlayListProps> = () => {\r\n  const [playlists, setPlaylists] = useState<SpotifyApi.PlaylistObjectSimplified[]>([]);\r\n  const token = useContext(TokenContext);\r\n  const source = axios.CancelToken.source();\r\n  const spotifyApi = new SpotifyWebApi();\r\n\r\n  const [setNext, lastRef] = useLoadScroll(setPlaylists, token, source);\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      spotifyApi.setAccessToken(token);\r\n      spotifyApi.getUserPlaylists()\r\n        .then(\r\n          function(data) {\r\n            setPlaylists(data.items);\r\n            setNext(data.next);\r\n          },\r\n          function(error) {\r\n            console.log(error);\r\n          }\r\n        )\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n      <div className=\"playlists\">\r\n          <h1 className=\"play-title\">playlists</h1>\r\n          <FeaturedPlaylists />\r\n          <hr className=\"list-separator\" />\r\n          <NormalPlaylists ref={lastRef} playlists={playlists} />\r\n      </div>\r\n  );\r\n}\r\n","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\SidebarComponent\\Install.tsx",["443"],"import React from 'react'\r\nimport Icon from '../../icons';\r\n\r\ninterface InstallProps {\r\n\r\n}\r\n\r\nexport const Install: React.FC<InstallProps> = ({}) => {\r\n    return (\r\n        <div className='cta-wrapper'>\r\n            <a href=\"https://spotify.com/download\" className='nav-link'>\r\n                <div className=\"nav-icon install-icon\">\r\n                    <Icon name='Install' viewBox='0 0 20 20' width='20px' height='20px'/>\r\n                </div>\r\n                <span>Install App</span>\r\n            </a>\r\n        </div>\r\n    );\r\n}","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Logo.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\PromptButton.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\HistoryButton.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\pages\\Home.tsx",["444","445","446","447","448","449","450","451"],"import React, { useEffect, useState, useContext } from 'react'\r\nimport { CollectionRow } from '../components/MainPageComponent/CollectionRow';\r\nimport SpotifyWebApi from 'spotify-web-api-js';\r\nimport { LoginContext, TokenContext } from '../utilities/context';\r\nimport getLocale from '../utilities/locale';\r\nimport createRequest from '../utilities/createRequest';\r\nimport { Loading } from '../components/MainPageComponent/Loading';\r\n\r\ninterface HomeProps {\r\n\r\n}\r\n\r\nexport const Home: React.FC<HomeProps> = ({}) => {\r\n    const [recentlyPlaylist, setRecentlyPlaylist] = useState<SpotifyApi.TrackObjectSimplified[]>([]);\r\n    const [newReleases, setNewReleases] = useState<any[]>([]);\r\n    const [topTracksAndArtists, setTop] = useState<any[]>([]);\r\n    const [collections, setCollections] = useState<any[]>([]);\r\n    const [tempPlaylists, setTempPlaylists] = useState<any>({});\r\n    const [fpPlaylists, setFpPlaylists] = useState<any[]>([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const loggedIn = useContext(LoginContext);\r\n    const token = useContext(TokenContext);\r\n    const spotifyApi = new SpotifyWebApi();\r\n\r\n    useEffect(() => {\r\n        if (token) {\r\n            spotifyApi.setAccessToken(token);\r\n\r\n            spotifyApi.getNewReleases()\r\n                .then (\r\n                    function(data) {\r\n                        setNewReleases(data.albums.items as any)\r\n                    },\r\n                    function(err) {\r\n                        console.log(err);\r\n                    }\r\n                )\r\n\r\n            spotifyApi.getMyRecentlyPlayedTracks()\r\n                .then (\r\n                    function(data) {\r\n                        const recentlyPlaylistList: SpotifyApi.TrackObjectSimplified[] = [];\r\n                        data.items.map((track, index) => {\r\n                            recentlyPlaylistList.push(track.track as SpotifyApi.TrackObjectSimplified);\r\n                        })\r\n                        setRecentlyPlaylist(recentlyPlaylistList);\r\n                    },\r\n                    function(err) {\r\n                        console.log(err);\r\n                    }\r\n                )\r\n            spotifyApi.getMyTopTracks()\r\n                .then (\r\n                    function(data) {\r\n                        data.items.slice(0, 5).map((track, index) => {\r\n                            setTop(prevTop => ([...prevTop, track]));\r\n                        });\r\n                    },\r\n                    function(err) {\r\n                        console.log(err);\r\n                    }\r\n                )\r\n\r\n            spotifyApi.getMyTopArtists()\r\n                .then (\r\n                    function(data) {\r\n                        data.items.slice(0, 5).map((artist, index) => {\r\n                            setTop(prevTop => ([...prevTop, artist]));\r\n                        });\r\n                    },\r\n                    function(err) {\r\n                        console.log(err);\r\n                    }\r\n                )\r\n        } else {\r\n            const [language, locale] = getLocale()\r\n            const [source, makeRequest] = createRequest(`https://api.spotify.com/v1/browse/categories?limit=6&country=${locale}&locale=${language}_${locale}`)\r\n\r\n            makeRequest()\r\n                .then((data: any) => {\r\n                    setCollections(data.categories.items);\r\n                })\r\n                .catch((error: any) => console.log(error))\r\n            \r\n            \r\n            return () => source.cancel()\r\n        }\r\n        setLoading(false);\r\n    }, [token])\r\n\r\n    useEffect(() => { \r\n        topTracksAndArtists.sort((a, b) => (a.popularity > b.popularity) ? -1 : 1);\r\n    }, [topTracksAndArtists])\r\n\r\n    useEffect(() => {\r\n        collections.map((collection) => {\r\n            const {name, id} = collection\r\n            var [ ,makeRequest] = createRequest(`https://api.spotify.com/v1/browse/categories/${id}/playlists?limit=9`)\r\n            makeRequest()\r\n                .then((data) => {\r\n                    const playlists = data.playlists.items\r\n                    setTempPlaylists(() => ({[name]: {id, playlists}}))\r\n                })\r\n                .catch((error) => console.log(error))\r\n            return null\r\n        })\r\n        // setLoading(false);\r\n    }, [collections])\r\n    \r\n    useEffect(() => {\r\n        setFpPlaylists({...fpPlaylists, ...tempPlaylists});\r\n        // setLoading(false);\r\n    }, [tempPlaylists])\r\n\r\n    return (\r\n      <div className=\"page-content\">\r\n        <div className='pageContent'>\r\n            {loggedIn \r\n                ?   <>\r\n                        <CollectionRow name='Recently played' id={null} playlists={recentlyPlaylist} />\r\n                        <CollectionRow name='Jump back in' id={null} playlists={topTracksAndArtists} description={\"Your top listens from the past few months.\"} />\r\n                        <CollectionRow name='New releases for you' id={null} playlists={newReleases} />\r\n                    </>\r\n                :   <>\r\n                        <CollectionRow name='Uniquely Yours' id={null} playlists={[{id:'', to:'/tracks', description:'', name:'Liked Songs', images:[{url: 'https://misc.scdn.co/liked-songs/liked-songs-300.png'}]}]}/>\r\n                        {   \r\n                            Object.entries(fpPlaylists).map(playlist => {\r\n                                return (\r\n                                    <CollectionRow name={playlist[0]} key={playlist[1].id} id={playlist[1].id} playlists={playlist[1].playlists}/>\r\n                                )\r\n                            })\r\n                        }\r\n                    </>\r\n            }\r\n        </div>\r\n      </div>  \r\n    );\r\n}","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\SidebarComponent\\Playlists\\FeaturedPlaylists.tsx",["452"],"import React from 'react';\r\nimport { CreatePlaylist } from './CreatePlaylist';\r\nimport { FeaturedItem } from './FeaturedItem';\r\n\r\ninterface FeaturedPlaylistsProps {\r\n\r\n}\r\n\r\nexport const FeaturedPlaylists: React.FC<FeaturedPlaylistsProps> = ({}) => {\r\n    return (\r\n        <>\r\n            <div className=\"featured-playlists\">\r\n                <CreatePlaylist />\r\n                <FeaturedItem label=\"Liked Songs\" />\r\n            </div>\r\n        </>\r\n    );\r\n}","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\SidebarComponent\\Playlists\\NormalPlaylists.tsx",["453","454","455","456"],"import React, { useContext, useEffect, useState } from 'react'\r\nimport { ListItem } from './ListItem';\r\n\r\ninterface NormalPlaylistsProps {\r\n    playlists: SpotifyApi.PlaylistObjectSimplified[];\r\n    ref: (node: HTMLLIElement) => void;\r\n}\r\n\r\nexport const NormalPlaylists = React.forwardRef<HTMLLIElement, NormalPlaylistsProps>(({playlists}, ref) => {\r\n  \r\n  return (\r\n      <div className=\"other-playlist-container\">\r\n          <ul className=\"other-list\">\r\n              {playlists.map((playlist, index) => {\r\n                if (index + 1 === playlists.length) {\r\n                  return <ListItem ref={ref} key={playlist.id} name={playlist.name} id={playlist.id}/>\r\n                } else {\r\n                  return <ListItem key={playlist.id} name={playlist.name} id={playlist.id}/>\r\n                }\r\n              })}\r\n          </ul>\r\n      </div>\r\n  );\r\n})\r\n{/* <ListItem key={playlist.id} name={playlist.name} id={playlist.id}/> */}","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\index.tsx",["457"],"import Home from './Home'\r\nimport Search from './Search'\r\nimport Library from './Library'\r\nimport Create from './Create'\r\nimport Like from './Like'\r\nimport Install from './Install'\r\nimport Back from './Back'\r\nimport Forward from './Forward'\r\nimport NSearch from './NSearch'\r\nimport Heart from './Heart'\r\nimport Play from './Play'\r\nimport Music from './Music'\r\nimport Music2 from './Music2'\r\nimport CD from './CD'\r\nimport PrevTrack from './PrevTrack'\r\nimport NextTrack from './NextTrack'\r\nimport Shuffle from './Shuffle'\r\nimport Repeat from './Repeat'\r\nimport Speaker from './Devices'\r\nimport Volume from './Volume'\r\nimport Pause from './Pause'\r\n\r\nimport React from 'react'\r\nimport Devices from './Devices'\r\n\r\n\r\nexport default function Icon(props: any) {\r\n    switch (props.name) {\r\n        case 'Home':\r\n            return <Home />\r\n        case 'Search':\r\n            return <Search />\r\n        case 'Library':\r\n            return <Library />\r\n        case 'Create':\r\n            return <Create />\r\n        case 'Heart':\r\n            return <Heart {...props}/>\r\n        case 'Like':\r\n            return <Like {...props}/>\r\n        case 'Install':\r\n            return <Install {...props}/>\r\n        case 'Back':\r\n            return <Back />\r\n        case 'Forward':\r\n            return <Forward />\r\n        case 'N-Search':\r\n            return <NSearch />\r\n        case 'Play':\r\n            return <Play {...props}/>\r\n        case 'Music':\r\n            return <Music />\r\n        case 'Music2':\r\n            return <Music2 />\r\n        case 'CD':\r\n            return <CD />\r\n        case 'PrevTrack':\r\n            return <PrevTrack />\r\n        case 'NextTrack':\r\n            return <NextTrack />\r\n        case 'Shuffle':\r\n            return <Shuffle />\r\n        case 'Repeat':\r\n            return <Repeat />\r\n        case 'Devices':\r\n            return <Devices />\r\n        case 'Volume':\r\n            return <Volume />\r\n        case 'Pause':\r\n            return <Pause />\r\n        default:\r\n            return null\r\n    }\r\n}","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\locale.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\CollectionRow.tsx",["458"],"import React from 'react'\r\nimport { CollectionDisplay } from './CollectionDisplay'\r\nimport { CollectionHeader } from './CollectionHeader'\r\nimport { CollectionTitle } from './CollectionTitle'\r\n\r\ninterface CollectionRowProps {\r\n        name: string,\r\n        description?: string,\r\n        playlists: any,\r\n        id?: string | null\r\n}\r\n\r\nexport const CollectionRow = React.forwardRef<HTMLDivElement, CollectionRowProps>(({name, playlists, id, description}, ref) => {\r\n  return (\r\n    <div className=\"CollectionRow\">\r\n      <CollectionTitle title={name} id={id ? id : \"\"} description={description}/>\r\n      <CollectionDisplay ref={ref} playlists={playlists}/>\r\n    </div>\r\n  )\r\n})\r\n    ","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\createRequest.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\SidebarComponent\\Playlists\\CreatePlaylist.tsx",["459"],"import React from 'react';\r\nimport Icon from '../../../icons';\r\n\r\ninterface CreatePlaylistProps {\r\n\r\n}\r\n\r\nexport const CreatePlaylist: React.FC<CreatePlaylistProps> = ({}) => {\r\n    return (\r\n        <button className=\"create-button no-outline\">\r\n            <div className=\"playlist-icon\">\r\n                <Icon name='Create' />\r\n            </div>\r\n            <span className=\"featured-label\">Create Playlist</span>\r\n        </button>\r\n    );\r\n}","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\SidebarComponent\\Playlists\\FeaturedItem.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\SidebarComponent\\Playlists\\ListItem.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Home.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Install.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Search.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Library.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Back.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Create.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Like.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Play.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Forward.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\NSearch.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Music2.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Music.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\PrevTrack.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\CD.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Heart.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Shuffle.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Repeat.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\NextTrack.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Pause.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Volume.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\CollectionTitle.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\CollectionDisplay.tsx",["460","461"],"import { AnyTxtRecord } from 'dns';\r\nimport React from 'react'\r\nimport { PlayCard } from './PlayCard';\r\n\r\ninterface CollectionDisplayProps {\r\n    playlists: any\r\n}\r\n\r\nexport const CollectionDisplay = React.forwardRef<HTMLDivElement, CollectionDisplayProps>(({playlists}, ref) => {\r\n    const unique: string[] = [];\r\n    let uniqueIndex = 0;\r\n    return (\r\n        <div className=\"RowGrid\">\r\n            {playlists.map((playlist: any, index: number) => {\r\n                if (playlist){\r\n                    if (uniqueIndex < 6 && unique.indexOf(playlist.name) === -1){\r\n                        uniqueIndex++;\r\n                        unique.push(playlist.name);\r\n                        return <PlayCard key={playlist.id} info={playlist} type={playlist.type}/> \r\n                    }\r\n                } else {\r\n                    return null\r\n                }\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n);","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\PlayCard.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\CardDisplay.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\CardInfo.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\FooterComponent\\PlayerComponent\\CurrentlyPlayedSong.tsx",["462","463"],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\FooterComponent\\PlayerComponent\\ControlButton.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\FooterComponent\\PlayerComponent\\ProgressBar.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\FooterComponent\\PlayerComponent\\ConnectDevices.tsx",["464","465","466","467","468"],"import React, { useEffect, useRef, useState } from 'react'\r\nimport { getHashParams } from '../../../utilities/getHashParams';\r\nimport { ConnectDevicesItem } from './ConnectDevicesItem';\r\nimport SpotifyWebApi from 'spotify-web-api-js';\r\ninterface ConnectDevicesProps {\r\n    token: string,\r\n    closeTip: () => void\r\n}\r\n\r\nfunction useOutsideClick(ref: React.RefObject<HTMLDivElement>, closeTip: () => void) {\r\n    useEffect(() => {\r\n        function handleClickOutside(event: MouseEvent) {\r\n            if (ref.current && !ref.current.contains(event.target as Node)) {\r\n                closeTip();\r\n            }\r\n        }\r\n\r\n        // Bind the event listener\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => {\r\n            // Unbind the event listener on clean up\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        };\r\n    }, [ref]);\r\n}\r\n\r\nexport const ConnectDevices: React.FC<ConnectDevicesProps> = ({token, closeTip}) => {\r\n    const [devices, setDevices] = useState<SpotifyApi.UserDevice[]>([]);\r\n    const spotifyApi = new SpotifyWebApi();\r\n\r\n    useEffect(() => {\r\n        if (token) {\r\n            spotifyApi.setAccessToken(token);\r\n\r\n            spotifyApi.getMyDevices().\r\n                then (\r\n                    function(data) {\r\n                        data.devices.map((device, index) => {\r\n                            setDevices(devices => [...devices, device])\r\n                        });\r\n                    },\r\n                    function(err) {\r\n                        console.log(err);\r\n                    }\r\n                ) \r\n        } \r\n    }, [])\r\n    \r\n    const switchDevice = (e: React.MouseEvent) => {\r\n        if (!(e.currentTarget instanceof HTMLButtonElement)) {\r\n            return;\r\n        }\r\n        const id = e.currentTarget.dataset.id;\r\n        const device_ids: string[]= [id as string];\r\n        spotifyApi.setAccessToken(token);\r\n        spotifyApi.transferMyPlayback(device_ids);\r\n    };\r\n\r\n    const wrapperRef = useRef<HTMLDivElement>(null);\r\n    useOutsideClick(wrapperRef, closeTip);\r\n\r\n    return (\r\n        <div className=\"connect-devices\" data-source=\"inside\" ref={wrapperRef}>\r\n\t\t\t<div className=\"connect-devices-content\" data-source=\"inside\">\r\n\t\t\t\t<div className=\"connect-devices-title\" data-source=\"inside\">\r\n\t\t\t\t\t<h1 data-source=\"inside\">Connect to a device</h1>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"cd-img\" data-source=\"inside\">\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tloading=\"lazy\"\r\n\t\t\t\t\t\tdata-source=\"inside\"\r\n\t\t\t\t\t\tsrc=\"https://open.scdn.co/cdn/images/connect_header@1x.ecc6912d.png\"\r\n\t\t\t\t\t\talt=\"\"\r\n\t\t\t\t\t\tdraggable=\"false\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{devices.length === 0 ? (\r\n\t\t\t\t\t<ConnectDevicesItem name=\"No devices available\" disable />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<ul className='connect-devices-list'>\r\n                        {devices.map((device, index) => \r\n                            <ConnectDevicesItem\r\n                                name={device.name}\r\n                                key={index}\r\n                                active={device.is_active}\r\n                                id={device.id}\r\n                                onClick={switchDevice}\r\n                            />\r\n                        )}\r\n                    </ul>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n    );\r\n}","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\FooterComponent\\PlayerComponent\\ConnectDevicesItem.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Devices.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\timeFormat.ts",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\types\\index.ts",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\types\\spotify.ts",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\pages\\Search.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\pages\\Browse.tsx",["469","470"],"import React, { useEffect, useState } from 'react'\r\nimport { BrowseCard } from '../components/MainPageComponent/BrowseCard';\r\nimport { PageTitle } from '../components/MainPageComponent/PageTitle';\r\nimport SpotifyWebApi from 'spotify-web-api-js';\r\nimport createRequest from '../utilities/createRequest';\r\n\r\ninterface BrowseProps {\r\n\r\n}\r\n\r\nexport const Browse: React.FC<BrowseProps> = ({}) => {\r\n    const [genre, setGenre] = useState<SpotifyApi.CategoryObject[]>([]);\r\n\r\n    useEffect(() => {\r\n        const [source, makeRequest] = createRequest('https://api.spotify.com/v1/browse/categories?limit=50')\r\n\r\n        makeRequest()\r\n            .then((data) => {\r\n                setGenre(data.categories.items)\r\n            })\r\n            .catch((error) => console.log(error))\r\n        \r\n        return () => source.cancel()\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"page-content\">\r\n            <div className='browsePage'>\r\n                <PageTitle title='Browse All' />\r\n                <div className=\"browseGrid\">\r\n                    {genre.map((genre) => {\r\n                        return <BrowseCard key={genre.id} info={genre}/>\r\n                    })} \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\PageTitle.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\BrowseCard.tsx",["471"],"import React from 'react';\r\nimport SpotifyWebApi from 'spotify-web-api-js';\r\n\r\ninterface BrowseCardProps {\r\n    info: SpotifyApi.CategoryObject,\r\n    key: string\r\n}\r\n\r\nexport const BrowseCard: React.FC<BrowseCardProps> = ({key, info}) => {\r\n    const {icons, name, id} = info\r\n    const img_link = icons[0].url\r\n    return (\r\n        <div className=\"browseLinkContainer\">\r\n            <a href={`/genre/${id}`} className='browseLink'>\r\n                    <h3 style={titleStyle}>{name}</h3>\r\n                    <div style={overlayStyle}></div>\r\n                    <img loading=\"lazy\" src={img_link} alt=\"\" style={{width:'100%'}}/>\r\n            </a>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst titleStyle = {\r\n    fontSize: '24px',\r\n    padding: '16px',\r\n    lineHeight: '1.3em',\r\n    letterSpacing: '-0.04em',\r\n    overflowWrap: 'break-word',\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    bottom:'0',\r\n    textAlign: 'left',\r\n    margin: 'auto',\r\n    hyphens: 'auto'\r\n} as React.CSSProperties;\r\n\r\nconst overlayStyle = {\r\n    background: 'linear-gradient(0deg,rgba(0,0,0,0),rgba(0,0,0,.4))',\r\n    position: 'absolute',\r\n    top: '0',\r\n    left: '0',\r\n    width: '100%',\r\n    height:'100%'    \r\n} as React.CSSProperties;","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\pages\\SearchResult.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\SearchRow.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\SearchRowTitle.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\SearchRowGrid.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\tipContent.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\pages\\Collection.tsx",["472","473"],"import React, { useContext, useEffect, useState } from 'react'\r\nimport { Route } from 'react-router-dom';\r\nimport SpotifyWebApi from 'spotify-web-api-js';\r\nimport { CollectionTitle } from '../components/MainPageComponent/CollectionTitle';\r\nimport { PlayCard } from '../components/MainPageComponent/PlayCard';\r\nimport { TokenContext } from '../utilities/context';\r\n\r\ninterface CollectionProps {\r\n\r\n}\r\n\r\nexport const Collection: React.FC<CollectionProps> = ({}) => {\r\n    const [playlists, setPlaylists] = useState<SpotifyApi.PlaylistObjectSimplified[]>([]);\r\n    const [artists, setArtists] = useState<SpotifyApi.ArtistObjectFull[]>([]);\r\n    const [albums, setAlbums] = useState<SpotifyApi.SavedAlbumObject[]>([]);\r\n    const [podcasts, setPodcasts] = useState<SpotifyApi.ShowObjectSimplified[]>([]);\r\n\r\n    const token = useContext(TokenContext);\r\n    const spotifyApi = new SpotifyWebApi();\r\n\r\n    useEffect(() => {\r\n        if (token) {\r\n            spotifyApi.setAccessToken(token);\r\n\r\n            spotifyApi.getUserPlaylists()\r\n                .then(\r\n                    function(data) {\r\n                        setPlaylists(data.items);\r\n                    },\r\n                    function(error) {\r\n                        console.log(error);\r\n                    }\r\n                )\r\n            \r\n            spotifyApi.getMySavedShows()\r\n                .then(\r\n                    function(data) {\r\n                        setPodcasts(data.items);\r\n                    },\r\n                    function(error) {\r\n                        console.log(error);\r\n                    }\r\n                )\r\n            \r\n            spotifyApi.getFollowedArtists()\r\n                .then(\r\n                    function(data) {\r\n                        setArtists(data.artists.items);\r\n                    },\r\n                    function(error) {\r\n                        console.log(error);\r\n                    }\r\n                )\r\n\r\n            spotifyApi.getMySavedAlbums()\r\n                .then(\r\n                    function(data) {\r\n                        setAlbums(data.items)\r\n                    },\r\n                    function(error) {\r\n                        console.log(error);\r\n                    }\r\n                )\r\n        }\r\n    }, [])\r\n\r\n    \r\n    \r\n    return (\r\n        <div className='page-content' style={{paddingTop:'16px'}}>\r\n            <Route exact path='/collection/playlists'>\r\n                <CollectionTitle title=\"Playlists\"/>\r\n                <div className=\"browseGrid\">\r\n                    {playlists.map((playlist) => {\r\n                        return <PlayCard key={playlist.id} info={playlist} type={playlist.type}/> \r\n                    })}\r\n                </div>\r\n            </Route>\r\n            <Route exact path='/collection/podcasts'>\r\n                <CollectionTitle title=\"Podcasts\" />\r\n                <div className=\"browseGrid\">\r\n                    {podcasts.map((podcast: any) => {\r\n                        return <PlayCard key={podcast.show.id} info={podcast.show} type={podcast.show.type}/> \r\n                    })}\r\n                </div>\r\n            </Route>\r\n            <Route exact path='/collection/artists'>\r\n            <CollectionTitle title=\"Podcasts\" />\r\n                <div className=\"browseGrid\">\r\n                    {artists.map((artist) => {\r\n                        return <PlayCard key={artist.id} info={artist} type={artist.type}/> \r\n                    })}\r\n                </div>\r\n            </Route>\r\n            <Route exact path='/collection/albums'>\r\n                <div className=\"browseGrid\">\r\n                    {albums.map((album) => {\r\n                        return <PlayCard key={album.album.id} info={album.album} type={album.album.type}/> \r\n                    })}\r\n                </div>\r\n            </Route>\r\n        </div>\r\n    );\r\n}","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\pages\\Like.tsx",["474","475","476","477"],"import React, { useCallback, useContext, useEffect, useRef, useState } from 'react'\r\nimport SpotifyWebApi from 'spotify-web-api-js';\r\nimport { PageBanner } from '../components/MainPageComponent/PageBanner';\r\nimport { PlaylistFunc } from '../components/MainPageComponent/PlaylistFunc';\r\nimport { TrackList } from '../components/MainPageComponent/TrackList';\r\nimport { TokenContext, UserContext } from '../utilities/context';\r\nimport { useLoadScroll } from '../utilities/hooks/useLoadScroll';\r\nimport axios from \"axios\";\r\nimport { SinglePlaylistResponse } from '../utilities/types';\r\ninterface LikeProps {\r\n\r\n}\r\n\r\nexport const Like: React.FC<LikeProps> = ({}) => {\r\n    const [likedTracks, setLikedTracks] = useState<SpotifyApi.SavedTrackObject[]>([]);\r\n    const [numTracks,setNumTracks] = useState(0);\r\n    const spotifyApi = new SpotifyWebApi();\r\n    const token = useContext(TokenContext);\r\n    const user = useContext(UserContext);\r\n    const source = axios.CancelToken.source();\r\n    const [setNext, lastRef] = useLoadScroll(setLikedTracks, token, source);\r\n\r\n\r\n    const bannerInfo = {\r\n      name: 'Liked Songs',\r\n      description: '',\r\n      user: [user],\r\n      followers: 0,\r\n      primary_color: 'rgb(70, 62, 118)',\r\n      images: [{url: 'https://t.scdn.co/images/3099b3803ad9496896c43f22fe9be8c4.png'}],\r\n      release_date: '',\r\n      total: 0\r\n    } as SinglePlaylistResponse;\r\n\r\n    useEffect(() => {\r\n        if (token) {\r\n            spotifyApi.setAccessToken(token);\r\n\r\n            spotifyApi.getMySavedTracks()\r\n                .then(\r\n                    function(data) {\r\n                        console.log(data);\r\n                        setLikedTracks(data.items);\r\n                        setNumTracks(data.total);\r\n                        setNext(data.next);\r\n                    },\r\n                    function(error) {\r\n                        console.log(error);\r\n                    }\r\n                )\r\n        }\r\n    }, [])\r\n\r\n    const playTracks = (trackURI: string) => {\r\n        const track_uri = likedTracks.map((track) => {\r\n            return track.track.uri;\r\n        })\r\n        const uris = {\r\n            'uris': track_uri\r\n        }\r\n        spotifyApi.setAccessToken(token);\r\n        spotifyApi.play(uris)\r\n            .then((response) => {\r\n                console.log(response);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    const playTrack = (trackURI: string) => {\r\n        const body = {\r\n            uris: [trackURI]\r\n        }\r\n        spotifyApi.setAccessToken(token);\r\n        spotifyApi.play(body)\r\n            .then((response) => {\r\n                console.log(response);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className='listPage' style={{display: `${likedTracks.length === 0 ? 'none':'block'}`}}>\r\n            <PageBanner title={'playlist'} bannerInfo={bannerInfo} totalTracks={numTracks} /> \r\n            <div className=\"playListContent\">\r\n                <div className=\"playListOverlay\" style={{backgroundColor: `${bannerInfo.primary_color}`}} />\r\n                <PlaylistFunc type='playOnly' playContext={playTracks} />\r\n                <div className=\"page-content\">\r\n                    <TrackList ref={lastRef} tracks={likedTracks} playContextTrack={playTrack} styleName=\"simplify\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\PageBanner.tsx",["478","479","480"],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\PlaylistFunc.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\hooks\\useLoadScroll.ts",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\TrackList.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\TrackListItem.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\requestWithToken.ts",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\pages\\Playlist.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\hooks\\useID.ts",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\hooks\\useInfiScroll.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\pages\\Album.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\pages\\Artist.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\AboutMenu.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\ArtistRow.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\ArtistRowGrid.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\ArtistRowTitle.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\ArtistRowItem.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\RowGrid.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\pages\\Podcast.tsx",["481","482","483","484","485"],{"ruleId":"486","replacedBy":"487"},{"ruleId":"488","replacedBy":"489"},{"ruleId":"490","severity":1,"message":"491","line":6,"column":86,"nodeType":"492","messageId":"493","endLine":6,"endColumn":97},{"ruleId":"494","severity":1,"message":"495","line":90,"column":6,"nodeType":"496","endLine":90,"endColumn":8,"suggestions":"497"},{"ruleId":"490","severity":1,"message":"498","line":11,"column":26,"nodeType":"492","messageId":"493","endLine":11,"endColumn":38},{"ruleId":"490","severity":1,"message":"499","line":12,"column":10,"nodeType":"492","messageId":"493","endLine":12,"endColumn":23},{"ruleId":"490","severity":1,"message":"500","line":26,"column":10,"nodeType":"492","messageId":"493","endLine":26,"endColumn":17},{"ruleId":"494","severity":1,"message":"501","line":98,"column":8,"nodeType":"496","endLine":98,"endColumn":10,"suggestions":"502"},{"ruleId":"490","severity":1,"message":"491","line":7,"column":10,"nodeType":"492","messageId":"493","endLine":7,"endColumn":21},{"ruleId":"490","severity":1,"message":"503","line":1,"column":29,"nodeType":"492","messageId":"493","endLine":1,"endColumn":38},{"ruleId":"490","severity":1,"message":"504","line":1,"column":40,"nodeType":"492","messageId":"493","endLine":1,"endColumn":48},{"ruleId":"505","severity":1,"message":"506","line":7,"column":47,"nodeType":"507","messageId":"508","endLine":7,"endColumn":49},{"ruleId":"505","severity":1,"message":"506","line":8,"column":55,"nodeType":"507","messageId":"508","endLine":8,"endColumn":57},{"ruleId":"505","severity":1,"message":"506","line":9,"column":44,"nodeType":"507","messageId":"508","endLine":9,"endColumn":46},{"ruleId":"505","severity":1,"message":"506","line":12,"column":67,"nodeType":"507","messageId":"508","endLine":12,"endColumn":69},{"ruleId":"505","severity":1,"message":"506","line":8,"column":61,"nodeType":"507","messageId":"508","endLine":8,"endColumn":63},{"ruleId":"494","severity":1,"message":"509","line":13,"column":8,"nodeType":"496","endLine":13,"endColumn":10,"suggestions":"510"},{"ruleId":"490","severity":1,"message":"504","line":1,"column":32,"nodeType":"492","messageId":"493","endLine":1,"endColumn":40},{"ruleId":"490","severity":1,"message":"503","line":1,"column":17,"nodeType":"492","messageId":"493","endLine":1,"endColumn":26},{"ruleId":"490","severity":1,"message":"504","line":1,"column":28,"nodeType":"492","messageId":"493","endLine":1,"endColumn":36},{"ruleId":"490","severity":1,"message":"511","line":2,"column":9,"nodeType":"492","messageId":"493","endLine":2,"endColumn":20},{"ruleId":"490","severity":1,"message":"512","line":1,"column":17,"nodeType":"492","messageId":"493","endLine":1,"endColumn":27},{"ruleId":"494","severity":1,"message":"513","line":35,"column":6,"nodeType":"496","endLine":35,"endColumn":8,"suggestions":"514"},{"ruleId":"505","severity":1,"message":"506","line":8,"column":49,"nodeType":"507","messageId":"508","endLine":8,"endColumn":51},{"ruleId":"490","severity":1,"message":"515","line":7,"column":10,"nodeType":"492","messageId":"493","endLine":7,"endColumn":17},{"ruleId":"505","severity":1,"message":"506","line":13,"column":43,"nodeType":"507","messageId":"508","endLine":13,"endColumn":45},{"ruleId":"490","severity":1,"message":"516","line":20,"column":12,"nodeType":"492","messageId":"493","endLine":20,"endColumn":19},{"ruleId":"517","severity":1,"message":"518","line":43,"column":55,"nodeType":"519","messageId":"520","endLine":43,"endColumn":57},{"ruleId":"517","severity":1,"message":"518","line":55,"column":67,"nodeType":"519","messageId":"520","endLine":55,"endColumn":69},{"ruleId":"517","severity":1,"message":"518","line":67,"column":68,"nodeType":"519","messageId":"520","endLine":67,"endColumn":70},{"ruleId":"494","severity":1,"message":"495","line":89,"column":8,"nodeType":"496","endLine":89,"endColumn":15,"suggestions":"521"},{"ruleId":"494","severity":1,"message":"522","line":113,"column":8,"nodeType":"496","endLine":113,"endColumn":23,"suggestions":"523"},{"ruleId":"505","severity":1,"message":"506","line":9,"column":69,"nodeType":"507","messageId":"508","endLine":9,"endColumn":71},{"ruleId":"490","severity":1,"message":"512","line":1,"column":17,"nodeType":"492","messageId":"493","endLine":1,"endColumn":27},{"ruleId":"490","severity":1,"message":"503","line":1,"column":29,"nodeType":"492","messageId":"493","endLine":1,"endColumn":38},{"ruleId":"490","severity":1,"message":"504","line":1,"column":40,"nodeType":"492","messageId":"493","endLine":1,"endColumn":48},{"ruleId":"524","severity":1,"message":"525","line":25,"column":1,"nodeType":"526","messageId":"527","endLine":25,"endColumn":76},{"ruleId":"490","severity":1,"message":"528","line":19,"column":8,"nodeType":"492","messageId":"493","endLine":19,"endColumn":15},{"ruleId":"490","severity":1,"message":"529","line":3,"column":10,"nodeType":"492","messageId":"493","endLine":3,"endColumn":26},{"ruleId":"505","severity":1,"message":"506","line":8,"column":63,"nodeType":"507","messageId":"508","endLine":8,"endColumn":65},{"ruleId":"490","severity":1,"message":"530","line":1,"column":10,"nodeType":"492","messageId":"493","endLine":1,"endColumn":22},{"ruleId":"517","severity":1,"message":"531","line":14,"column":59,"nodeType":"519","messageId":"532","endLine":14,"endColumn":61},{"ruleId":"490","severity":1,"message":"512","line":1,"column":17,"nodeType":"492","messageId":"493","endLine":1,"endColumn":27},{"ruleId":"490","severity":1,"message":"533","line":3,"column":10,"nodeType":"492","messageId":"493","endLine":3,"endColumn":24},{"ruleId":"490","severity":1,"message":"499","line":2,"column":10,"nodeType":"492","messageId":"493","endLine":2,"endColumn":23},{"ruleId":"494","severity":1,"message":"534","line":24,"column":8,"nodeType":"496","endLine":24,"endColumn":13,"suggestions":"535"},{"ruleId":"536","severity":1,"message":"537","line":35,"column":38,"nodeType":"538","messageId":"539","endLine":35,"endColumn":39,"fix":"540"},{"ruleId":"517","severity":1,"message":"518","line":38,"column":58,"nodeType":"519","messageId":"520","endLine":38,"endColumn":60},{"ruleId":"494","severity":1,"message":"541","line":47,"column":8,"nodeType":"496","endLine":47,"endColumn":10,"suggestions":"542"},{"ruleId":"490","severity":1,"message":"543","line":4,"column":8,"nodeType":"492","messageId":"493","endLine":4,"endColumn":21},{"ruleId":"505","severity":1,"message":"506","line":11,"column":47,"nodeType":"507","messageId":"508","endLine":11,"endColumn":49},{"ruleId":"490","severity":1,"message":"543","line":2,"column":8,"nodeType":"492","messageId":"493","endLine":2,"endColumn":21},{"ruleId":"505","severity":1,"message":"506","line":12,"column":55,"nodeType":"507","messageId":"508","endLine":12,"endColumn":57},{"ruleId":"494","severity":1,"message":"541","line":65,"column":8,"nodeType":"496","endLine":65,"endColumn":10,"suggestions":"544"},{"ruleId":"490","severity":1,"message":"545","line":1,"column":17,"nodeType":"492","messageId":"493","endLine":1,"endColumn":28},{"ruleId":"490","severity":1,"message":"546","line":1,"column":53,"nodeType":"492","messageId":"493","endLine":1,"endColumn":59},{"ruleId":"505","severity":1,"message":"506","line":14,"column":43,"nodeType":"507","messageId":"508","endLine":14,"endColumn":45},{"ruleId":"494","severity":1,"message":"513","line":52,"column":8,"nodeType":"496","endLine":52,"endColumn":10,"suggestions":"547"},{"ruleId":"490","severity":1,"message":"543","line":2,"column":8,"nodeType":"492","messageId":"493","endLine":2,"endColumn":21},{"ruleId":"490","severity":1,"message":"548","line":4,"column":10,"nodeType":"492","messageId":"493","endLine":4,"endColumn":32},{"ruleId":"549","severity":1,"message":"550","line":75,"column":35,"nodeType":"551","endLine":75,"endColumn":111},{"ruleId":"490","severity":1,"message":"552","line":9,"column":10,"nodeType":"492","messageId":"493","endLine":9,"endColumn":20},{"ruleId":"505","severity":1,"message":"506","line":15,"column":49,"nodeType":"507","messageId":"508","endLine":15,"endColumn":51},{"ruleId":"490","severity":1,"message":"553","line":24,"column":10,"nodeType":"492","messageId":"493","endLine":24,"endColumn":17},{"ruleId":"490","severity":1,"message":"554","line":24,"column":19,"nodeType":"492","messageId":"493","endLine":24,"endColumn":26},{"ruleId":"494","severity":1,"message":"555","line":59,"column":6,"nodeType":"496","endLine":59,"endColumn":10,"suggestions":"556"},"no-native-reassign",["557"],"no-negated-in-lhs",["558"],"@typescript-eslint/no-unused-vars","'LinkContext' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'spotifyApi'. Either include it or remove the dependency array.","ArrayExpression",["559"],"'TokenContext' is defined but never used.","'getHashParams' is defined but never used.","'connect' is defined but never used.","React Hook useEffect has missing dependencies: 'apiUpdate', 'player', 'playerInitialize', 'spotifyApi', and 'token'. Either include them or remove the dependency array.",["560"],"'useEffect' is defined but never used.","'useState' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","React Hook useEffect has a missing dependency: 'resetQuery'. Either include it or remove the dependency array. If 'resetQuery' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["561"],"'useLocation' is defined but never used.","'useContext' is defined but never used.","React Hook useEffect has missing dependencies: 'setNext', 'spotifyApi', and 'token'. Either include them or remove the dependency array.",["562"],"'Loading' is defined but never used.","'loading' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["563"],"React Hook useEffect has a missing dependency: 'fpPlaylists'. Either include it or remove the dependency array. You can also do a functional update 'setFpPlaylists(f => ...)' if you only need 'fpPlaylists' in the 'setFpPlaylists' call.",["564"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Speaker' is defined but never used.","'CollectionHeader' is defined but never used.","'AnyTxtRecord' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'MessageContext' is defined but never used.","React Hook useEffect has a missing dependency: 'closeTip'. Either include it or remove the dependency array. If 'closeTip' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["565"],"dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"566","text":"567"},"React Hook useEffect has missing dependencies: 'spotifyApi' and 'token'. Either include them or remove the dependency array.",["568"],"'SpotifyWebApi' is defined but never used.",["569"],"'useCallback' is defined but never used.","'useRef' is defined but never used.",["570"],"'SinglePlaylistResponse' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ShowObject' is defined but never used.","'setNext' is assigned a value but never used.","'lastRef' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'bannerInfo', 'loggedIn', 'spotifyApi', and 'token'. Either include them or remove the dependency array. You can also do a functional update 'setBannerInfo(b => ...)' if you only need 'bannerInfo' in the 'setBannerInfo' call.",["571"],"no-global-assign","no-unsafe-negation",{"desc":"572","fix":"573"},{"desc":"574","fix":"575"},{"desc":"576","fix":"577"},{"desc":"578","fix":"579"},{"desc":"580","fix":"581"},{"desc":"582","fix":"583"},{"desc":"584","fix":"585"},[1256,1275],"\r\n                .",{"desc":"580","fix":"586"},{"desc":"580","fix":"587"},{"desc":"578","fix":"588"},{"desc":"589","fix":"590"},"Update the dependencies array to be: [spotifyApi]",{"range":"591","text":"592"},"Update the dependencies array to be: [apiUpdate, player, playerInitialize, spotifyApi, token]",{"range":"593","text":"594"},"Update the dependencies array to be: [resetQuery]",{"range":"595","text":"596"},"Update the dependencies array to be: [setNext, spotifyApi, token]",{"range":"597","text":"598"},"Update the dependencies array to be: [spotifyApi, token]",{"range":"599","text":"600"},"Update the dependencies array to be: [fpPlaylists, tempPlaylists]",{"range":"601","text":"602"},"Update the dependencies array to be: [closeTip, ref]",{"range":"603","text":"604"},{"range":"605","text":"600"},{"range":"606","text":"600"},{"range":"607","text":"598"},"Update the dependencies array to be: [bannerInfo, id, loggedIn, spotifyApi, token]",{"range":"608","text":"609"},[2953,2955],"[spotifyApi]",[2780,2782],"[apiUpdate, player, playerInitialize, spotifyApi, token]",[361,363],"[resetQuery]",[1140,1142],"[setNext, spotifyApi, token]",[3564,3571],"[spotifyApi, token]",[4437,4452],"[fpPlaylists, tempPlaylists]",[903,908],"[closeTip, ref]",[1652,1654],[2264,2266],[1954,1956],[2113,2117],"[bannerInfo, id, loggedIn, spotifyApi, token]"]