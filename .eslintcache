[{"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\index.tsx":"1","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\serviceWorker.ts":"2","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\App.tsx":"3","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\FooterComponent\\Player.tsx":"4","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\context.tsx":"5","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\getHashParams.tsx":"6","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\MainPage.tsx":"7","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\Loading.tsx":"8","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\FooterComponent\\Footer.tsx":"9","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\SidebarComponent\\Sidebar.tsx":"10","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\FooterComponent\\Banner.tsx":"11","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\UserPrompt.tsx":"12","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\UserInfo.tsx":"13","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\CollectionHeader.tsx":"14","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\HistoryToggle.tsx":"15","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\SearchBar.tsx":"16","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\SidebarComponent\\NavItem.tsx":"17","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\PageContent.tsx":"18","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\NavBar.tsx":"19","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\SidebarComponent\\NavList.tsx":"20","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\SidebarComponent\\PlayList.tsx":"21","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\SidebarComponent\\Install.tsx":"22","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Logo.tsx":"23","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\PromptButton.tsx":"24","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\HistoryButton.tsx":"25","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\pages\\Home.tsx":"26","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\SidebarComponent\\Playlists\\FeaturedPlaylists.tsx":"27","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\SidebarComponent\\Playlists\\NormalPlaylists.tsx":"28","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\index.tsx":"29","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\locale.tsx":"30","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\CollectionRow.tsx":"31","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\createRequest.tsx":"32","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\SidebarComponent\\Playlists\\CreatePlaylist.tsx":"33","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\SidebarComponent\\Playlists\\FeaturedItem.tsx":"34","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\SidebarComponent\\Playlists\\ListItem.tsx":"35","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Home.tsx":"36","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Install.tsx":"37","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Search.tsx":"38","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Library.tsx":"39","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Back.tsx":"40","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Create.tsx":"41","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Like.tsx":"42","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Play.tsx":"43","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Forward.tsx":"44","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\NSearch.tsx":"45","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Music2.tsx":"46","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Music.tsx":"47","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\PrevTrack.tsx":"48","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\CD.tsx":"49","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Heart.tsx":"50","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Shuffle.tsx":"51","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Repeat.tsx":"52","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\NextTrack.tsx":"53","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Pause.tsx":"54","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Volume.tsx":"55","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\CollectionTitle.tsx":"56","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\CollectionDisplay.tsx":"57","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\PlayCard.tsx":"58","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\CardDisplay.tsx":"59","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\CardInfo.tsx":"60","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\FooterComponent\\PlayerComponent\\CurrentlyPlayedSong.tsx":"61","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\FooterComponent\\PlayerComponent\\ControlButton.tsx":"62","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\FooterComponent\\PlayerComponent\\ProgressBar.tsx":"63","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\FooterComponent\\PlayerComponent\\ConnectDevices.tsx":"64","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\FooterComponent\\PlayerComponent\\ConnectDevicesItem.tsx":"65","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Devices.tsx":"66","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\timeFormat.ts":"67","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\types\\index.ts":"68","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\types\\spotify.ts":"69","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\pages\\Search.tsx":"70","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\pages\\Browse.tsx":"71","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\PageTitle.tsx":"72","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\BrowseCard.tsx":"73","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\pages\\SearchResult.tsx":"74","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\SearchRow.tsx":"75","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\SearchRowTitle.tsx":"76","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\SearchRowGrid.tsx":"77","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\tipContent.tsx":"78","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\pages\\Collection.tsx":"79","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\pages\\Like.tsx":"80","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\PageBanner.tsx":"81","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\PlaylistFunc.tsx":"82","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\hooks\\useLoadScroll.ts":"83","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\TrackList.tsx":"84","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\TrackListItem.tsx":"85","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\requestWithToken.ts":"86","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\pages\\Playlist.tsx":"87","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\hooks\\useID.ts":"88","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\hooks\\useInfiScroll.tsx":"89","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\pages\\Album.tsx":"90"},{"size":610,"mtime":1602829642783,"results":"91","hashOfConfig":"92"},{"size":5295,"mtime":1589746112329,"results":"93","hashOfConfig":"92"},{"size":4280,"mtime":1607898246227,"results":"94","hashOfConfig":"92"},{"size":16385,"mtime":1607439030597,"results":"95","hashOfConfig":"92"},{"size":1148,"mtime":1607477644959,"results":"96","hashOfConfig":"92"},{"size":410,"mtime":1607009256814,"results":"97","hashOfConfig":"92"},{"size":1362,"mtime":1607898246229,"results":"98","hashOfConfig":"92"},{"size":507,"mtime":1607098882502,"results":"99","hashOfConfig":"92"},{"size":223,"mtime":1604899735476,"results":"100","hashOfConfig":"92"},{"size":1483,"mtime":1607872490529,"results":"101","hashOfConfig":"92"},{"size":1118,"mtime":1603263431601,"results":"102","hashOfConfig":"92"},{"size":515,"mtime":1607009256811,"results":"103","hashOfConfig":"92"},{"size":2581,"mtime":1607009256809,"results":"104","hashOfConfig":"92"},{"size":1077,"mtime":1603438748906,"results":"105","hashOfConfig":"92"},{"size":384,"mtime":1603438748908,"results":"106","hashOfConfig":"92"},{"size":1362,"mtime":1607439030607,"results":"107","hashOfConfig":"92"},{"size":1315,"mtime":1607469732214,"results":"108","hashOfConfig":"92"},{"size":2012,"mtime":1607909630762,"results":"109","hashOfConfig":"92"},{"size":319,"mtime":1607439030603,"results":"110","hashOfConfig":"92"},{"size":262,"mtime":1607469732215,"results":"111","hashOfConfig":"92"},{"size":1416,"mtime":1607898246233,"results":"112","hashOfConfig":"92"},{"size":537,"mtime":1603263431602,"results":"113","hashOfConfig":"92"},{"size":2877,"mtime":1602829642770,"results":"114","hashOfConfig":"92"},{"size":1279,"mtime":1607446183171,"results":"115","hashOfConfig":"92"},{"size":502,"mtime":1603438748907,"results":"116","hashOfConfig":"92"},{"size":6148,"mtime":1607836245610,"results":"117","hashOfConfig":"92"},{"size":459,"mtime":1603178542060,"results":"118","hashOfConfig":"92"},{"size":942,"mtime":1607872490527,"results":"119","hashOfConfig":"92"},{"size":2023,"mtime":1607359660970,"results":"120","hashOfConfig":"92"},{"size":159,"mtime":1607030496874,"results":"121","hashOfConfig":"92"},{"size":685,"mtime":1607836245594,"results":"122","hashOfConfig":"92"},{"size":706,"mtime":1607836245613,"results":"123","hashOfConfig":"92"},{"size":449,"mtime":1603007428677,"results":"124","hashOfConfig":"92"},{"size":880,"mtime":1607728561227,"results":"125","hashOfConfig":"92"},{"size":586,"mtime":1607872490525,"results":"126","hashOfConfig":"92"},{"size":445,"mtime":1602056523945,"results":"127","hashOfConfig":"92"},{"size":690,"mtime":1602056523946,"results":"128","hashOfConfig":"92"},{"size":911,"mtime":1602056523963,"results":"129","hashOfConfig":"92"},{"size":492,"mtime":1602056523947,"results":"130","hashOfConfig":"92"},{"size":334,"mtime":1602056523939,"results":"131","hashOfConfig":"92"},{"size":480,"mtime":1602056523942,"results":"132","hashOfConfig":"92"},{"size":1598,"mtime":1602056523948,"results":"133","hashOfConfig":"92"},{"size":324,"mtime":1602056523959,"results":"134","hashOfConfig":"92"},{"size":333,"mtime":1602056523943,"results":"135","hashOfConfig":"92"},{"size":719,"mtime":1602056523955,"results":"136","hashOfConfig":"92"},{"size":796,"mtime":1602056523953,"results":"137","hashOfConfig":"92"},{"size":1182,"mtime":1602056523951,"results":"138","hashOfConfig":"92"},{"size":710,"mtime":1606537004625,"results":"139","hashOfConfig":"92"},{"size":829,"mtime":1602056523941,"results":"140","hashOfConfig":"92"},{"size":1376,"mtime":1602056523944,"results":"141","hashOfConfig":"92"},{"size":1786,"mtime":1602056523964,"results":"142","hashOfConfig":"92"},{"size":1514,"mtime":1602056523961,"results":"143","hashOfConfig":"92"},{"size":662,"mtime":1602056523957,"results":"144","hashOfConfig":"92"},{"size":700,"mtime":1602056523958,"results":"145","hashOfConfig":"92"},{"size":2236,"mtime":1602056523966,"results":"146","hashOfConfig":"92"},{"size":1008,"mtime":1607469732205,"results":"147","hashOfConfig":"92"},{"size":910,"mtime":1607836245589,"results":"148","hashOfConfig":"92"},{"size":3389,"mtime":1607477644955,"results":"149","hashOfConfig":"92"},{"size":435,"mtime":1604476474530,"results":"150","hashOfConfig":"92"},{"size":1024,"mtime":1604800968118,"results":"151","hashOfConfig":"92"},{"size":1715,"mtime":1607359660966,"results":"152","hashOfConfig":"92"},{"size":661,"mtime":1606537309317,"results":"153","hashOfConfig":"92"},{"size":3346,"mtime":1607439030601,"results":"154","hashOfConfig":"92"},{"size":3307,"mtime":1607098882501,"results":"155","hashOfConfig":"92"},{"size":633,"mtime":1606688502496,"results":"156","hashOfConfig":"92"},{"size":1260,"mtime":1607359660968,"results":"157","hashOfConfig":"92"},{"size":205,"mtime":1607359660974,"results":"158","hashOfConfig":"92"},{"size":26,"mtime":1607293832633,"results":"159","hashOfConfig":"92"},{"size":4880,"mtime":1607292756218,"results":"160","hashOfConfig":"92"},{"size":397,"mtime":1607439030613,"results":"161","hashOfConfig":"92"},{"size":1243,"mtime":1607469732218,"results":"162","hashOfConfig":"92"},{"size":463,"mtime":1607439030606,"results":"163","hashOfConfig":"92"},{"size":1213,"mtime":1607439030602,"results":"164","hashOfConfig":"92"},{"size":668,"mtime":1607439030614,"results":"165","hashOfConfig":"92"},{"size":1539,"mtime":1607439030609,"results":"166","hashOfConfig":"92"},{"size":561,"mtime":1607439030610,"results":"167","hashOfConfig":"92"},{"size":426,"mtime":1607439030610,"results":"168","hashOfConfig":"92"},{"size":1713,"mtime":1607446183178,"results":"169","hashOfConfig":"92"},{"size":3850,"mtime":1607836245605,"results":"170","hashOfConfig":"92"},{"size":3493,"mtime":1607836245610,"results":"171","hashOfConfig":"92"},{"size":3512,"mtime":1607910628045,"results":"172","hashOfConfig":"92"},{"size":4769,"mtime":1607728561212,"results":"173","hashOfConfig":"92"},{"size":1715,"mtime":1607898246237,"results":"174","hashOfConfig":"92"},{"size":1106,"mtime":1607911516127,"results":"175","hashOfConfig":"92"},{"size":5329,"mtime":1607836245605,"results":"176","hashOfConfig":"92"},{"size":743,"mtime":1607728561227,"results":"177","hashOfConfig":"92"},{"size":5816,"mtime":1607911524711,"results":"178","hashOfConfig":"92"},{"size":613,"mtime":1607836245613,"results":"179","hashOfConfig":"92"},{"size":1722,"mtime":1607910349832,"results":"180","hashOfConfig":"92"},{"size":4309,"mtime":1607911781388,"results":"181","hashOfConfig":"92"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},"e5hdjd",{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"191","usedDeprecatedRules":"184"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"184"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"184"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"184"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"184"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"184"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"184"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"184"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"184"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"184"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"184"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"184"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":4,"source":"247","usedDeprecatedRules":"184"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"184"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"184"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"184"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"184"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"184"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"184"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"330","usedDeprecatedRules":"184"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"184"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"184"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"184"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"184"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"373","messages":"374","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"385","messages":"386","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\index.tsx",[],["387","388"],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\serviceWorker.ts",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\App.tsx",["389","390"],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\FooterComponent\\Player.tsx",["391","392","393","394"],"import React, { forwardRef, Ref, useContext, useEffect, useImperativeHandle, useRef, useState } from 'react'\r\nimport SpotifyWebApi from 'spotify-web-api-js';\r\nimport { MessageContext, TokenContext } from '../../utilities/context';\r\nimport { getHashParams } from '../../utilities/getHashParams';\r\nimport { ConnectDevices } from './PlayerComponent/ConnectDevices';\r\nimport { ControlButton } from './PlayerComponent/ControlButton';\r\nimport { CurrentlyPlayedSong } from './PlayerComponent/CurrentlyPlayedSong';\r\nimport { ProgressBar } from './PlayerComponent/ProgressBar';\r\nimport {\r\n    SpotifyPlayerCallback,\r\n    WebPlaybackError,\r\n    WebPlaybackPlayer\r\n} from '../../utilities/types';\r\nimport timeFormat from '../../utilities/timeFormat';\r\nimport Heartbeat from \"react-heartbeat\";\r\n\r\ninterface PlayerProps {\r\n    token: string,\r\n}\r\n\r\ntype PlayerHandle = {\r\n    updateState: () => void\r\n}\r\n\r\nexport const Player = forwardRef((props: PlayerProps, ref: Ref<PlayerHandle>) => {\r\n    const { token } = props;\r\n    const spotifyApi = new SpotifyWebApi();\r\n    const [currPb, setCurrPb] = useState(0);\r\n    const [connectTip, setConnectTip] = useState(false);\r\n    const [volume, setVolume] = useState(1);\r\n    const [playbackState, setPlaybackState] = useState({\r\n\t\tplay: false,\r\n\t\tshuffle: false,\r\n\t\trepeat: \"off\",\r\n\t\tprogress: 0,\r\n\t\ttotal_time: 0,\r\n    });\r\n    const [playback,  setPlayback] = useState(0);\r\n    const [playInfo, setPlayInfo] = useState<any>({\r\n\t\talbum: {},\r\n\t\tartists: [],\r\n\t\tname: \"\",\r\n\t\tid: \"\",\r\n    });\r\n    const [recentlyPlayedTrack, setRecentlyPlayedTrack] = useState<any>({\r\n        album: {},\r\n        artists: [],\r\n        name: \"\",\r\n        id: \"\",\r\n        duration_ms: 0\r\n    });\r\n    \r\n    const timerRef = useRef(0);\r\n    let player : WebPlaybackPlayer;\r\n    let displayPlayer = useRef(null);\r\n\r\n    const setMessage = useContext(MessageContext);\r\n\r\n    useEffect(() => {\r\n        \r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        loadScript();\r\n\t\tapiUpdate();\r\n\r\n        window.onSpotifyWebPlaybackSDKReady = () => playerInitialize();\r\n\r\n        if (token) {\r\n            spotifyApi.setAccessToken(token);  \r\n            \r\n            spotifyApi.getMyRecentlyPlayedTracks().\r\n                then (\r\n                    function(data) {\r\n                        setRecentlyPlayedTrack(data.items[0].track);\r\n                        //setRecentTrackTotalTime(data.items[0].track.duration_ms)\r\n                    },\r\n                    function(err) {\r\n                        console.log(err);\r\n                    }\r\n                )\r\n        }\r\n\r\n        return () => {\r\n\t\t\tclearTimeout(timerRef.current);\r\n\t\t\tplayer.disconnect();\r\n\t\t};\r\n    }, [])\r\n\r\n    const loadScript = () => {\r\n\t\tconst script = document.createElement(\"script\");\r\n\r\n\t\tscript.id = \"spotify-player\";\r\n\t\tscript.type = \"text/javascript\";\r\n\t\tscript.async = false;\r\n\t\tscript.defer = true;\r\n\t\tscript.src = \"https://sdk.scdn.co/spotify-player.js\";\r\n\r\n\t\tdocument.body.appendChild(script);\r\n\t};\r\n\r\n    const playerInitialize = () => {\r\n        // @ts-ignore\r\n\t\tplayer = new window.Spotify.Player({\r\n\t\t\tname: \"Spotify Clone Player\",\r\n\t\t\tgetOAuthToken: (cb: SpotifyPlayerCallback) => {\r\n\t\t\t\tcb(token);\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// Error handling\r\n\t\tplayer.addListener(\"initialization_error\", (error: WebPlaybackError) => {\r\n\t\t\tsetMessage(error.message);\r\n\t\t});\r\n\t\tplayer.addListener(\"authentication_error\", (error: WebPlaybackError) => {\r\n\t\t\tsetMessage(error.message);\r\n\t\t});\r\n\t\tplayer.addListener(\"account_error\", (error: WebPlaybackError) => {\r\n\t\t\tsetMessage(error.message);\r\n\t\t});\r\n\t\tplayer.addListener(\"playback_error\", (error: WebPlaybackError) => {\r\n\t\t\tsetMessage(error.message);\r\n\t\t});\r\n\r\n\t\t// Playback status updates\r\n\t\tplayer.addListener(\"player_state_changed\", (state) => {\r\n\t\t\t\r\n\t\t\ttry {\r\n                if (state) {\r\n                    console.log(state);\r\n                    const {\r\n                        duration,\r\n                        position,\r\n                        paused,\r\n                        shuffle,\r\n                        repeat_mode,\r\n                        track_window,\r\n                    } = state;\r\n                    const { current_track } = track_window;\r\n    \r\n                    setPlayInfo(current_track);\r\n                    setPlayback(position / duration);\r\n                    setPlaybackState((state) => ({\r\n                        ...state,\r\n                        play: !paused,\r\n                        shuffle: shuffle,\r\n                        repeat: repeat_mode === 0 ? \"off\" : (repeat_mode === 1 ? \"context\" : \"track\"),\r\n                        progress: position,\r\n                        total_time: duration,\r\n                    }));\r\n                }\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Ready\r\n\t\tplayer.addListener(\"ready\", ({ device_id }) => {\r\n            const tipAccess = localStorage.getItem(\"tipAccess\");\r\n\t\t\tif (!tipAccess) {\r\n\t\t\t\tlocalStorage.setItem(\"tipAccess\", \"true\");\r\n\t\t\t\tsetConnectTip(true);\r\n            }\r\n\t\t});\r\n\r\n\t\t// Not Ready\r\n\t\tplayer.addListener(\"not_ready\", ({ device_id }) => {\r\n\t\t\tconsole.log(\"Device ID has gone offline\", device_id);\r\n\t\t});\r\n\r\n\t\t// Connect to the player!\r\n\t\tplayer.connect();\r\n\t};\r\n\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n\t\tupdateState: () => {\r\n\t\t\tsetPlaybackState((state) => ({ ...state, play: true }));\r\n\t\t\tupdateState();\r\n\t\t},\r\n\t}));\r\n\r\n    //Use for other components to update the player state only if not connected to the web player\r\n    const updateState = () => {\r\n        if (!displayPlayer.current && !player) {\r\n            apiUpdate();\r\n        }\r\n    };\r\n\r\n    const apiUpdate = () => {\r\n        if (timerRef.current) {\r\n\t\t\tclearTimeout(timerRef.current);\r\n\t\t}\r\n        spotifyApi.setAccessToken(token);\r\n        spotifyApi.getMyCurrentPlaybackState()\r\n            .then (\r\n                function(data) {\r\n                    if (Object.keys(data).length === 0) {\r\n                        setMessage(\"There is no active device\");\r\n                        // setConnectTip(true);\r\n                    } else {\r\n                        const {\r\n                            repeat_state,\r\n\t\t\t\t\t\t    shuffle_state,\r\n\t\t\t\t\t\t    is_playing,\r\n\t\t\t\t\t\t    progress_ms,\r\n\t\t\t\t\t\t    item,\r\n\t\t\t\t\t\t    device,\r\n                        } = data;\r\n                        // Assuming item in data is not null\r\n                        setPlayback(progress_ms! / item!.duration_ms);\r\n\r\n                        timerRef.current = window.setTimeout(\r\n                            () => updateState(),\r\n                            item!.duration_ms - progress_ms! + 10\r\n                        );\r\n\r\n                        setVolume(device!.volume_percent! / 100);\r\n                        setPlaybackState({\r\n                            ...playbackState,\r\n                            play: is_playing,\r\n                            shuffle: shuffle_state,\r\n                            repeat: repeat_state,\r\n                            progress: progress_ms === null ? 0 : progress_ms,\r\n                            total_time: item!.duration_ms,\r\n                        });\r\n                        setPlayInfo(item!);\r\n                    }\r\n                },\r\n                function(error) {\r\n                    setMessage(\r\n\t\t\t\t\t\t`ERROR: server response with ${error}. Player feature is unavailable!`\r\n\t\t\t\t\t);\r\n                }\r\n            )\r\n    };\r\n    \r\n    const updatePlayback = () => {\r\n\t\tconst interval = 500 / playbackState.total_time;\r\n\t\tsetPlayback((playback) => playback + interval);\r\n\t\tsetPlaybackState((state) => ({ ...state, progress: state.progress + 500 }));\r\n    };\r\n    \r\n    const syncPlayback = (ratio: number) => {\r\n        const currTime = Math.round(ratio * playbackState.total_time);\r\n        spotifyApi.setAccessToken(token);\r\n        spotifyApi.seek(currTime)\r\n            .then((response) => {\r\n                setPlayback(ratio);\r\n\t\t\t\tsetPlaybackState((state) => ({ ...state, progress: currTime }));\r\n\t\t\t\tupdateState();\r\n            })\r\n            .catch((error) => {\r\n                setMessage(`ERROR: ${error}`);\r\n            });\r\n        setCurrPb(0);\r\n        console.log(playbackState);\r\n    }\r\n\r\n    const syncVolume = (ratio: number) => {\r\n        const newVolume = Math.round(ratio * 100);\r\n        // Sync volume with playback on active device\r\n        spotifyApi.setAccessToken(token);\r\n        spotifyApi.setVolume(newVolume)\r\n\t\t\t.then((response) => {\r\n                setVolume(ratio);\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n                setMessage(`ERROR: ${error}`);\r\n            });\r\n    };\r\n    \r\n    const shuffle = () => {\r\n        spotifyApi.setAccessToken(token);\r\n        spotifyApi.setShuffle(!playbackState.shuffle)\r\n            .then ((response) => {\r\n\t\t\t\tsetPlaybackState((state) => ({ ...state, shuffle: !state.shuffle }));\r\n\t\t\t\tupdateState();\r\n            })\r\n            .catch ((error) => {\r\n                setMessage(`ERROR: ${error}`);\r\n            })\r\n    }\r\n\r\n    const prev = () => {\r\n        spotifyApi.setAccessToken(token);\r\n        spotifyApi.skipToPrevious()\r\n            .then ((response) => {\r\n                apiUpdate();\r\n            })\r\n            .catch ((error) => {\r\n                setMessage(`ERROR: ${error}`);\r\n            })\r\n    }\r\n\r\n    const next = () => {\r\n        spotifyApi.setAccessToken(token);\r\n        spotifyApi.skipToNext()\r\n            .then((response) => {\r\n                apiUpdate();\r\n            })\r\n            .catch((error) => {\r\n                setMessage(`ERROR: ${error}`);\r\n            })\r\n    }\r\n\r\n    const play = () => {\r\n        spotifyApi.setAccessToken(token);\r\n        if (playbackState.play) {\r\n            spotifyApi.pause()\r\n                .then((response) => {\r\n                    setPlaybackState((state) => ({ ...state, play: !state.play }));\r\n\t\t\t\t\tupdateState();\r\n                })\r\n                .catch((error) => {\r\n                    setMessage(`ERROR: ${error}`);\r\n                })\r\n        } else {\r\n            spotifyApi.play()\r\n                .then((response) => {\r\n                    setPlaybackState((state) => ({ ...state, play: !state.play }));\r\n                    updateState();\r\n                })\r\n                .catch((error) => {\r\n                    setMessage(`ERROR: ${error}`);\r\n                })\r\n        }\r\n    }\r\n\r\n    const repeat = () => {\r\n        spotifyApi.setAccessToken(token);\r\n        if (playbackState.repeat === \"off\"){\r\n            spotifyApi.setRepeat('context')\r\n                .then((response) => {\r\n                    setPlaybackState((state) => ({ ...state, repeat: \"context\" }));\r\n\t\t\t\t\tupdateState();\r\n                })\r\n                .then((error) => {\r\n                    setMessage(`ERROR: ${error}`);\r\n                })\r\n        } else if (playbackState.repeat === \"context\"){\r\n            spotifyApi.setRepeat('track')\r\n                .then((response) => {\r\n                    setPlaybackState((state) => ({ ...state, repeat: \"track\" }));\r\n\t\t\t\t\tupdateState();\r\n                })\r\n                .then((error) => {\r\n                    setMessage(`ERROR: ${error}`);\r\n                })\r\n        } else if (playbackState.repeat === \"track\"){\r\n            console.log(\"test\")\r\n            spotifyApi.setRepeat('off')\r\n                .then((response) => {\r\n                    setPlaybackState((state) => ({ ...state, repeat: \"off\" }));\r\n                    updateState();\r\n                })\r\n                .then((error) => {\r\n                    setMessage(`ERROR: ${error}`);\r\n                })\r\n        }\r\n    }\r\n\r\n    const scrubPlayback = (ratio: number) => {\r\n\t\tconst time = ratio * playbackState.total_time;\r\n\t\tsetCurrPb(time);\r\n\t};\r\n\r\n    return (\r\n        <>\r\n            {playbackState.play ? (\r\n\t\t\t\t<Heartbeat heartbeatFunction={updatePlayback} heartbeatInterval={500} />\r\n\t\t\t) : null}\r\n            <div className=\"player\">\r\n                <div className=\"player-left\">\r\n                    <CurrentlyPlayedSong playingSongInfo={playInfo.name !== \"\" ? playInfo : recentlyPlayedTrack} /> \r\n                </div>\r\n                <div className=\"player-center\">\r\n                    <div className=\"player-control-buttons\">\r\n                        <ControlButton\r\n                            title=\"Toggle Shuffle\"\r\n                            icon=\"Shuffle\"\r\n                            active={playbackState.shuffle}\r\n                            onClick={shuffle}\r\n                        />\r\n                        <ControlButton\r\n                            title=\"Previous\"\r\n                            icon=\"PrevTrack\"\r\n                            size=\"x-smaller\"\r\n                            onClick={prev}\r\n                        />\r\n                        <ControlButton\r\n                            title={playbackState.play ? \"Pause\" : \"Play\"}\r\n\t\t\t\t\t\t\ticon={playbackState.play ? \"Pause\" : \"Play\"}\r\n\t\t\t\t\t\t\tsize={playbackState.play ? \"smaller\" : \"larger\"} \r\n                            extraClass=\"circle-border\"\r\n                            onClick={play}\r\n                        />\r\n                        <ControlButton\r\n                            title=\"Next\"\r\n                            icon=\"NextTrack\"\r\n                            size=\"x-smaller\"\r\n                            onClick={next}\r\n                        />\r\n                        <ControlButton\r\n                            title=\"Toggle Repeat\"\r\n                            icon=\"Repeat\"\r\n                            onClick={repeat}\r\n                        />\r\n                    </div>\r\n                    <div className=\"player-playback\" draggable=\"false\">\r\n                        <div className=\"playback-time\" draggable=\"false\">\r\n                            {currPb > 0\r\n                                ? timeFormat(currPb)\r\n                                : timeFormat(playbackState.progress)\r\n                            }\r\n                        </div>\r\n                        <ProgressBar\r\n                            extraClass=\"playback\"\r\n                            value={playback}\r\n                            engageClass=\"engage\"\r\n                            setValue={(ratio) => syncPlayback(ratio)}\r\n                            scrubFunction={scrubPlayback}\r\n                        />\r\n                        <div className=\"playback-time\" draggable=\"false\">\r\n                            {playbackState.total_time !== 0\r\n                                ? timeFormat(playbackState.total_time)\r\n                                : timeFormat(recentlyPlayedTrack.duration_ms)\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"player-right\">\r\n                    <div className=\"extra-controls\">\r\n                        <span className=\"connect-devices-wrapper\">\r\n                            {connectTip && (\r\n                                <ConnectDevices\r\n                                    token={token}\r\n                                    closeTip={() => setConnectTip(false)}\r\n                                />\r\n                            )}\r\n                            <ControlButton\r\n                                title=\"Devices\"\r\n                                icon=\"Devices\"\r\n                                size=\"x-larger\"\r\n                                onClick={() => setConnectTip(!connectTip)}\r\n                                active={playbackState.play}\r\n                            />\r\n                        </span>\r\n\r\n                        <div className=\"volume-control\">\r\n                            <ControlButton\r\n                                title=\"Volume\"\r\n                                icon=\"Volume\"\r\n                                size=\"x-larger\"\r\n                                extraClass=\"volume\"\r\n                            />\r\n                            <div style={{ width: \"100%\" }}>\r\n                                <ProgressBar\r\n                                    extraClass=\"volume\"\r\n                                    value={volume}\r\n                                    engageClass=\"engage\"\r\n                                    setValue={(ratio) => syncVolume(ratio)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> \r\n        </>\r\n    );\r\n})","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\context.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\getHashParams.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\MainPage.tsx",["395"],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\Loading.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\FooterComponent\\Footer.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\SidebarComponent\\Sidebar.tsx",["396","397"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport Logo from \"../../icons/Logo\";\r\nimport NavList from './NavList';\r\nimport { NavItem } from './NavItem';\r\nimport { PlayList } from './PlayList';\r\nimport { Install } from './Install';\r\nimport { LoginContext } from '../../utilities/context';\r\nimport { generateContent } from '../../utilities/tipContent';\r\nimport ReactToolTip from 'react-tooltip';\r\n\r\ninterface SideBarProps {\r\n    \r\n}\r\n\r\nconst SideBar: React.FC<SideBarProps> = () => {\r\n    const loggedIn = useContext(LoginContext);\r\n    return (\r\n        <>\r\n            <div className=\"sidebar\">\r\n                <Logo />\r\n                <NavList>\r\n                    <NavItem to=\"/\" exact={true} iconName='Home' label='Home' />\r\n                    <NavItem to=\"/search\" exact={true} iconName='Search' label='Search'  />\r\n                    <NavItem to=\"/collection\" exact={false} iconName='Library' label='Your Library' dataTip='library' dataFor='tooltip' dataEvent='click' style={{ pointerEvents: loggedIn? 'auto':'none'}} />\r\n                </NavList>\r\n                \r\n                <PlayList />\r\n                {loggedIn ? <Install /> : null}\r\n            </div>\r\n            <ReactToolTip className='toolTip' id='tooltip' disable={loggedIn} place='right' effect='solid' globalEventOff='click' backgroundColor= '#2e77d0' getContent={dataTip => generateContent(dataTip)} clickable={true}/>\r\n        </>\r\n        \r\n    );\r\n}\r\n\r\nexport default SideBar;","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\FooterComponent\\Banner.tsx",["398"],"import React from 'react'\r\n\r\ninterface BannerProps {\r\n\r\n}\r\n\r\nexport const Banner: React.FC<BannerProps> = ({}) => {\r\n    return (\r\n        <div className='CTA-banner'>\r\n            <div className=\"cta-content\">\r\n                <h2 style={{\r\n                    fontSize: '12px',\r\n                    fontWeight: 400,\r\n                    lineHeight: '16px',\r\n                    letterSpacing: '.1em',\r\n                    textTransform: 'uppercase',\r\n                    marginBottom: '4px'\r\n                }}>A spotify clone</h2>\r\n                <h3 style={{\r\n                    fontSize: '16px',\r\n                    fontWeight: 500,\r\n                    lineHeight: '24px',\r\n                    letterSpacing: 'normal',\r\n                    textTransform: 'none'\r\n                }}>This is a clone website intended to be an exercise in web application building - not for profit/commercial use. If you are looking for the real app go to open.spotify.com</h3>\r\n            </div>\r\n            {/* <PromptButton to='https://spotify.com/signup' name='Sign up free' styleName='CTA'/> */}\r\n        </div>\r\n    );\r\n}","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\UserPrompt.tsx",["399"],"import React from 'react'\r\nimport { PromptButton } from './PromptButton';\r\n\r\ninterface UserPromptProps {\r\n\r\n}\r\n\r\nexport const UserPrompt: React.FC<UserPromptProps> = ({}) => {\r\n    \r\n    return (\r\n        <div className='UserPrompt'>\r\n            <PromptButton to='https://www.spotify.com/us/signup/?forward_url=https%3A%2F%2Fopen.spotify.com%2F' name='Sign Up' styleName='dark'/>\r\n            <PromptButton to={`${process.env.REACT_APP_BACK_URI}/login`} name='Log In' styleName='light'/>\r\n        </div>\r\n    );\r\n}","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\UserInfo.tsx",["400"],"import React, { useContext, useState } from 'react';\r\nimport {UserContext} from '../../utilities/context';\r\nimport axios from 'axios';\r\n\r\ninterface UserInfoProps {\r\n\r\n}\r\n\r\nconst UserInfo: React.FC<UserInfoProps> = ({}) => {\r\n    const [open, setOpen] = useState(false);\r\n    const {images, display_name, id} = useContext(UserContext);\r\n    let img_url;\r\n    if (images.length > 0) {\r\n        img_url = images[0].url\r\n    }\r\n\r\n    const logout = () => {\r\n        axios(`${process.env.REACT_APP_BACK_URI}/logout`, {withCredentials: true})\r\n            .then(response => {\r\n                window.location.reload()\r\n            })\r\n            .catch(error => console.log(error))\r\n    }\r\n\r\n    return (\r\n        <div style={divStyle}>\r\n            <button className='UserInfoButton no-outline' onClick={() => setOpen(!open)}>\r\n                <figure style={figureStyle}>\r\n                    <img loading='eager' src={img_url} style={imgStyle} alt=''></img>\r\n                </figure>\r\n                <span className='UserInfoSpan mediaNoneXL'>\r\n                    {display_name}\r\n                </span>\r\n                <span style={spanStyle} className='mediaNoneXL'> \r\n                    {open? <p>&#9650;</p>:<p>&#9660;</p>}\r\n                </span>\r\n            </button>\r\n            <ul className='UserInfoOptions' style={{display: open?'block':'none'}}>\r\n                <li>\r\n                    <a href=\"https://www.spotify.com/account/?utm_source=play&amp;utm_campaign=wwwredirect\" target=\"_blank\" rel=\"noopener noreferrer\">Account</a>\r\n                </li>\r\n                <li>\r\n                    <a href={`/user/${id}`}>Profile</a>\r\n                </li>\r\n                <li>\r\n                    <button onClick={logout}>Log out</button>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\n//type check does not let like this so this is a temp fix, i guess\r\nconst divStyle = {\r\n    position: \"relative\" as \"relative\",\r\n    whiteSpace: \"nowrap\" as \"nowrap\"\r\n}\r\n\r\nconst figureStyle = {\r\n    width: '28px' as '28px',\r\n    height: '28px' as '28px',\r\n    overflow: 'hidden' as 'hidden',\r\n    position: 'relative' as 'relative',\r\n    display: 'inline-block' as 'inline-block'\r\n}\r\n\r\nconst imgStyle = {\r\n    borderRadius: '50%' as '50%',\r\n    width: '100%' as '100%',\r\n    height: '100%' as '100%',\r\n    objectFit: 'cover' as 'cover',\r\n    objectPosition: 'center center' as 'center center'\r\n}\r\n\r\n\r\nconst spanStyle = {\r\n    marginRight: '6px' as '6px',\r\n    marginLeft: '8px' as '8px',\r\n    fontSize: '10px' as '10px'\r\n}\r\n\r\nexport default UserInfo;","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\CollectionHeader.tsx",["401"],"import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\ninterface CollectionHeaderProps {\r\n\r\n}\r\n\r\nconst activeStyle = {\r\n    backgroundColor: '#333'\r\n}\r\n\r\nexport const CollectionHeader: React.FC<CollectionHeaderProps> = ({}) => {\r\n    return (\r\n        <div className='cNavWrapper'>\r\n            <nav className='cNav'>\r\n                <ul className='cNavList'>\r\n                    <li>\r\n                        <NavLink to='/collection/playlists' activeStyle={activeStyle}>Playlists</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to='/collection/podcasts' activeStyle={activeStyle}>Podcasts</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to='/collection/artists' activeStyle={activeStyle}>Artists</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to='/collection/albums' activeStyle={activeStyle}>Albums</NavLink>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    );\r\n}","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\HistoryToggle.tsx",["402"],"import React from 'react'\r\nimport { HistoryButton } from './HistoryButton';\r\n\r\ninterface HistoryToggleProps {\r\n\r\n}\r\n\r\nexport const HistoryToggle: React.FC<HistoryToggleProps> = ({}) => {\r\n        return (\r\n            <div className='HistoryNav'>\r\n                <HistoryButton property='Back'/>\r\n                <HistoryButton property='Forward'/>\r\n            </div>\r\n        );\r\n}","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\SearchBar.tsx",["403"],"import React, { useEffect } from 'react'\r\nimport Icon from '../../icons';\r\n\r\ninterface SearchBarProps {\r\n    query: string,\r\n    setQuery: React.Dispatch<React.SetStateAction<string>>,\r\n    resetQuery: Function\r\n}\r\n\r\nexport const SearchBar: React.FC<SearchBarProps> = ({ query, setQuery, resetQuery }) => {\r\n    useEffect(() => {\r\n        resetQuery();\r\n    }, [])\r\n    \r\n    return (\r\n        <div className=\"SearchContainer\">\r\n            <div className='SearchBar'>\r\n                <div style={{\r\n                    position:'absolute',\r\n                    top: '0',\r\n                    bottom: '0',\r\n                    left: '12px',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    cursor:'text'\r\n                }}>\r\n                    <Icon name=\"N-Search\" /> \r\n                </div>\r\n                <input className= 'SearchInput no-outline' \r\n                        maxLength={80} \r\n                        autoCorrect='off' \r\n                        autoCapitalize='off' \r\n                        spellCheck='false'\r\n                        autoFocus={true}\r\n                        placeholder='Search for Artists, Songs, or Podcasts'\r\n                        value={query}\r\n                        onChange={e => setQuery(e.target.value)}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\SidebarComponent\\NavItem.tsx",["404"],"import React, { CSSProperties, useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Icon from '../../icons';\r\n\r\ninterface NavItemProps {\r\n    to: string;\r\n    exact: boolean;\r\n    label: string;\r\n    iconName: string;\r\n    dataTip?: string;\r\n    dataFor?: string;\r\n    dataEvent?: string;\r\n    style?: CSSProperties;\r\n}\r\n\r\nexport const NavItem: React.FC<NavItemProps> = ({to, exact, label, iconName, dataTip, dataEvent, dataFor, style}) => {\r\n    return (\r\n        <li className='NavItem' data-tip={dataTip} data-for={dataFor} data-event={dataEvent}>\r\n            {exact \r\n                ?   <NavLink exact to={to} className=\"nav-link\" activeClassName='activeMainNav' style={style}>\r\n                        <div className=\"nav-icon\">\r\n                            <Icon name={iconName} />\r\n                        </div>\r\n                        <span>{label}</span>\r\n                    </NavLink>\r\n                :   <NavLink to={to} className=\"nav-link\" activeClassName='activeMainNav' style={style}>\r\n                        <div className=\"nav-icon\">\r\n                            <Icon name={iconName} />\r\n                        </div>\r\n                        <span>{label}</span>\r\n                    </NavLink>\r\n            }\r\n            \r\n            \r\n        </li>\r\n    );\r\n}","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\PageContent.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\NavBar.tsx",["405","406","407"],"import React, { useEffect, useState } from 'react';\r\nimport {useLocation} from 'react-router-dom';\r\n\r\ninterface NavBarProps {\r\n    children: any\r\n}\r\n\r\n\r\nexport const NavBar: React.FC<NavBarProps> = ({children}) => {\r\n    return (\r\n        <div className=\"header-bar\" >\r\n            {children}\r\n        </div>\r\n    );\r\n}","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\SidebarComponent\\NavList.tsx",["408"],"import React, { useContext } from 'react';\r\n\r\ninterface NavListProps {\r\n\r\n}\r\n\r\nconst NavList: React.FC<NavListProps> = ({children}) => {\r\n    return (\r\n        <ul className=\"nav-list\">\r\n            {children}\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default NavList;","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\SidebarComponent\\PlayList.tsx",["409"],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\SidebarComponent\\Install.tsx",["410"],"import React from 'react'\r\nimport Icon from '../../icons';\r\n\r\ninterface InstallProps {\r\n\r\n}\r\n\r\nexport const Install: React.FC<InstallProps> = ({}) => {\r\n    return (\r\n        <div className='cta-wrapper'>\r\n            <a href=\"https://spotify.com/download\" className='nav-link'>\r\n                <div className=\"nav-icon install-icon\">\r\n                    <Icon name='Install' viewBox='0 0 20 20' width='20px' height='20px'/>\r\n                </div>\r\n                <span>Install App</span>\r\n            </a>\r\n        </div>\r\n    );\r\n}","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Logo.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\PromptButton.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\HistoryButton.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\pages\\Home.tsx",["411","412","413","414","415","416","417","418","419","420"],"import React, { useEffect, useState, useContext } from 'react'\r\nimport { CollectionRow } from '../components/MainPageComponent/CollectionRow';\r\nimport SpotifyWebApi from 'spotify-web-api-js';\r\nimport { LoginContext, TokenContext } from '../utilities/context';\r\nimport getLocale from '../utilities/locale';\r\nimport createRequest from '../utilities/createRequest';\r\nimport { Loading } from '../components/MainPageComponent/Loading';\r\n\r\ninterface HomeProps {\r\n\r\n}\r\n\r\nexport const Home: React.FC<HomeProps> = ({}) => {\r\n    const [recentlyPlaylist, setRecentlyPlaylist] = useState<SpotifyApi.TrackObjectSimplified[]>([]);\r\n    const [newReleases, setNewReleases] = useState<any[]>([]);\r\n    const [topTracksAndArtists, setTop] = useState<any[]>([]);\r\n    const [collections, setCollections] = useState<any[]>([]);\r\n    const [tempPlaylists, setTempPlaylists] = useState<any>({});\r\n    const [fpPlaylists, setFpPlaylists] = useState<any[]>([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const loggedIn = useContext(LoginContext);\r\n    const token = useContext(TokenContext);\r\n    const spotifyApi = new SpotifyWebApi();\r\n\r\n    useEffect(() => {\r\n        if (token) {\r\n            spotifyApi.setAccessToken(token);\r\n\r\n            spotifyApi.getNewReleases().\r\n                then (\r\n                    function(data) {\r\n                        setNewReleases(data.albums.items as any)\r\n                    },\r\n                    function(err) {\r\n                        console.log(err);\r\n                    }\r\n                )\r\n\r\n            spotifyApi.getMyRecentlyPlayedTracks().\r\n                then (\r\n                    function(data) {\r\n                        const recentlyPlaylistList: SpotifyApi.TrackObjectSimplified[] = [];\r\n                        data.items.map((track, index) => {\r\n                            recentlyPlaylistList.push(track.track as SpotifyApi.TrackObjectSimplified);\r\n                        })\r\n                        setRecentlyPlaylist(recentlyPlaylistList);\r\n                    },\r\n                    function(err) {\r\n                        console.log(err);\r\n                    }\r\n                )\r\n            spotifyApi.getMyTopTracks().\r\n                then (\r\n                    function(data) {\r\n                        data.items.slice(0, 5).map((track, index) => {\r\n                            setTop(prevTop => ([...prevTop, track]));\r\n                        });\r\n                    },\r\n                    function(err) {\r\n                        console.log(err);\r\n                    }\r\n                )\r\n\r\n            spotifyApi.getMyTopArtists().\r\n                then (\r\n                    function(data) {\r\n                        data.items.slice(0, 5).map((artist, index) => {\r\n                            setTop(prevTop => ([...prevTop, artist]));\r\n                        });\r\n                    },\r\n                    function(err) {\r\n                        console.log(err);\r\n                    }\r\n                )\r\n        } else {\r\n            const [language, locale] = getLocale()\r\n            const {source, makeRequest} = createRequest(`https://api.spotify.com/v1/browse/categories?limit=6&country=${locale}&locale=${language}_${locale}`)\r\n\r\n            makeRequest()\r\n                .then((data: any) => {\r\n                    setCollections(data.categories.items);\r\n                })\r\n                .catch((error: any) => console.log(error))\r\n            \r\n            \r\n            return () => source.cancel()\r\n        }\r\n        setLoading(false);\r\n    }, [token])\r\n\r\n    useEffect(() => { \r\n        topTracksAndArtists.sort((a, b) => (a.popularity > b.popularity) ? -1 : 1);\r\n    }, [topTracksAndArtists])\r\n\r\n    useEffect(() => {\r\n        collections.map((collection) => {\r\n            const {name, id} = collection\r\n            var rq = createRequest(`https://api.spotify.com/v1/browse/categories/${id}/playlists?limit=9`)\r\n            rq.makeRequest()\r\n                .then((data) => {\r\n                    const playlists = data.playlists.items\r\n                    setTempPlaylists(() => ({[name]: {id, playlists}}))\r\n                })\r\n                .catch((error) => console.log(error))\r\n            return null\r\n        })\r\n        // setLoading(false);\r\n    }, [collections])\r\n    \r\n    useEffect(() => {\r\n        setFpPlaylists({...fpPlaylists, ...tempPlaylists});\r\n        // setLoading(false);\r\n    }, [tempPlaylists])\r\n\r\n    return (\r\n        <>\r\n            {loading || !recentlyPlaylist || !newReleases || !topTracksAndArtists\r\n            ?   <Loading type='home'/>\r\n            :   <div className=\"page-content\">\r\n                    <div className='pageContent'>\r\n                        {loggedIn \r\n                            ?   <>\r\n                                    <CollectionRow name='Recently played' id={null} playlists={recentlyPlaylist} />\r\n                                    <CollectionRow name='Jump back in' id={null} playlists={topTracksAndArtists} description={\"Your top listens from the past few months.\"} />\r\n                                    <CollectionRow name='New releases for you' id={null} playlists={newReleases} />\r\n                                </>\r\n                            :   <>\r\n                                    <CollectionRow name='Uniquely Yours' id={null} playlists={[{id:'', to:'/tracks', description:'', name:'Liked Songs', images:[{url: 'https://misc.scdn.co/liked-songs/liked-songs-300.png'}]}]}/>\r\n                                    {   \r\n                                        Object.entries(fpPlaylists).map(playlist => {\r\n                                            return (\r\n                                                <CollectionRow name={playlist[0]} key={playlist[1].id} id={playlist[1].id} playlists={playlist[1].playlists}/>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </>\r\n                        }\r\n                        \r\n                    </div>\r\n                </div>\r\n        }\r\n        </>\r\n        \r\n        \r\n    );\r\n}","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\SidebarComponent\\Playlists\\FeaturedPlaylists.tsx",["421"],"import React from 'react';\r\nimport { CreatePlaylist } from './CreatePlaylist';\r\nimport { FeaturedItem } from './FeaturedItem';\r\n\r\ninterface FeaturedPlaylistsProps {\r\n\r\n}\r\n\r\nexport const FeaturedPlaylists: React.FC<FeaturedPlaylistsProps> = ({}) => {\r\n    return (\r\n        <>\r\n            <div className=\"featured-playlists\">\r\n                <CreatePlaylist />\r\n                <FeaturedItem label=\"Liked Songs\" />\r\n            </div>\r\n        </>\r\n    );\r\n}","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\SidebarComponent\\Playlists\\NormalPlaylists.tsx",["422","423","424","425"],"import React, { useContext, useEffect, useState } from 'react'\r\nimport { ListItem } from './ListItem';\r\n\r\ninterface NormalPlaylistsProps {\r\n    playlists: SpotifyApi.PlaylistObjectSimplified[];\r\n    ref: (node: HTMLLIElement) => void;\r\n}\r\n\r\nexport const NormalPlaylists = React.forwardRef<HTMLLIElement, NormalPlaylistsProps>(({playlists}, ref) => {\r\n  \r\n  return (\r\n      <div className=\"other-playlist-container\">\r\n          <ul className=\"other-list\">\r\n              {playlists.map((playlist, index) => {\r\n                if (index + 1 === playlists.length) {\r\n                  return <ListItem ref={ref} key={playlist.id} name={playlist.name} id={playlist.id}/>\r\n                } else {\r\n                  return <ListItem key={playlist.id} name={playlist.name} id={playlist.id}/>\r\n                }\r\n              })}\r\n          </ul>\r\n      </div>\r\n  );\r\n})\r\n{/* <ListItem key={playlist.id} name={playlist.name} id={playlist.id}/> */}","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\index.tsx",["426"],"import Home from './Home'\r\nimport Search from './Search'\r\nimport Library from './Library'\r\nimport Create from './Create'\r\nimport Like from './Like'\r\nimport Install from './Install'\r\nimport Back from './Back'\r\nimport Forward from './Forward'\r\nimport NSearch from './NSearch'\r\nimport Heart from './Heart'\r\nimport Play from './Play'\r\nimport Music from './Music'\r\nimport Music2 from './Music2'\r\nimport CD from './CD'\r\nimport PrevTrack from './PrevTrack'\r\nimport NextTrack from './NextTrack'\r\nimport Shuffle from './Shuffle'\r\nimport Repeat from './Repeat'\r\nimport Speaker from './Devices'\r\nimport Volume from './Volume'\r\nimport Pause from './Pause'\r\n\r\nimport React from 'react'\r\nimport Devices from './Devices'\r\n\r\n\r\nexport default function Icon(props: any) {\r\n    switch (props.name) {\r\n        case 'Home':\r\n            return <Home />\r\n        case 'Search':\r\n            return <Search />\r\n        case 'Library':\r\n            return <Library />\r\n        case 'Create':\r\n            return <Create />\r\n        case 'Heart':\r\n            return <Heart {...props}/>\r\n        case 'Like':\r\n            return <Like {...props}/>\r\n        case 'Install':\r\n            return <Install {...props}/>\r\n        case 'Back':\r\n            return <Back />\r\n        case 'Forward':\r\n            return <Forward />\r\n        case 'N-Search':\r\n            return <NSearch />\r\n        case 'Play':\r\n            return <Play {...props}/>\r\n        case 'Music':\r\n            return <Music />\r\n        case 'Music2':\r\n            return <Music2 />\r\n        case 'CD':\r\n            return <CD />\r\n        case 'PrevTrack':\r\n            return <PrevTrack />\r\n        case 'NextTrack':\r\n            return <NextTrack />\r\n        case 'Shuffle':\r\n            return <Shuffle />\r\n        case 'Repeat':\r\n            return <Repeat />\r\n        case 'Devices':\r\n            return <Devices />\r\n        case 'Volume':\r\n            return <Volume />\r\n        case 'Pause':\r\n            return <Pause />\r\n        default:\r\n            return null\r\n    }\r\n}","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\locale.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\CollectionRow.tsx",["427"],"import React from 'react'\r\nimport { CollectionDisplay } from './CollectionDisplay'\r\nimport { CollectionHeader } from './CollectionHeader'\r\nimport { CollectionTitle } from './CollectionTitle'\r\n\r\ninterface CollectionRowProps {\r\n        name: string,\r\n        description?: string,\r\n        playlists: any,\r\n        id?: string | null\r\n}\r\n\r\nexport const CollectionRow = React.forwardRef<HTMLDivElement, CollectionRowProps>(({name, playlists, id, description}, ref) => {\r\n  return (\r\n    <div className=\"CollectionRow\">\r\n      <CollectionTitle title={name} id={id ? id : \"\"} description={description}/>\r\n      <CollectionDisplay ref={ref} playlists={playlists}/>\r\n    </div>\r\n  )\r\n})\r\n    ","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\createRequest.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\SidebarComponent\\Playlists\\CreatePlaylist.tsx",["428"],"import React from 'react';\r\nimport Icon from '../../../icons';\r\n\r\ninterface CreatePlaylistProps {\r\n\r\n}\r\n\r\nexport const CreatePlaylist: React.FC<CreatePlaylistProps> = ({}) => {\r\n    return (\r\n        <button className=\"create-button no-outline\">\r\n            <div className=\"playlist-icon\">\r\n                <Icon name='Create' />\r\n            </div>\r\n            <span className=\"featured-label\">Create Playlist</span>\r\n        </button>\r\n    );\r\n}","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\SidebarComponent\\Playlists\\FeaturedItem.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\SidebarComponent\\Playlists\\ListItem.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Home.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Install.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Search.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Library.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Back.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Create.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Like.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Play.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Forward.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\NSearch.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Music2.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Music.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\PrevTrack.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\CD.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Heart.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Shuffle.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Repeat.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\NextTrack.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Pause.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Volume.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\CollectionTitle.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\CollectionDisplay.tsx",["429","430"],"import { AnyTxtRecord } from 'dns';\r\nimport React from 'react'\r\nimport { PlayCard } from './PlayCard';\r\n\r\ninterface CollectionDisplayProps {\r\n    playlists: any\r\n}\r\n\r\nexport const CollectionDisplay = React.forwardRef<HTMLDivElement, CollectionDisplayProps>(({playlists}, ref) => {\r\n    const unique: string[] = [];\r\n    let uniqueIndex = 0;\r\n    return (\r\n        <div className=\"RowGrid\">\r\n            {playlists.map((playlist: any, index: number) => {\r\n                if (playlist){\r\n                    if (uniqueIndex < 6 && unique.indexOf(playlist.name) === -1){\r\n                        uniqueIndex++;\r\n                        unique.push(playlist.name);\r\n                        return <PlayCard key={playlist.id} info={playlist} type={playlist.type}/> \r\n                    }\r\n                } else {\r\n                    return null\r\n                }\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n);","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\PlayCard.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\CardDisplay.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\CardInfo.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\FooterComponent\\PlayerComponent\\CurrentlyPlayedSong.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\FooterComponent\\PlayerComponent\\ControlButton.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\FooterComponent\\PlayerComponent\\ProgressBar.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\FooterComponent\\PlayerComponent\\ConnectDevices.tsx",["431","432","433","434","435"],"import React, { useEffect, useRef, useState } from 'react'\r\nimport { getHashParams } from '../../../utilities/getHashParams';\r\nimport { ConnectDevicesItem } from './ConnectDevicesItem';\r\nimport SpotifyWebApi from 'spotify-web-api-js';\r\ninterface ConnectDevicesProps {\r\n    token: string,\r\n    closeTip: () => void\r\n}\r\n\r\nfunction useOutsideClick(ref: React.RefObject<HTMLDivElement>, closeTip: () => void) {\r\n    useEffect(() => {\r\n        function handleClickOutside(event: MouseEvent) {\r\n            if (ref.current && !ref.current.contains(event.target as Node)) {\r\n                closeTip();\r\n            }\r\n        }\r\n\r\n        // Bind the event listener\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => {\r\n            // Unbind the event listener on clean up\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        };\r\n    }, [ref]);\r\n}\r\n\r\nexport const ConnectDevices: React.FC<ConnectDevicesProps> = ({token, closeTip}) => {\r\n    const [devices, setDevices] = useState<SpotifyApi.UserDevice[]>([]);\r\n    const spotifyApi = new SpotifyWebApi();\r\n\r\n    useEffect(() => {\r\n        if (token) {\r\n            spotifyApi.setAccessToken(token);\r\n\r\n            spotifyApi.getMyDevices().\r\n                then (\r\n                    function(data) {\r\n                        data.devices.map((device, index) => {\r\n                            setDevices(devices => [...devices, device])\r\n                        });\r\n                    },\r\n                    function(err) {\r\n                        console.log(err);\r\n                    }\r\n                ) \r\n        } \r\n    }, [])\r\n    \r\n    const switchDevice = (e: React.MouseEvent) => {\r\n        if (!(e.currentTarget instanceof HTMLButtonElement)) {\r\n            return;\r\n        }\r\n        const id = e.currentTarget.dataset.id;\r\n        const device_ids: string[]= [id as string];\r\n        spotifyApi.setAccessToken(token);\r\n        spotifyApi.transferMyPlayback(device_ids);\r\n    };\r\n\r\n    const wrapperRef = useRef<HTMLDivElement>(null);\r\n    useOutsideClick(wrapperRef, closeTip);\r\n\r\n    return (\r\n        <div className=\"connect-devices\" data-source=\"inside\" ref={wrapperRef}>\r\n\t\t\t<div className=\"connect-devices-content\" data-source=\"inside\">\r\n\t\t\t\t<div className=\"connect-devices-title\" data-source=\"inside\">\r\n\t\t\t\t\t<h1 data-source=\"inside\">Connect to a device</h1>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"cd-img\" data-source=\"inside\">\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tloading=\"lazy\"\r\n\t\t\t\t\t\tdata-source=\"inside\"\r\n\t\t\t\t\t\tsrc=\"https://open.scdn.co/cdn/images/connect_header@1x.ecc6912d.png\"\r\n\t\t\t\t\t\talt=\"\"\r\n\t\t\t\t\t\tdraggable=\"false\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{devices.length === 0 ? (\r\n\t\t\t\t\t<ConnectDevicesItem name=\"No devices available\" disable />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<ul className='connect-devices-list'>\r\n                        {devices.map((device, index) => \r\n                            <ConnectDevicesItem\r\n                                name={device.name}\r\n                                key={index}\r\n                                active={device.is_active}\r\n                                id={device.id}\r\n                                onClick={switchDevice}\r\n                            />\r\n                        )}\r\n                    </ul>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n    );\r\n}","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\FooterComponent\\PlayerComponent\\ConnectDevicesItem.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Devices.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\timeFormat.ts",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\types\\index.ts",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\types\\spotify.ts",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\pages\\Search.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\pages\\Browse.tsx",["436","437"],"import React, { useEffect, useState } from 'react'\r\nimport { BrowseCard } from '../components/MainPageComponent/BrowseCard';\r\nimport { PageTitle } from '../components/MainPageComponent/PageTitle';\r\nimport SpotifyWebApi from 'spotify-web-api-js';\r\nimport createRequest from '../utilities/createRequest';\r\n\r\ninterface BrowseProps {\r\n\r\n}\r\n\r\nexport const Browse: React.FC<BrowseProps> = ({}) => {\r\n    const [genre, setGenre] = useState<SpotifyApi.CategoryObject[]>([]);\r\n\r\n    useEffect(() => {\r\n        const {source, makeRequest} = createRequest('https://api.spotify.com/v1/browse/categories?limit=50')\r\n\r\n        makeRequest()\r\n            .then((data) => {\r\n                setGenre(data.categories.items)\r\n            })\r\n            .catch((error) => console.log(error))\r\n        \r\n        return () => source.cancel()\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"page-content\">\r\n            <div className='browsePage'>\r\n                <PageTitle title='Browse All' />\r\n                <div className=\"browseGrid\">\r\n                    {genre.map((genre) => {\r\n                        return <BrowseCard key={genre.id} info={genre}/>\r\n                    })} \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\PageTitle.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\BrowseCard.tsx",["438"],"import React from 'react';\r\nimport SpotifyWebApi from 'spotify-web-api-js';\r\n\r\ninterface BrowseCardProps {\r\n    info: SpotifyApi.CategoryObject,\r\n    key: string\r\n}\r\n\r\nexport const BrowseCard: React.FC<BrowseCardProps> = ({key, info}) => {\r\n    const {icons, name, id} = info\r\n    const img_link = icons[0].url\r\n    return (\r\n        <div className=\"browseLinkContainer\">\r\n            <a href={`/genre/${id}`} className='browseLink'>\r\n                    <h3 style={titleStyle}>{name}</h3>\r\n                    <div style={overlayStyle}></div>\r\n                    <img loading=\"lazy\" src={img_link} alt=\"\" style={{width:'100%'}}/>\r\n            </a>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst titleStyle = {\r\n    fontSize: '24px',\r\n    padding: '16px',\r\n    lineHeight: '1.3em',\r\n    letterSpacing: '-0.04em',\r\n    overflowWrap: 'break-word',\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    bottom:'0',\r\n    textAlign: 'left',\r\n    margin: 'auto',\r\n    hyphens: 'auto'\r\n} as React.CSSProperties;\r\n\r\nconst overlayStyle = {\r\n    background: 'linear-gradient(0deg,rgba(0,0,0,0),rgba(0,0,0,.4))',\r\n    position: 'absolute',\r\n    top: '0',\r\n    left: '0',\r\n    width: '100%',\r\n    height:'100%'    \r\n} as React.CSSProperties;","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\pages\\SearchResult.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\SearchRow.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\SearchRowTitle.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\SearchRowGrid.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\tipContent.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\pages\\Collection.tsx",["439","440"],"import React, { useContext, useEffect, useState } from 'react'\r\nimport { Route } from 'react-router-dom';\r\nimport SpotifyWebApi from 'spotify-web-api-js';\r\nimport { CollectionTitle } from '../components/MainPageComponent/CollectionTitle';\r\nimport { PlayCard } from '../components/MainPageComponent/PlayCard';\r\nimport { TokenContext } from '../utilities/context';\r\n\r\ninterface CollectionProps {\r\n\r\n}\r\n\r\nexport const Collection: React.FC<CollectionProps> = ({}) => {\r\n    const [playlists, setPlaylists] = useState<SpotifyApi.PlaylistObjectSimplified[]>([]);\r\n    const [artists, setArtists] = useState<SpotifyApi.ArtistObjectFull[]>([]);\r\n    const [albums, setAlbums] = useState<SpotifyApi.SavedAlbumObject[]>([]);\r\n    const [podcasts, setPodcasts] = useState<SpotifyApi.ShowObjectSimplified[]>([]);\r\n\r\n    const token = useContext(TokenContext);\r\n    const spotifyApi = new SpotifyWebApi();\r\n\r\n    useEffect(() => {\r\n        if (token) {\r\n            spotifyApi.setAccessToken(token);\r\n\r\n            spotifyApi.getUserPlaylists()\r\n                .then(\r\n                    function(data) {\r\n                        setPlaylists(data.items);\r\n                    },\r\n                    function(error) {\r\n                        console.log(error);\r\n                    }\r\n                )\r\n            \r\n            spotifyApi.getMySavedShows()\r\n                .then(\r\n                    function(data) {\r\n                        setPodcasts(data.items);\r\n                    },\r\n                    function(error) {\r\n                        console.log(error);\r\n                    }\r\n                )\r\n            \r\n            spotifyApi.getFollowedArtists()\r\n                .then(\r\n                    function(data) {\r\n                        setArtists(data.artists.items);\r\n                    },\r\n                    function(error) {\r\n                        console.log(error);\r\n                    }\r\n                )\r\n\r\n            spotifyApi.getMySavedAlbums()\r\n                .then(\r\n                    function(data) {\r\n                        setAlbums(data.items)\r\n                    },\r\n                    function(error) {\r\n                        console.log(error);\r\n                    }\r\n                )\r\n        }\r\n    }, [])\r\n\r\n    \r\n    \r\n    return (\r\n        <div className='page-content' style={{paddingTop:'16px'}}>\r\n            <Route exact path='/collection/playlists'>\r\n                <CollectionTitle title=\"Playlists\"/>\r\n                <div className=\"browseGrid\">\r\n                    {playlists.map((playlist) => {\r\n                        return <PlayCard key={playlist.id} info={playlist} type={playlist.type}/> \r\n                    })}\r\n                </div>\r\n            </Route>\r\n            <Route exact path='/collection/podcasts'>\r\n                <CollectionTitle title=\"Podcasts\" />\r\n                <div className=\"browseGrid\">\r\n                    {podcasts.map((podcast: any) => {\r\n                        return <PlayCard key={podcast.show.id} info={podcast.show} type={podcast.show.type}/> \r\n                    })}\r\n                </div>\r\n            </Route>\r\n            <Route exact path='/collection/artists'>\r\n            <CollectionTitle title=\"Podcasts\" />\r\n                <div className=\"browseGrid\">\r\n                    {artists.map((artist) => {\r\n                        return <PlayCard key={artist.id} info={artist} type={artist.type}/> \r\n                    })}\r\n                </div>\r\n            </Route>\r\n            <Route exact path='/collection/albums'>\r\n                <div className=\"browseGrid\">\r\n                    {albums.map((album) => {\r\n                        return <PlayCard key={album.album.id} info={album.album} type={album.album.type}/> \r\n                    })}\r\n                </div>\r\n            </Route>\r\n        </div>\r\n    );\r\n}","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\pages\\Like.tsx",["441","442","443","444"],"import React, { useCallback, useContext, useEffect, useRef, useState } from 'react'\r\nimport SpotifyWebApi from 'spotify-web-api-js';\r\nimport { PageBanner } from '../components/MainPageComponent/PageBanner';\r\nimport { PlaylistFunc } from '../components/MainPageComponent/PlaylistFunc';\r\nimport { TrackList } from '../components/MainPageComponent/TrackList';\r\nimport { TokenContext, UserContext } from '../utilities/context';\r\nimport { useLoadScroll } from '../utilities/hooks/useLoadScroll';\r\nimport axios from \"axios\";\r\nimport { SinglePlaylistResponse } from '../utilities/types';\r\ninterface LikeProps {\r\n\r\n}\r\n\r\nexport const Like: React.FC<LikeProps> = ({}) => {\r\n    const [likedTracks, setLikedTracks] = useState<SpotifyApi.SavedTrackObject[]>([]);\r\n    const [numTracks,setNumTracks] = useState(0);\r\n    const spotifyApi = new SpotifyWebApi();\r\n    const token = useContext(TokenContext);\r\n    const user = useContext(UserContext);\r\n    const source = axios.CancelToken.source();\r\n    const [setNext, lastRef] = useLoadScroll(setLikedTracks, token, source);\r\n\r\n\r\n    const bannerInfo = {\r\n      name: 'Liked Songs',\r\n      description: '',\r\n      user: [user],\r\n      followers: 0,\r\n      primary_color: 'rgb(70, 62, 118)',\r\n      images: [{url: 'https://t.scdn.co/images/3099b3803ad9496896c43f22fe9be8c4.png'}],\r\n      release_date: '',\r\n      total: 0\r\n    } as SinglePlaylistResponse;\r\n\r\n    useEffect(() => {\r\n        if (token) {\r\n            spotifyApi.setAccessToken(token);\r\n\r\n            spotifyApi.getMySavedTracks()\r\n                .then(\r\n                    function(data) {\r\n                        console.log(data);\r\n                        setLikedTracks(data.items);\r\n                        setNumTracks(data.total);\r\n                        setNext(data.next);\r\n                    },\r\n                    function(error) {\r\n                        console.log(error);\r\n                    }\r\n                )\r\n        }\r\n    }, [])\r\n\r\n    const playTracks = (trackURI: string) => {\r\n        const track_uri = likedTracks.map((track) => {\r\n            return track.track.uri;\r\n        })\r\n        const uris = {\r\n            'uris': track_uri\r\n        }\r\n        spotifyApi.setAccessToken(token);\r\n        spotifyApi.play(uris)\r\n            .then((response) => {\r\n                console.log(response);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    const playTrack = (trackURI: string) => {\r\n        const body = {\r\n            uris: [trackURI]\r\n        }\r\n        spotifyApi.setAccessToken(token);\r\n        spotifyApi.play(body)\r\n            .then((response) => {\r\n                console.log(response);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className='listPage' style={{display: `${likedTracks.length === 0 ? 'none':'block'}`}}>\r\n            <PageBanner title={'playlist'} bannerInfo={bannerInfo} totalTracks={numTracks} /> \r\n            <div className=\"playListContent\">\r\n                <div className=\"playListOverlay\" style={{backgroundColor: `${bannerInfo.primary_color}`}} />\r\n                <PlaylistFunc type='playOnly' playContext={playTracks} />\r\n                <div className=\"page-content\">\r\n                    <TrackList ref={lastRef} tracks={likedTracks} playContextTrack={playTrack} styleName=\"simplify\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\PageBanner.tsx",["445","446","447"],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\PlaylistFunc.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\hooks\\useLoadScroll.ts",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\TrackList.tsx",["448"],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\TrackListItem.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\requestWithToken.ts",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\pages\\Playlist.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\hooks\\useID.ts",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\hooks\\useInfiScroll.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\pages\\Album.tsx",["449","450","451","452","453"],{"ruleId":"454","replacedBy":"455"},{"ruleId":"456","replacedBy":"457"},{"ruleId":"458","severity":1,"message":"459","line":6,"column":86,"nodeType":"460","messageId":"461","endLine":6,"endColumn":97},{"ruleId":"462","severity":1,"message":"463","line":90,"column":6,"nodeType":"464","endLine":90,"endColumn":8,"suggestions":"465"},{"ruleId":"458","severity":1,"message":"466","line":3,"column":26,"nodeType":"460","messageId":"461","endLine":3,"endColumn":38},{"ruleId":"458","severity":1,"message":"467","line":4,"column":10,"nodeType":"460","messageId":"461","endLine":4,"endColumn":23},{"ruleId":"468","severity":1,"message":"469","line":72,"column":51,"nodeType":"470","messageId":"471","endLine":72,"endColumn":52,"fix":"472"},{"ruleId":"462","severity":1,"message":"473","line":88,"column":8,"nodeType":"464","endLine":88,"endColumn":10,"suggestions":"474"},{"ruleId":"458","severity":1,"message":"459","line":7,"column":10,"nodeType":"460","messageId":"461","endLine":7,"endColumn":21},{"ruleId":"458","severity":1,"message":"475","line":1,"column":29,"nodeType":"460","messageId":"461","endLine":1,"endColumn":38},{"ruleId":"458","severity":1,"message":"476","line":1,"column":40,"nodeType":"460","messageId":"461","endLine":1,"endColumn":48},{"ruleId":"477","severity":1,"message":"478","line":7,"column":47,"nodeType":"479","messageId":"480","endLine":7,"endColumn":49},{"ruleId":"477","severity":1,"message":"478","line":8,"column":55,"nodeType":"479","messageId":"480","endLine":8,"endColumn":57},{"ruleId":"477","severity":1,"message":"478","line":9,"column":44,"nodeType":"479","messageId":"480","endLine":9,"endColumn":46},{"ruleId":"477","severity":1,"message":"478","line":12,"column":67,"nodeType":"479","messageId":"480","endLine":12,"endColumn":69},{"ruleId":"477","severity":1,"message":"478","line":8,"column":61,"nodeType":"479","messageId":"480","endLine":8,"endColumn":63},{"ruleId":"462","severity":1,"message":"481","line":13,"column":8,"nodeType":"464","endLine":13,"endColumn":10,"suggestions":"482"},{"ruleId":"458","severity":1,"message":"476","line":1,"column":32,"nodeType":"460","messageId":"461","endLine":1,"endColumn":40},{"ruleId":"458","severity":1,"message":"475","line":1,"column":17,"nodeType":"460","messageId":"461","endLine":1,"endColumn":26},{"ruleId":"458","severity":1,"message":"476","line":1,"column":28,"nodeType":"460","messageId":"461","endLine":1,"endColumn":36},{"ruleId":"458","severity":1,"message":"483","line":2,"column":9,"nodeType":"460","messageId":"461","endLine":2,"endColumn":20},{"ruleId":"458","severity":1,"message":"484","line":1,"column":17,"nodeType":"460","messageId":"461","endLine":1,"endColumn":27},{"ruleId":"462","severity":1,"message":"485","line":35,"column":6,"nodeType":"464","endLine":35,"endColumn":8,"suggestions":"486"},{"ruleId":"477","severity":1,"message":"478","line":8,"column":49,"nodeType":"479","messageId":"480","endLine":8,"endColumn":51},{"ruleId":"477","severity":1,"message":"478","line":13,"column":43,"nodeType":"479","messageId":"480","endLine":13,"endColumn":45},{"ruleId":"468","severity":1,"message":"469","line":29,"column":40,"nodeType":"470","messageId":"471","endLine":29,"endColumn":41,"fix":"487"},{"ruleId":"468","severity":1,"message":"469","line":39,"column":51,"nodeType":"470","messageId":"471","endLine":39,"endColumn":52,"fix":"488"},{"ruleId":"489","severity":1,"message":"490","line":43,"column":55,"nodeType":"491","messageId":"492","endLine":43,"endColumn":57},{"ruleId":"468","severity":1,"message":"469","line":52,"column":40,"nodeType":"470","messageId":"471","endLine":52,"endColumn":41,"fix":"493"},{"ruleId":"489","severity":1,"message":"490","line":55,"column":67,"nodeType":"491","messageId":"492","endLine":55,"endColumn":69},{"ruleId":"468","severity":1,"message":"469","line":64,"column":41,"nodeType":"470","messageId":"471","endLine":64,"endColumn":42,"fix":"494"},{"ruleId":"489","severity":1,"message":"490","line":67,"column":68,"nodeType":"491","messageId":"492","endLine":67,"endColumn":70},{"ruleId":"462","severity":1,"message":"463","line":89,"column":8,"nodeType":"464","endLine":89,"endColumn":15,"suggestions":"495"},{"ruleId":"462","severity":1,"message":"496","line":113,"column":8,"nodeType":"464","endLine":113,"endColumn":23,"suggestions":"497"},{"ruleId":"477","severity":1,"message":"478","line":9,"column":69,"nodeType":"479","messageId":"480","endLine":9,"endColumn":71},{"ruleId":"458","severity":1,"message":"484","line":1,"column":17,"nodeType":"460","messageId":"461","endLine":1,"endColumn":27},{"ruleId":"458","severity":1,"message":"475","line":1,"column":29,"nodeType":"460","messageId":"461","endLine":1,"endColumn":38},{"ruleId":"458","severity":1,"message":"476","line":1,"column":40,"nodeType":"460","messageId":"461","endLine":1,"endColumn":48},{"ruleId":"498","severity":1,"message":"499","line":25,"column":1,"nodeType":"500","messageId":"501","endLine":25,"endColumn":76},{"ruleId":"458","severity":1,"message":"502","line":19,"column":8,"nodeType":"460","messageId":"461","endLine":19,"endColumn":15},{"ruleId":"458","severity":1,"message":"503","line":3,"column":10,"nodeType":"460","messageId":"461","endLine":3,"endColumn":26},{"ruleId":"477","severity":1,"message":"478","line":8,"column":63,"nodeType":"479","messageId":"480","endLine":8,"endColumn":65},{"ruleId":"458","severity":1,"message":"504","line":1,"column":10,"nodeType":"460","messageId":"461","endLine":1,"endColumn":22},{"ruleId":"489","severity":1,"message":"505","line":14,"column":59,"nodeType":"491","messageId":"506","endLine":14,"endColumn":61},{"ruleId":"458","severity":1,"message":"467","line":2,"column":10,"nodeType":"460","messageId":"461","endLine":2,"endColumn":23},{"ruleId":"462","severity":1,"message":"507","line":24,"column":8,"nodeType":"464","endLine":24,"endColumn":13,"suggestions":"508"},{"ruleId":"468","severity":1,"message":"469","line":35,"column":38,"nodeType":"470","messageId":"471","endLine":35,"endColumn":39,"fix":"509"},{"ruleId":"489","severity":1,"message":"490","line":38,"column":58,"nodeType":"491","messageId":"492","endLine":38,"endColumn":60},{"ruleId":"462","severity":1,"message":"510","line":47,"column":8,"nodeType":"464","endLine":47,"endColumn":10,"suggestions":"511"},{"ruleId":"458","severity":1,"message":"512","line":4,"column":8,"nodeType":"460","messageId":"461","endLine":4,"endColumn":21},{"ruleId":"477","severity":1,"message":"478","line":11,"column":47,"nodeType":"479","messageId":"480","endLine":11,"endColumn":49},{"ruleId":"458","severity":1,"message":"512","line":2,"column":8,"nodeType":"460","messageId":"461","endLine":2,"endColumn":21},{"ruleId":"477","severity":1,"message":"478","line":12,"column":55,"nodeType":"479","messageId":"480","endLine":12,"endColumn":57},{"ruleId":"462","severity":1,"message":"510","line":65,"column":8,"nodeType":"464","endLine":65,"endColumn":10,"suggestions":"513"},{"ruleId":"458","severity":1,"message":"514","line":1,"column":17,"nodeType":"460","messageId":"461","endLine":1,"endColumn":28},{"ruleId":"458","severity":1,"message":"515","line":1,"column":53,"nodeType":"460","messageId":"461","endLine":1,"endColumn":59},{"ruleId":"477","severity":1,"message":"478","line":14,"column":43,"nodeType":"479","messageId":"480","endLine":14,"endColumn":45},{"ruleId":"462","severity":1,"message":"485","line":52,"column":8,"nodeType":"464","endLine":52,"endColumn":10,"suggestions":"516"},{"ruleId":"458","severity":1,"message":"512","line":2,"column":8,"nodeType":"460","messageId":"461","endLine":2,"endColumn":21},{"ruleId":"458","severity":1,"message":"517","line":4,"column":10,"nodeType":"460","messageId":"461","endLine":4,"endColumn":32},{"ruleId":"518","severity":1,"message":"519","line":71,"column":35,"nodeType":"520","endLine":71,"endColumn":111},{"ruleId":"458","severity":1,"message":"521","line":1,"column":17,"nodeType":"460","messageId":"461","endLine":1,"endColumn":30},{"ruleId":"458","severity":1,"message":"483","line":2,"column":10,"nodeType":"460","messageId":"461","endLine":2,"endColumn":21},{"ruleId":"458","severity":1,"message":"517","line":11,"column":31,"nodeType":"460","messageId":"461","endLine":11,"endColumn":53},{"ruleId":"477","severity":1,"message":"478","line":22,"column":45,"nodeType":"479","messageId":"480","endLine":22,"endColumn":47},{"ruleId":"458","severity":1,"message":"522","line":30,"column":10,"nodeType":"460","messageId":"461","endLine":30,"endColumn":14},{"ruleId":"462","severity":1,"message":"523","line":85,"column":6,"nodeType":"464","endLine":85,"endColumn":10,"suggestions":"524"},"no-native-reassign",["525"],"no-negated-in-lhs",["526"],"@typescript-eslint/no-unused-vars","'LinkContext' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'spotifyApi'. Either include it or remove the dependency array.","ArrayExpression",["527"],"'TokenContext' is defined but never used.","'getHashParams' is defined but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"528","text":"529"},"React Hook useEffect has missing dependencies: 'apiUpdate', 'player', 'playerInitialize', 'spotifyApi', and 'token'. Either include them or remove the dependency array.",["530"],"'useEffect' is defined but never used.","'useState' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","React Hook useEffect has a missing dependency: 'resetQuery'. Either include it or remove the dependency array. If 'resetQuery' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["531"],"'useLocation' is defined but never used.","'useContext' is defined but never used.","React Hook useEffect has missing dependencies: 'setNext', 'spotifyApi', and 'token'. Either include them or remove the dependency array.",["532"],{"range":"533","text":"529"},{"range":"534","text":"529"},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",{"range":"535","text":"529"},{"range":"536","text":"529"},["537"],"React Hook useEffect has a missing dependency: 'fpPlaylists'. Either include it or remove the dependency array. You can also do a functional update 'setFpPlaylists(f => ...)' if you only need 'fpPlaylists' in the 'setFpPlaylists' call.",["538"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Speaker' is defined but never used.","'CollectionHeader' is defined but never used.","'AnyTxtRecord' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","React Hook useEffect has a missing dependency: 'closeTip'. Either include it or remove the dependency array. If 'closeTip' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["539"],{"range":"540","text":"529"},"React Hook useEffect has missing dependencies: 'spotifyApi' and 'token'. Either include them or remove the dependency array.",["541"],"'SpotifyWebApi' is defined but never used.",["542"],"'useCallback' is defined but never used.","'useRef' is defined but never used.",["543"],"'SinglePlaylistResponse' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'CSSProperties' is defined but never used.","'like' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setMessage', 'setNext', 'spotifyApi', and 'token'. Either include them or remove the dependency array.",["544"],"no-global-assign","no-unsafe-negation",{"desc":"545","fix":"546"},[2200,2219],"\r\n                .",{"desc":"547","fix":"548"},{"desc":"549","fix":"550"},{"desc":"551","fix":"552"},[1265,1284],[1594,1613],[2199,2218],[2624,2643],{"desc":"553","fix":"554"},{"desc":"555","fix":"556"},{"desc":"557","fix":"558"},[1256,1275],{"desc":"553","fix":"559"},{"desc":"553","fix":"560"},{"desc":"551","fix":"561"},{"desc":"562","fix":"563"},"Update the dependencies array to be: [spotifyApi]",{"range":"564","text":"565"},"Update the dependencies array to be: [apiUpdate, player, playerInitialize, spotifyApi, token]",{"range":"566","text":"567"},"Update the dependencies array to be: [resetQuery]",{"range":"568","text":"569"},"Update the dependencies array to be: [setNext, spotifyApi, token]",{"range":"570","text":"571"},"Update the dependencies array to be: [spotifyApi, token]",{"range":"572","text":"573"},"Update the dependencies array to be: [fpPlaylists, tempPlaylists]",{"range":"574","text":"575"},"Update the dependencies array to be: [closeTip, ref]",{"range":"576","text":"577"},{"range":"578","text":"573"},{"range":"579","text":"573"},{"range":"580","text":"571"},"Update the dependencies array to be: [id, setMessage, setNext, spotifyApi, token]",{"range":"581","text":"582"},[2952,2954],"[spotifyApi]",[2676,2678],"[apiUpdate, player, playerInitialize, spotifyApi, token]",[361,363],"[resetQuery]",[1140,1142],"[setNext, spotifyApi, token]",[3564,3571],"[spotifyApi, token]",[4427,4442],"[fpPlaylists, tempPlaylists]",[903,908],"[closeTip, ref]",[1652,1654],[2264,2266],[1954,1956],[2890,2894],"[id, setMessage, setNext, spotifyApi, token]"]