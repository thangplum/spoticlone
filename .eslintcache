[{"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\index.tsx":"1","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\serviceWorker.ts":"2","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\App.tsx":"3","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\FooterComponent\\Player.tsx":"4","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\context.tsx":"5","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\getHashParams.tsx":"6","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\MainPage.tsx":"7","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\Loading.tsx":"8","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\FooterComponent\\Footer.tsx":"9","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\SidebarComponent\\Sidebar.tsx":"10","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\FooterComponent\\Banner.tsx":"11","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\UserPrompt.tsx":"12","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\UserInfo.tsx":"13","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\CollectionHeader.tsx":"14","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\HistoryToggle.tsx":"15","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\SearchBar.tsx":"16","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\SidebarComponent\\NavItem.tsx":"17","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\PageContent.tsx":"18","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\NavBar.tsx":"19","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\SidebarComponent\\NavList.tsx":"20","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\SidebarComponent\\PlayList.tsx":"21","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\SidebarComponent\\Install.tsx":"22","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Logo.tsx":"23","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\PromptButton.tsx":"24","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\HistoryButton.tsx":"25","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\pages\\Home.tsx":"26","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\SidebarComponent\\Playlists\\FeaturedPlaylists.tsx":"27","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\SidebarComponent\\Playlists\\NormalPlaylists.tsx":"28","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\index.tsx":"29","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\locale.tsx":"30","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\CollectionRow.tsx":"31","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\createRequest.tsx":"32","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\SidebarComponent\\Playlists\\CreatePlaylist.tsx":"33","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\SidebarComponent\\Playlists\\FeaturedItem.tsx":"34","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\SidebarComponent\\Playlists\\ListItem.tsx":"35","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Home.tsx":"36","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Install.tsx":"37","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Search.tsx":"38","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Library.tsx":"39","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Back.tsx":"40","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Create.tsx":"41","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Like.tsx":"42","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Play.tsx":"43","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Forward.tsx":"44","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\NSearch.tsx":"45","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Music2.tsx":"46","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Music.tsx":"47","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\PrevTrack.tsx":"48","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\CD.tsx":"49","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Heart.tsx":"50","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Shuffle.tsx":"51","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Repeat.tsx":"52","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\NextTrack.tsx":"53","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Pause.tsx":"54","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Volume.tsx":"55","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\CollectionTitle.tsx":"56","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\CollectionDisplay.tsx":"57","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\PlayCard.tsx":"58","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\CardDisplay.tsx":"59","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\CardInfo.tsx":"60","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\FooterComponent\\PlayerComponent\\CurrentlyPlayedSong.tsx":"61","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\FooterComponent\\PlayerComponent\\ControlButton.tsx":"62","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\FooterComponent\\PlayerComponent\\ProgressBar.tsx":"63","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\FooterComponent\\PlayerComponent\\ConnectDevices.tsx":"64","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\FooterComponent\\PlayerComponent\\ConnectDevicesItem.tsx":"65","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Devices.tsx":"66","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\timeFormat.ts":"67","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\types\\index.ts":"68","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\types\\spotify.ts":"69","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\pages\\Search.tsx":"70","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\pages\\Browse.tsx":"71","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\PageTitle.tsx":"72","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\BrowseCard.tsx":"73","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\pages\\SearchResult.tsx":"74","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\SearchRow.tsx":"75","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\SearchRowTitle.tsx":"76","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\SearchRowGrid.tsx":"77"},{"size":610,"mtime":1602829642783,"results":"78","hashOfConfig":"79"},{"size":5295,"mtime":1589746112329,"results":"80","hashOfConfig":"79"},{"size":4859,"mtime":1607292756207,"results":"81","hashOfConfig":"79"},{"size":16385,"mtime":1607439030597,"results":"82","hashOfConfig":"79"},{"size":1096,"mtime":1607292756215,"results":"83","hashOfConfig":"79"},{"size":410,"mtime":1607009256814,"results":"84","hashOfConfig":"79"},{"size":1372,"mtime":1607292756212,"results":"85","hashOfConfig":"79"},{"size":507,"mtime":1607098882502,"results":"86","hashOfConfig":"79"},{"size":223,"mtime":1604899735476,"results":"87","hashOfConfig":"79"},{"size":1483,"mtime":1607443621566,"results":"88","hashOfConfig":"79"},{"size":1118,"mtime":1603263431601,"results":"89","hashOfConfig":"79"},{"size":515,"mtime":1607009256811,"results":"90","hashOfConfig":"79"},{"size":2581,"mtime":1607009256809,"results":"91","hashOfConfig":"79"},{"size":1077,"mtime":1603438748906,"results":"92","hashOfConfig":"79"},{"size":384,"mtime":1603438748908,"results":"93","hashOfConfig":"79"},{"size":1362,"mtime":1607439030607,"results":"94","hashOfConfig":"79"},{"size":831,"mtime":1603007428665,"results":"95","hashOfConfig":"79"},{"size":836,"mtime":1607439030605,"results":"96","hashOfConfig":"79"},{"size":319,"mtime":1607439030603,"results":"97","hashOfConfig":"79"},{"size":245,"mtime":1603007428674,"results":"98","hashOfConfig":"79"},{"size":637,"mtime":1603178542057,"results":"99","hashOfConfig":"79"},{"size":537,"mtime":1603263431602,"results":"100","hashOfConfig":"79"},{"size":2877,"mtime":1602829642770,"results":"101","hashOfConfig":"79"},{"size":1278,"mtime":1603438748911,"results":"102","hashOfConfig":"79"},{"size":502,"mtime":1603438748907,"results":"103","hashOfConfig":"79"},{"size":5619,"mtime":1607359660973,"results":"104","hashOfConfig":"79"},{"size":459,"mtime":1603178542060,"results":"105","hashOfConfig":"79"},{"size":563,"mtime":1603178542062,"results":"106","hashOfConfig":"79"},{"size":2023,"mtime":1607359660970,"results":"107","hashOfConfig":"79"},{"size":159,"mtime":1607030496874,"results":"108","hashOfConfig":"79"},{"size":746,"mtime":1604817062668,"results":"109","hashOfConfig":"79"},{"size":708,"mtime":1607030496873,"results":"110","hashOfConfig":"79"},{"size":449,"mtime":1603007428677,"results":"111","hashOfConfig":"79"},{"size":726,"mtime":1603178542058,"results":"112","hashOfConfig":"79"},{"size":505,"mtime":1603178542061,"results":"113","hashOfConfig":"79"},{"size":445,"mtime":1602056523945,"results":"114","hashOfConfig":"79"},{"size":690,"mtime":1602056523946,"results":"115","hashOfConfig":"79"},{"size":911,"mtime":1602056523963,"results":"116","hashOfConfig":"79"},{"size":492,"mtime":1602056523947,"results":"117","hashOfConfig":"79"},{"size":334,"mtime":1602056523939,"results":"118","hashOfConfig":"79"},{"size":480,"mtime":1602056523942,"results":"119","hashOfConfig":"79"},{"size":1598,"mtime":1602056523948,"results":"120","hashOfConfig":"79"},{"size":324,"mtime":1602056523959,"results":"121","hashOfConfig":"79"},{"size":333,"mtime":1602056523943,"results":"122","hashOfConfig":"79"},{"size":719,"mtime":1602056523955,"results":"123","hashOfConfig":"79"},{"size":796,"mtime":1602056523953,"results":"124","hashOfConfig":"79"},{"size":1182,"mtime":1602056523951,"results":"125","hashOfConfig":"79"},{"size":710,"mtime":1606537004625,"results":"126","hashOfConfig":"79"},{"size":829,"mtime":1602056523941,"results":"127","hashOfConfig":"79"},{"size":1376,"mtime":1602056523944,"results":"128","hashOfConfig":"79"},{"size":1786,"mtime":1602056523964,"results":"129","hashOfConfig":"79"},{"size":1514,"mtime":1602056523961,"results":"130","hashOfConfig":"79"},{"size":662,"mtime":1602056523957,"results":"131","hashOfConfig":"79"},{"size":700,"mtime":1602056523958,"results":"132","hashOfConfig":"79"},{"size":2236,"mtime":1602056523966,"results":"133","hashOfConfig":"79"},{"size":1043,"mtime":1604899735479,"results":"134","hashOfConfig":"79"},{"size":908,"mtime":1604817062667,"results":"135","hashOfConfig":"79"},{"size":3283,"mtime":1604817062670,"results":"136","hashOfConfig":"79"},{"size":435,"mtime":1604476474530,"results":"137","hashOfConfig":"79"},{"size":1024,"mtime":1604800968118,"results":"138","hashOfConfig":"79"},{"size":1715,"mtime":1607359660966,"results":"139","hashOfConfig":"79"},{"size":661,"mtime":1606537309317,"results":"140","hashOfConfig":"79"},{"size":3346,"mtime":1607439030601,"results":"141","hashOfConfig":"79"},{"size":3307,"mtime":1607098882501,"results":"142","hashOfConfig":"79"},{"size":633,"mtime":1606688502496,"results":"143","hashOfConfig":"79"},{"size":1260,"mtime":1607359660968,"results":"144","hashOfConfig":"79"},{"size":205,"mtime":1607359660974,"results":"145","hashOfConfig":"79"},{"size":26,"mtime":1607293832633,"results":"146","hashOfConfig":"79"},{"size":4880,"mtime":1607292756218,"results":"147","hashOfConfig":"79"},{"size":397,"mtime":1607439030613,"results":"148","hashOfConfig":"79"},{"size":1290,"mtime":1607439030612,"results":"149","hashOfConfig":"79"},{"size":463,"mtime":1607439030606,"results":"150","hashOfConfig":"79"},{"size":1213,"mtime":1607439030602,"results":"151","hashOfConfig":"79"},{"size":668,"mtime":1607439030614,"results":"152","hashOfConfig":"79"},{"size":1539,"mtime":1607439030609,"results":"153","hashOfConfig":"79"},{"size":561,"mtime":1607439030610,"results":"154","hashOfConfig":"79"},{"size":426,"mtime":1607439030610,"results":"155","hashOfConfig":"79"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},"e5hdjd",{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":2,"source":"163","usedDeprecatedRules":"158"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"158"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"158"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"158"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"158"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"158"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"158"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"158"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"158"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"158"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":4,"source":"219","usedDeprecatedRules":"158"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"158"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"158"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"158"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"158"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"158"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"158"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"158"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"303","usedDeprecatedRules":"158"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"316","messages":"317","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"320","messages":"321","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\index.tsx",[],["330","331"],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\serviceWorker.ts",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\App.tsx",["332","333","334","335","336"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport Axios from 'axios';\r\nimport SpotifyWebApi from 'spotify-web-api-js';\r\nimport Sidebar from './components/SidebarComponent/Sidebar';\r\nimport { getHashParams } from './utilities/getHashParams';\r\nimport { LoginContext, UserContext, userContext, USER_CONTEXT_DEFAULT, TokenContext, LinkContext, MessageContext } from './utilities/context'\r\nimport { MainPage } from './components/MainPageComponent/MainPage';\r\nimport { Footer } from './components/FooterComponent/Footer';\r\nimport { Banner } from './components/FooterComponent/Banner';\r\nimport { Player } from './components/FooterComponent/Player';\r\nimport { Loading } from './components/MainPageComponent/Loading';\r\n\r\ntype PlayerHandle = {\r\n  updateState: () => void\r\n}\r\n\r\nfunction App() {\r\n  const [loading, setLoading] = useState(true)\r\n  const [token, setToken] = useState(\"\");\r\n  const [loggedIn, setLogin] = useState(false);\r\n  const [user, setUser] = useState<userContext>(USER_CONTEXT_DEFAULT)\r\n  const [playlists, setPlaylists] = useState<SpotifyApi.PlaylistObjectSimplified[]>([]);\r\n\r\n  const [status, setStatus] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n\r\n  const timerRef = useRef(0);\r\n\r\n  const spotifyApi = new SpotifyWebApi();\r\n\r\n  useEffect(() => {\r\n    const params = getHashParams();\r\n    const access_token = params.access_token;\r\n    const error = params.error;\r\n    \r\n    if (error) {\r\n      console.log(error);\r\n      setLoading(false);\r\n    } else {\r\n      if (access_token) {\r\n        spotifyApi.setAccessToken(access_token);\r\n        setLogin(true);\r\n        setToken(access_token);\r\n        window.location.hash = ''\r\n        //fetch playlists\r\n        spotifyApi.getUserPlaylists().\r\n          then(\r\n            function(data) {\r\n              setPlaylists(data.items);\r\n            },\r\n            function(err) {\r\n              console.log(err);\r\n            }\r\n          )\r\n        \r\n        //fetch user account information\r\n        spotifyApi.getMe()\r\n            .then(\r\n              function(data) {\r\n                //cast response type to local type\r\n                setUser(data as userContext)\r\n              },\r\n              function(err) {\r\n                console.log(err)\r\n              }\r\n            )\r\n        setLoading(false);\r\n      } else {\r\n        Axios(`${process.env.REACT_APP_BACK_URI}/refresh_token`, {withCredentials: true})\r\n          .then((response) => {\r\n            const access_token = response.data.access_token\r\n            setToken(access_token);\r\n            setLogin(true);\r\n            spotifyApi.setAccessToken(access_token);\r\n            spotifyApi.getUserPlaylists().\r\n              then(\r\n                function(data) {\r\n                  setPlaylists(data.items);\r\n                },\r\n                function(err) {\r\n                  console.log(err);\r\n                }\r\n              )\r\n          \r\n            //fetch user account information\r\n            spotifyApi.getMe()\r\n              .then(\r\n                function(data) {\r\n                  //cast response type to local type\r\n                  setUser(data as userContext);\r\n                },\r\n                function(err) {\r\n                  console.log(err);\r\n                }\r\n              )\r\n            setLoading(false);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n            setLoading(false);\r\n            return ;\r\n          })\r\n      }\r\n    }\r\n\r\n    return (() => {\r\n      clearTimeout(timerRef.current);\r\n    });\r\n  }, [])\r\n\r\n  const playerRef = useRef<PlayerHandle>(null);\r\n\r\n  const updatePlayer = () => {\r\n    if (playerRef.current) {\r\n      playerRef.current.updateState();\r\n    }\r\n  }\r\n\r\n  const setStatusMessage = (message: string) => {\r\n    clearTimeout(timerRef.current)\r\n    setStatus(true)\r\n    setMessage(message)\r\n    timerRef.current = window.setTimeout(() => {\r\n      setStatus(false)\r\n    }, 3000)\r\n  }\r\n  \r\n  // TODO: \r\n  // 2. Continue to do player\r\n  return (\r\n      <div className=\"App\">\r\n        {loading \r\n          ? <Loading type='app' />\r\n          : <MessageContext.Provider value={setStatusMessage}>\r\n              <LoginContext.Provider value={loggedIn}>\r\n                <Sidebar playlists={playlists} />\r\n                <UserContext.Provider value={user}>\r\n                  <TokenContext.Provider value={token}>\r\n                    <MainPage message={message} status={status} />\r\n                  </TokenContext.Provider>\r\n                </UserContext.Provider>\r\n                {/* TODO: Add a functional player */}\r\n                <Footer>\r\n                  {loggedIn ? <Player token={token} ref={playerRef} /> : <Banner />}\r\n                </Footer>\r\n              </LoginContext.Provider>\r\n            </MessageContext.Provider>\r\n        }\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\FooterComponent\\Player.tsx",["337","338","339","340"],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\context.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\getHashParams.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\MainPage.tsx",["341"],"import React, { useContext, useState } from 'react'\r\nimport { HistoryToggle } from './HistoryToggle';\r\nimport { NavBar } from './NavBar';\r\nimport { Route } from 'react-router-dom'\r\nimport { SearchBar } from './SearchBar';\r\nimport { CollectionHeader } from './CollectionHeader';\r\nimport { LinkContext, LoginContext } from '../../utilities/context';\r\nimport UserInfo from './UserInfo';\r\nimport { UserPrompt } from './UserPrompt';\r\nimport { PageContent } from './PageContent';\r\n\r\ninterface MainPageProps {\r\n    message: string,\r\n    status: boolean\r\n}\r\n\r\nexport const MainPage: React.FC<MainPageProps> = ({message, status}) => {\r\n    const [query, setQuery] = useState(\"\")\r\n    const login = useContext(LoginContext);\r\n    \r\n    const resetQuery = () => {\r\n        setQuery(\"\")\r\n    }\r\n    \r\n    return (\r\n        <div className=\"featured\">\r\n            <NavBar>\r\n                <HistoryToggle />\r\n                <Route exact path='/search'>\r\n                    <SearchBar query={query} setQuery={setQuery} resetQuery={resetQuery} />\r\n                </Route>\r\n                <Route exact path='/collection'>\r\n                    <CollectionHeader />\r\n                </Route>\r\n                {login ? <UserInfo /> : <UserPrompt />}\r\n            </NavBar>\r\n            <PageContent query={query} message={message} status={status}  />\r\n        </div>\r\n        \r\n    );\r\n}","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\Loading.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\FooterComponent\\Footer.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\SidebarComponent\\Sidebar.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\FooterComponent\\Banner.tsx",["342"],"import React from 'react'\r\n\r\ninterface BannerProps {\r\n\r\n}\r\n\r\nexport const Banner: React.FC<BannerProps> = ({}) => {\r\n    return (\r\n        <div className='CTA-banner'>\r\n            <div className=\"cta-content\">\r\n                <h2 style={{\r\n                    fontSize: '12px',\r\n                    fontWeight: 400,\r\n                    lineHeight: '16px',\r\n                    letterSpacing: '.1em',\r\n                    textTransform: 'uppercase',\r\n                    marginBottom: '4px'\r\n                }}>A spotify clone</h2>\r\n                <h3 style={{\r\n                    fontSize: '16px',\r\n                    fontWeight: 500,\r\n                    lineHeight: '24px',\r\n                    letterSpacing: 'normal',\r\n                    textTransform: 'none'\r\n                }}>This is a clone website intended to be an exercise in web application building - not for profit/commercial use. If you are looking for the real app go to open.spotify.com</h3>\r\n            </div>\r\n            {/* <PromptButton to='https://spotify.com/signup' name='Sign up free' styleName='CTA'/> */}\r\n        </div>\r\n    );\r\n}","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\UserPrompt.tsx",["343"],"import React from 'react'\r\nimport { PromptButton } from './PromptButton';\r\n\r\ninterface UserPromptProps {\r\n\r\n}\r\n\r\nexport const UserPrompt: React.FC<UserPromptProps> = ({}) => {\r\n    \r\n    return (\r\n        <div className='UserPrompt'>\r\n            <PromptButton to='https://www.spotify.com/us/signup/?forward_url=https%3A%2F%2Fopen.spotify.com%2F' name='Sign Up' styleName='dark'/>\r\n            <PromptButton to={`${process.env.REACT_APP_BACK_URI}/login`} name='Log In' styleName='light'/>\r\n        </div>\r\n    );\r\n}","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\UserInfo.tsx",["344"],"import React, { useContext, useState } from 'react';\r\nimport {UserContext} from '../../utilities/context';\r\nimport axios from 'axios';\r\n\r\ninterface UserInfoProps {\r\n\r\n}\r\n\r\nconst UserInfo: React.FC<UserInfoProps> = ({}) => {\r\n    const [open, setOpen] = useState(false);\r\n    const {images, display_name, id} = useContext(UserContext);\r\n    let img_url;\r\n    if (images.length > 0) {\r\n        img_url = images[0].url\r\n    }\r\n\r\n    const logout = () => {\r\n        axios(`${process.env.REACT_APP_BACK_URI}/logout`, {withCredentials: true})\r\n            .then(response => {\r\n                window.location.reload()\r\n            })\r\n            .catch(error => console.log(error))\r\n    }\r\n\r\n    return (\r\n        <div style={divStyle}>\r\n            <button className='UserInfoButton no-outline' onClick={() => setOpen(!open)}>\r\n                <figure style={figureStyle}>\r\n                    <img loading='eager' src={img_url} style={imgStyle} alt=''></img>\r\n                </figure>\r\n                <span className='UserInfoSpan mediaNoneXL'>\r\n                    {display_name}\r\n                </span>\r\n                <span style={spanStyle} className='mediaNoneXL'> \r\n                    {open? <p>&#9650;</p>:<p>&#9660;</p>}\r\n                </span>\r\n            </button>\r\n            <ul className='UserInfoOptions' style={{display: open?'block':'none'}}>\r\n                <li>\r\n                    <a href=\"https://www.spotify.com/account/?utm_source=play&amp;utm_campaign=wwwredirect\" target=\"_blank\" rel=\"noopener noreferrer\">Account</a>\r\n                </li>\r\n                <li>\r\n                    <a href={`/user/${id}`}>Profile</a>\r\n                </li>\r\n                <li>\r\n                    <button onClick={logout}>Log out</button>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\n//type check does not let like this so this is a temp fix, i guess\r\nconst divStyle = {\r\n    position: \"relative\" as \"relative\",\r\n    whiteSpace: \"nowrap\" as \"nowrap\"\r\n}\r\n\r\nconst figureStyle = {\r\n    width: '28px' as '28px',\r\n    height: '28px' as '28px',\r\n    overflow: 'hidden' as 'hidden',\r\n    position: 'relative' as 'relative',\r\n    display: 'inline-block' as 'inline-block'\r\n}\r\n\r\nconst imgStyle = {\r\n    borderRadius: '50%' as '50%',\r\n    width: '100%' as '100%',\r\n    height: '100%' as '100%',\r\n    objectFit: 'cover' as 'cover',\r\n    objectPosition: 'center center' as 'center center'\r\n}\r\n\r\n\r\nconst spanStyle = {\r\n    marginRight: '6px' as '6px',\r\n    marginLeft: '8px' as '8px',\r\n    fontSize: '10px' as '10px'\r\n}\r\n\r\nexport default UserInfo;","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\CollectionHeader.tsx",["345"],"import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\ninterface CollectionHeaderProps {\r\n\r\n}\r\n\r\nconst activeStyle = {\r\n    backgroundColor: '#333'\r\n}\r\n\r\nexport const CollectionHeader: React.FC<CollectionHeaderProps> = ({}) => {\r\n    return (\r\n        <div className='cNavWrapper'>\r\n            <nav className='cNav'>\r\n                <ul className='cNavList'>\r\n                    <li>\r\n                        <NavLink to='/collection/playlists' activeStyle={activeStyle}>Playlists</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to='/collection/podcasts' activeStyle={activeStyle}>Podcasts</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to='/collection/artists' activeStyle={activeStyle}>Artists</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to='/collection/albums' activeStyle={activeStyle}>Albums</NavLink>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    );\r\n}","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\HistoryToggle.tsx",["346"],"import React from 'react'\r\nimport { HistoryButton } from './HistoryButton';\r\n\r\ninterface HistoryToggleProps {\r\n\r\n}\r\n\r\nexport const HistoryToggle: React.FC<HistoryToggleProps> = ({}) => {\r\n        return (\r\n            <div className='HistoryNav'>\r\n                <HistoryButton property='Back'/>\r\n                <HistoryButton property='Forward'/>\r\n            </div>\r\n        );\r\n}","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\SearchBar.tsx",["347"],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\SidebarComponent\\NavItem.tsx",["348","349"],"import React, { useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Icon from '../../icons';\r\n\r\ninterface NavItemProps {\r\n    to: string;\r\n    label: string;\r\n    iconName: string;\r\n    getSelected: Function;\r\n    currentState: string;\r\n}\r\n\r\nexport const NavItem: React.FC<NavItemProps> = ({to, label, iconName, getSelected, currentState}) => {\r\n    const changeState = () => {\r\n        getSelected(label);\r\n    } \r\n\r\n    return (\r\n        <li onClick={changeState} className={`NavItem ${currentState == label ? 'selected' : ''}`}>\r\n            <NavLink exact to={to} className=\"nav-link\">\r\n                <div className=\"nav-icon\">\r\n                    <Icon name={iconName} />\r\n                </div>\r\n                <span>{label}</span>\r\n            </NavLink>\r\n            \r\n        </li>\r\n    );\r\n}","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\PageContent.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\NavBar.tsx",["350","351","352"],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\SidebarComponent\\NavList.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\SidebarComponent\\PlayList.tsx",["353"],"import React from 'react'\r\nimport { FeaturedPlaylists } from './Playlists/FeaturedPlaylists';\r\nimport SpotifyWebApi from 'spotify-web-api-js';\r\nimport { NormalPlaylists } from './Playlists/NormalPlaylists';\r\n\r\ninterface PlayListProps {\r\n    playlists: SpotifyApi.PlaylistObjectSimplified[]\r\n}\r\n\r\nexport const PlayList: React.FC<PlayListProps> = ({ playlists }) => {\r\n    return (\r\n        <div className=\"playlists\">\r\n            <h1 className=\"play-title\">playlists</h1>\r\n            <FeaturedPlaylists />\r\n            <hr className=\"list-separator\" />\r\n            <NormalPlaylists playlists={playlists} />\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\SidebarComponent\\Install.tsx",["354"],"import React from 'react'\r\nimport Icon from '../../icons';\r\n\r\ninterface InstallProps {\r\n\r\n}\r\n\r\nexport const Install: React.FC<InstallProps> = ({}) => {\r\n    return (\r\n        <div className='cta-wrapper'>\r\n            <a href=\"https://spotify.com/download\" className='nav-link'>\r\n                <div className=\"nav-icon install-icon\">\r\n                    <Icon name='Install' viewBox='0 0 20 20' width='20px' height='20px'/>\r\n                </div>\r\n                <span>Install App</span>\r\n            </a>\r\n        </div>\r\n    );\r\n}","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Logo.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\PromptButton.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\HistoryButton.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\pages\\Home.tsx",["355","356","357","358","359","360","361","362","363","364"],"import React, { useEffect, useState, useContext } from 'react'\r\nimport { CollectionRow } from '../components/MainPageComponent/CollectionRow';\r\nimport SpotifyWebApi from 'spotify-web-api-js';\r\nimport { LoginContext, TokenContext } from '../utilities/context';\r\nimport getLocale from '../utilities/locale';\r\nimport createRequest from '../utilities/createRequest';\r\n\r\ninterface HomeProps {\r\n\r\n}\r\n\r\nexport const Home: React.FC<HomeProps> = ({}) => {\r\n    const [recentlyPlaylist, setRecentlyPlaylist] = useState<SpotifyApi.TrackObjectSimplified[]>([]);\r\n    const [newReleases, setNewReleases] = useState<any[]>([]);\r\n    const [topTracksAndArtists, setTop] = useState<any[]>([]);\r\n    const [collections, setCollections] = useState<any[]>([]);\r\n    const [tempPlaylists, setTempPlaylists] = useState<any>({});\r\n    const [fpPlaylists, setFpPlaylists] = useState<any[]>([]);\r\n    const loggedIn = useContext(LoginContext);\r\n    const token = useContext(TokenContext);\r\n    const spotifyApi = new SpotifyWebApi();\r\n\r\n    useEffect(() => {\r\n        if (token) {\r\n            spotifyApi.setAccessToken(token);\r\n\r\n            spotifyApi.getNewReleases().\r\n                then (\r\n                    function(data) {\r\n                        setNewReleases(data.albums.items as any)\r\n                    },\r\n                    function(err) {\r\n                        console.log(err);\r\n                    }\r\n                )\r\n\r\n            spotifyApi.getMyRecentlyPlayedTracks().\r\n                then (\r\n                    function(data) {\r\n                        const recentlyPlaylistList: SpotifyApi.TrackObjectSimplified[] = [];\r\n                        data.items.map((track, index) => {\r\n                            recentlyPlaylistList.push(track.track as SpotifyApi.TrackObjectSimplified);\r\n                        })\r\n                        setRecentlyPlaylist(recentlyPlaylistList);\r\n                    },\r\n                    function(err) {\r\n                        console.log(err);\r\n                    }\r\n                )\r\n            spotifyApi.getMyTopTracks().\r\n                then (\r\n                    function(data) {\r\n                        data.items.slice(0, 5).map((track, index) => {\r\n                            setTop(prevTop => ([...prevTop, track]));\r\n                        });\r\n                    },\r\n                    function(err) {\r\n                        console.log(err);\r\n                    }\r\n                )\r\n\r\n            spotifyApi.getMyTopArtists().\r\n                then (\r\n                    function(data) {\r\n                        data.items.slice(0, 5).map((artist, index) => {\r\n                            setTop(prevTop => ([...prevTop, artist]));\r\n                        });\r\n                    },\r\n                    function(err) {\r\n                        console.log(err);\r\n                    }\r\n                )\r\n        } else {\r\n            const [language, locale] = getLocale()\r\n            const {source, makeRequest} = createRequest(`https://api.spotify.com/v1/browse/categories?limit=6&country=${locale}&locale=${language}_${locale}`)\r\n\r\n            makeRequest()\r\n                .then((data: any) => {\r\n                    console.log(data)\r\n                    setCollections(data.categories.items);\r\n                })\r\n                .catch((error: any) => console.log(error))\r\n            \r\n            \r\n            return () => source.cancel()\r\n        }\r\n    }, [token])\r\n\r\n    useEffect(() => { \r\n        topTracksAndArtists.sort((a, b) => (a.popularity > b.popularity) ? -1 : 1);\r\n    }, [topTracksAndArtists])\r\n\r\n    useEffect(() => {\r\n        collections.map((collection) => {\r\n            const {name, id} = collection\r\n            var rq = createRequest(`https://api.spotify.com/v1/browse/categories/${id}/playlists?limit=9`)\r\n            rq.makeRequest()\r\n                .then((data) => {\r\n                    const playlists = data.playlists.items\r\n                    setTempPlaylists(() => ({[name]: {id, playlists}}))\r\n                })\r\n                .catch((error) => console.log(error))\r\n            return null\r\n        })\r\n    }, [collections])\r\n    \r\n    useEffect(() => {\r\n        setFpPlaylists({...fpPlaylists, ...tempPlaylists});\r\n    }, [tempPlaylists])\r\n\r\n    return (\r\n        <div className=\"page-content\">\r\n            <div className='pageContent'>\r\n                {loggedIn \r\n                ?   <>\r\n                        <CollectionRow name='Recently played' id={null} playlists={recentlyPlaylist} />\r\n                        <CollectionRow name='Jump back in' id={null} playlists={topTracksAndArtists} description={\"Your top listens from the past few months.\"} />\r\n                        <CollectionRow name='New releases for you' id={null} playlists={newReleases} />\r\n                    </>\r\n                :   <>\r\n                        <CollectionRow name='Uniquely Yours' id={null} playlists={[{id:'', to:'/tracks', description:'', name:'Liked Songs', images:[{url: 'https://misc.scdn.co/liked-songs/liked-songs-300.png'}]}]}/>\r\n                        {   \r\n                            Object.entries(fpPlaylists).map(playlist => {\r\n                                console.log(playlist);\r\n                                return (\r\n                                    <CollectionRow name={playlist[0]} key={playlist[1].id} id={playlist[1].id} playlists={playlist[1].playlists}/>\r\n                                )\r\n                            })\r\n                        }\r\n                    </>\r\n                }\r\n                \r\n            </div>\r\n        </div>\r\n    );\r\n}","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\SidebarComponent\\Playlists\\FeaturedPlaylists.tsx",["365"],"import React from 'react';\r\nimport { CreatePlaylist } from './CreatePlaylist';\r\nimport { FeaturedItem } from './FeaturedItem';\r\n\r\ninterface FeaturedPlaylistsProps {\r\n\r\n}\r\n\r\nexport const FeaturedPlaylists: React.FC<FeaturedPlaylistsProps> = ({}) => {\r\n    return (\r\n        <>\r\n            <div className=\"featured-playlists\">\r\n                <CreatePlaylist />\r\n                <FeaturedItem label=\"Liked Songs\" />\r\n            </div>\r\n        </>\r\n    );\r\n}","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\SidebarComponent\\Playlists\\NormalPlaylists.tsx",["366"],"import React from 'react'\r\nimport SpotifyWebApi from 'spotify-web-api-js';\r\nimport { ListItem } from './ListItem';\r\n\r\ninterface NormalPlaylistsProps {\r\n    playlists: SpotifyApi.PlaylistObjectSimplified[]\r\n}\r\n\r\nexport const NormalPlaylists: React.FC<NormalPlaylistsProps> = ({playlists}) => {\r\n\r\n    return (\r\n        <div className=\"other-playlist-container\">\r\n            <ul className=\"other-list\">\r\n                {playlists.map((playlist) => <ListItem key={playlist.id} name={playlist.name} id={playlist.id}/>)}\r\n            </ul>\r\n        </div>\r\n    );\r\n}","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\index.tsx",["367"],"import Home from './Home'\r\nimport Search from './Search'\r\nimport Library from './Library'\r\nimport Create from './Create'\r\nimport Like from './Like'\r\nimport Install from './Install'\r\nimport Back from './Back'\r\nimport Forward from './Forward'\r\nimport NSearch from './NSearch'\r\nimport Heart from './Heart'\r\nimport Play from './Play'\r\nimport Music from './Music'\r\nimport Music2 from './Music2'\r\nimport CD from './CD'\r\nimport PrevTrack from './PrevTrack'\r\nimport NextTrack from './NextTrack'\r\nimport Shuffle from './Shuffle'\r\nimport Repeat from './Repeat'\r\nimport Speaker from './Devices'\r\nimport Volume from './Volume'\r\nimport Pause from './Pause'\r\n\r\nimport React from 'react'\r\nimport Devices from './Devices'\r\n\r\n\r\nexport default function Icon(props: any) {\r\n    switch (props.name) {\r\n        case 'Home':\r\n            return <Home />\r\n        case 'Search':\r\n            return <Search />\r\n        case 'Library':\r\n            return <Library />\r\n        case 'Create':\r\n            return <Create />\r\n        case 'Heart':\r\n            return <Heart {...props}/>\r\n        case 'Like':\r\n            return <Like {...props}/>\r\n        case 'Install':\r\n            return <Install {...props}/>\r\n        case 'Back':\r\n            return <Back />\r\n        case 'Forward':\r\n            return <Forward />\r\n        case 'N-Search':\r\n            return <NSearch />\r\n        case 'Play':\r\n            return <Play {...props}/>\r\n        case 'Music':\r\n            return <Music />\r\n        case 'Music2':\r\n            return <Music2 />\r\n        case 'CD':\r\n            return <CD />\r\n        case 'PrevTrack':\r\n            return <PrevTrack />\r\n        case 'NextTrack':\r\n            return <NextTrack />\r\n        case 'Shuffle':\r\n            return <Shuffle />\r\n        case 'Repeat':\r\n            return <Repeat />\r\n        case 'Devices':\r\n            return <Devices />\r\n        case 'Volume':\r\n            return <Volume />\r\n        case 'Pause':\r\n            return <Pause />\r\n        default:\r\n            return null\r\n    }\r\n}","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\locale.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\CollectionRow.tsx",["368"],"import React from 'react'\r\nimport { CollectionDisplay } from './CollectionDisplay'\r\nimport { CollectionHeader } from './CollectionHeader'\r\nimport { CollectionTitle } from './CollectionTitle'\r\n\r\ninterface CollectionRowProps {\r\n        name: string,\r\n        description?: string,\r\n        playlists: any,\r\n        id: string | null\r\n}\r\n\r\nexport const CollectionRow = React.forwardRef<HTMLDivElement, CollectionRowProps>(({name, playlists, id, description}, ref) => {\r\n        return (\r\n                <div className=\"CollectionRow\">\r\n                        <CollectionTitle title={name} id={id} description={description}/>\r\n                        <CollectionDisplay ref={ref} playlists={playlists}/>\r\n                </div>\r\n        )\r\n})\r\n    ","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\createRequest.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\SidebarComponent\\Playlists\\CreatePlaylist.tsx",["369"],"import React from 'react';\r\nimport Icon from '../../../icons';\r\n\r\ninterface CreatePlaylistProps {\r\n\r\n}\r\n\r\nexport const CreatePlaylist: React.FC<CreatePlaylistProps> = ({}) => {\r\n    return (\r\n        <button className=\"create-button no-outline\">\r\n            <div className=\"playlist-icon\">\r\n                <Icon name='Create' />\r\n            </div>\r\n            <span className=\"featured-label\">Create Playlist</span>\r\n        </button>\r\n    );\r\n}","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\SidebarComponent\\Playlists\\FeaturedItem.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\SidebarComponent\\Playlists\\ListItem.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Home.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Install.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Search.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Library.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Back.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Create.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Like.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Play.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Forward.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\NSearch.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Music2.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Music.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\PrevTrack.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\CD.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Heart.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Shuffle.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Repeat.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\NextTrack.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Pause.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Volume.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\CollectionTitle.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\CollectionDisplay.tsx",["370","371"],"import { AnyTxtRecord } from 'dns';\r\nimport React from 'react'\r\nimport { PlayCard } from './PlayCard';\r\n\r\ninterface CollectionDisplayProps {\r\n    playlists: any\r\n}\r\n\r\nexport const CollectionDisplay = React.forwardRef<HTMLDivElement, CollectionDisplayProps>(({playlists}, ref) => {\r\n    const unique: string[] = [];\r\n    let uniqueIndex = 0;\r\n    return (\r\n        <div className=\"RowGrid\">\r\n            {playlists.map((playlist: any, index: number) => {\r\n                if (playlist){\r\n                    if (uniqueIndex < 6 && unique.indexOf(playlist.name) === -1){\r\n                        uniqueIndex++;\r\n                        unique.push(playlist.name);\r\n                        return <PlayCard key={playlist.id} info={playlist} type={playlist.type}/> \r\n                    }\r\n                }else{\r\n                    return null\r\n                }\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n);","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\PlayCard.tsx",["372","373","374","375"],"import React, { useContext } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Icon from '../../icons';\r\nimport { TokenContext, LoginContext } from '../../utilities/context';\r\nimport { CardDisplay } from './CardDisplay';\r\nimport { CardInfo } from './CardInfo';\r\n\r\ninterface PlayCardProps {\r\n    info: any,\r\n    type: string\r\n}\r\n\r\nfunction returnDescription(type:string, info:any){\r\n    let artists\r\n    switch (type){\r\n        case 'playlist':\r\n           return info.description || `By ${info.owner.display_name}`\r\n        case 'album':\r\n            artists = info.artists.map((object:any) => object.name)\r\n            return artists.length === 1 ? artists[0]:artists.join(', ')\r\n        case 'artist':\r\n            return 'Artist'\r\n        case 'track':\r\n            artists = info.artists.map((object:any) => object.name)\r\n            return artists.length === 1 ? artists[0]:artists.join(', ')\r\n        default:\r\n            return null\r\n    }\r\n}\r\n\r\nexport const PlayCard: React.FC<PlayCardProps> = ({info, type}) => {\r\n    const history = useHistory();\r\n    const description = returnDescription(type, info);\r\n    const {name, id, uri} = info;\r\n\r\n    const token = useContext(TokenContext);\r\n    const loggedIn = useContext(LoginContext);\r\n\r\n    let images\r\n    if (type === 'track'){\r\n        images = info.album.images\r\n    }else{\r\n        images = info.images\r\n    }\r\n    let image_url\r\n    try{\r\n        image_url = images[0].url\r\n    }catch{\r\n        image_url = null \r\n    }\r\n    \r\n    return (\r\n        // <div className=\"pcWrapper\">\r\n        //     <Link to={info.to? info.to : type === 'track'? `/album/${info.album.id}?highlight=${id}`:`/${type}/${id}`} style={{textDecoration:'none', color:'var(--main-text)', zIndex:'3'}}>\r\n        //         <div ref={ref} className=\"PlayCard\">\r\n        //             <CardDisplay url={image_url} type={type}/>\r\n        //             <CardInfo title={name} description={description}/>\r\n        //         </div>\r\n        //     </Link>\r\n        //     {loggedIn? \r\n        //     <button className=\"smallButton no-outline\" title=\"Play\" onClick={() => {\r\n        //         playContext()\r\n        //         updatePlayer()\r\n        //     }}>\r\n        //         <Icon name=\"Play\" height='17' width='17'/>\r\n        //     </button>\r\n        //     :\r\n        //     <button className=\"smallButton no-outline\" title=\"Play\" data-tip='play' data-for='tooltipMain' data-event='click'>\r\n        //         <Icon name=\"Play\" height='17' width='17'/>\r\n        //     </button>\r\n        //     }\r\n        // </div>\r\n        <div className=\"pcWrapper\">\r\n            <Link to={info.to? info.to : type === 'track'? `/album/${info.album.id}?highlight=${id}`:`/${type}/${id}`} style={{textDecoration:'none', color:'var(--main-text)', zIndex:3}}>\r\n                <div className=\"PlayCard\">\r\n                    <CardDisplay url={image_url} type={type}/>\r\n                    <CardInfo title={name} description={description}/>\r\n                </div>\r\n            </Link>\r\n            {/* TODO: Add logged in onclick  to play the track */}\r\n            <button className=\"smallButton no-outline\" title=\"Play\">\r\n                <Icon name=\"Play\" height='17' width='17'/>\r\n            </button>\r\n        </div>\r\n    );\r\n}","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\CardDisplay.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\CardInfo.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\FooterComponent\\PlayerComponent\\CurrentlyPlayedSong.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\FooterComponent\\PlayerComponent\\ControlButton.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\FooterComponent\\PlayerComponent\\ProgressBar.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\FooterComponent\\PlayerComponent\\ConnectDevices.tsx",["376","377","378","379","380"],"import React, { useEffect, useRef, useState } from 'react'\r\nimport { getHashParams } from '../../../utilities/getHashParams';\r\nimport { ConnectDevicesItem } from './ConnectDevicesItem';\r\nimport SpotifyWebApi from 'spotify-web-api-js';\r\ninterface ConnectDevicesProps {\r\n    token: string,\r\n    closeTip: () => void\r\n}\r\n\r\nfunction useOutsideClick(ref: React.RefObject<HTMLDivElement>, closeTip: () => void) {\r\n    useEffect(() => {\r\n        function handleClickOutside(event: MouseEvent) {\r\n            if (ref.current && !ref.current.contains(event.target as Node)) {\r\n                closeTip();\r\n            }\r\n        }\r\n\r\n        // Bind the event listener\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => {\r\n            // Unbind the event listener on clean up\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        };\r\n    }, [ref]);\r\n}\r\n\r\nexport const ConnectDevices: React.FC<ConnectDevicesProps> = ({token, closeTip}) => {\r\n    const [devices, setDevices] = useState<SpotifyApi.UserDevice[]>([]);\r\n    const spotifyApi = new SpotifyWebApi();\r\n\r\n    useEffect(() => {\r\n        if (token) {\r\n            spotifyApi.setAccessToken(token);\r\n\r\n            spotifyApi.getMyDevices().\r\n                then (\r\n                    function(data) {\r\n                        data.devices.map((device, index) => {\r\n                            setDevices(devices => [...devices, device])\r\n                        });\r\n                    },\r\n                    function(err) {\r\n                        console.log(err);\r\n                    }\r\n                ) \r\n        } \r\n    }, [])\r\n    \r\n    const switchDevice = (e: React.MouseEvent) => {\r\n        if (!(e.currentTarget instanceof HTMLButtonElement)) {\r\n            return;\r\n        }\r\n        const id = e.currentTarget.dataset.id;\r\n        const device_ids: string[]= [id as string];\r\n        spotifyApi.setAccessToken(token);\r\n        spotifyApi.transferMyPlayback(device_ids);\r\n    };\r\n\r\n    const wrapperRef = useRef<HTMLDivElement>(null);\r\n    useOutsideClick(wrapperRef, closeTip);\r\n\r\n    return (\r\n        <div className=\"connect-devices\" data-source=\"inside\" ref={wrapperRef}>\r\n\t\t\t<div className=\"connect-devices-content\" data-source=\"inside\">\r\n\t\t\t\t<div className=\"connect-devices-title\" data-source=\"inside\">\r\n\t\t\t\t\t<h1 data-source=\"inside\">Connect to a device</h1>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"cd-img\" data-source=\"inside\">\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tloading=\"lazy\"\r\n\t\t\t\t\t\tdata-source=\"inside\"\r\n\t\t\t\t\t\tsrc=\"https://open.scdn.co/cdn/images/connect_header@1x.ecc6912d.png\"\r\n\t\t\t\t\t\talt=\"\"\r\n\t\t\t\t\t\tdraggable=\"false\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{devices.length === 0 ? (\r\n\t\t\t\t\t<ConnectDevicesItem name=\"No devices available\" disable />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<ul className='connect-devices-list'>\r\n                        {devices.map((device, index) => \r\n                            <ConnectDevicesItem\r\n                                name={device.name}\r\n                                key={index}\r\n                                active={device.is_active}\r\n                                id={device.id}\r\n                                onClick={switchDevice}\r\n                            />\r\n                        )}\r\n                    </ul>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n    );\r\n}","C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\FooterComponent\\PlayerComponent\\ConnectDevicesItem.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\icons\\Devices.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\timeFormat.ts",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\types\\index.ts",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\utilities\\types\\spotify.ts",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\pages\\Search.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\pages\\Browse.tsx",["381","382"],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\PageTitle.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\BrowseCard.tsx",["383"],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\pages\\SearchResult.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\SearchRow.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\SearchRowTitle.tsx",[],"C:\\Users\\Lynh Mochi\\spoticlone-app\\spoticlone\\src\\components\\MainPageComponent\\SearchRowGrid.tsx",[],{"ruleId":"384","replacedBy":"385"},{"ruleId":"386","replacedBy":"387"},{"ruleId":"388","severity":1,"message":"389","line":6,"column":86,"nodeType":"390","messageId":"391","endLine":6,"endColumn":97},{"ruleId":"392","severity":1,"message":"393","line":46,"column":38,"nodeType":"394","messageId":"395","endLine":46,"endColumn":39,"fix":"396"},{"ruleId":"392","severity":1,"message":"393","line":75,"column":42,"nodeType":"394","messageId":"395","endLine":75,"endColumn":43,"fix":"397"},{"ruleId":"398","severity":1,"message":"399","line":109,"column":6,"nodeType":"400","endLine":109,"endColumn":8,"suggestions":"401"},{"ruleId":"388","severity":1,"message":"402","line":113,"column":9,"nodeType":"390","messageId":"391","endLine":113,"endColumn":21},{"ruleId":"388","severity":1,"message":"403","line":3,"column":26,"nodeType":"390","messageId":"391","endLine":3,"endColumn":38},{"ruleId":"388","severity":1,"message":"404","line":4,"column":10,"nodeType":"390","messageId":"391","endLine":4,"endColumn":23},{"ruleId":"392","severity":1,"message":"393","line":72,"column":51,"nodeType":"394","messageId":"395","endLine":72,"endColumn":52,"fix":"405"},{"ruleId":"398","severity":1,"message":"406","line":88,"column":8,"nodeType":"400","endLine":88,"endColumn":10,"suggestions":"407"},{"ruleId":"388","severity":1,"message":"389","line":7,"column":10,"nodeType":"390","messageId":"391","endLine":7,"endColumn":21},{"ruleId":"408","severity":1,"message":"409","line":7,"column":47,"nodeType":"410","messageId":"411","endLine":7,"endColumn":49},{"ruleId":"408","severity":1,"message":"409","line":8,"column":55,"nodeType":"410","messageId":"411","endLine":8,"endColumn":57},{"ruleId":"408","severity":1,"message":"409","line":9,"column":44,"nodeType":"410","messageId":"411","endLine":9,"endColumn":46},{"ruleId":"408","severity":1,"message":"409","line":12,"column":67,"nodeType":"410","messageId":"411","endLine":12,"endColumn":69},{"ruleId":"408","severity":1,"message":"409","line":8,"column":61,"nodeType":"410","messageId":"411","endLine":8,"endColumn":63},{"ruleId":"398","severity":1,"message":"412","line":13,"column":8,"nodeType":"400","endLine":13,"endColumn":10,"suggestions":"413"},{"ruleId":"388","severity":1,"message":"414","line":1,"column":17,"nodeType":"390","messageId":"391","endLine":1,"endColumn":25},{"ruleId":"415","severity":1,"message":"416","line":19,"column":70,"nodeType":"417","messageId":"411","endLine":19,"endColumn":72},{"ruleId":"388","severity":1,"message":"418","line":1,"column":17,"nodeType":"390","messageId":"391","endLine":1,"endColumn":26},{"ruleId":"388","severity":1,"message":"414","line":1,"column":28,"nodeType":"390","messageId":"391","endLine":1,"endColumn":36},{"ruleId":"388","severity":1,"message":"419","line":2,"column":9,"nodeType":"390","messageId":"391","endLine":2,"endColumn":20},{"ruleId":"388","severity":1,"message":"420","line":3,"column":8,"nodeType":"390","messageId":"391","endLine":3,"endColumn":21},{"ruleId":"408","severity":1,"message":"409","line":8,"column":49,"nodeType":"410","messageId":"411","endLine":8,"endColumn":51},{"ruleId":"408","severity":1,"message":"409","line":12,"column":43,"nodeType":"410","messageId":"411","endLine":12,"endColumn":45},{"ruleId":"392","severity":1,"message":"393","line":27,"column":40,"nodeType":"394","messageId":"395","endLine":27,"endColumn":41,"fix":"421"},{"ruleId":"392","severity":1,"message":"393","line":37,"column":51,"nodeType":"394","messageId":"395","endLine":37,"endColumn":52,"fix":"422"},{"ruleId":"423","severity":1,"message":"424","line":41,"column":55,"nodeType":"425","messageId":"426","endLine":41,"endColumn":57},{"ruleId":"392","severity":1,"message":"393","line":50,"column":40,"nodeType":"394","messageId":"395","endLine":50,"endColumn":41,"fix":"427"},{"ruleId":"423","severity":1,"message":"424","line":53,"column":67,"nodeType":"425","messageId":"426","endLine":53,"endColumn":69},{"ruleId":"392","severity":1,"message":"393","line":62,"column":41,"nodeType":"394","messageId":"395","endLine":62,"endColumn":42,"fix":"428"},{"ruleId":"423","severity":1,"message":"424","line":65,"column":68,"nodeType":"425","messageId":"426","endLine":65,"endColumn":70},{"ruleId":"398","severity":1,"message":"399","line":87,"column":8,"nodeType":"400","endLine":87,"endColumn":15,"suggestions":"429"},{"ruleId":"398","severity":1,"message":"430","line":109,"column":8,"nodeType":"400","endLine":109,"endColumn":23,"suggestions":"431"},{"ruleId":"408","severity":1,"message":"409","line":9,"column":69,"nodeType":"410","messageId":"411","endLine":9,"endColumn":71},{"ruleId":"388","severity":1,"message":"420","line":2,"column":8,"nodeType":"390","messageId":"391","endLine":2,"endColumn":21},{"ruleId":"388","severity":1,"message":"432","line":19,"column":8,"nodeType":"390","messageId":"391","endLine":19,"endColumn":15},{"ruleId":"388","severity":1,"message":"433","line":3,"column":10,"nodeType":"390","messageId":"391","endLine":3,"endColumn":26},{"ruleId":"408","severity":1,"message":"409","line":8,"column":63,"nodeType":"410","messageId":"411","endLine":8,"endColumn":65},{"ruleId":"388","severity":1,"message":"434","line":1,"column":10,"nodeType":"390","messageId":"391","endLine":1,"endColumn":22},{"ruleId":"423","severity":1,"message":"435","line":14,"column":59,"nodeType":"425","messageId":"436","endLine":14,"endColumn":61},{"ruleId":"388","severity":1,"message":"437","line":32,"column":11,"nodeType":"390","messageId":"391","endLine":32,"endColumn":18},{"ruleId":"388","severity":1,"message":"438","line":34,"column":22,"nodeType":"390","messageId":"391","endLine":34,"endColumn":25},{"ruleId":"388","severity":1,"message":"439","line":36,"column":11,"nodeType":"390","messageId":"391","endLine":36,"endColumn":16},{"ruleId":"388","severity":1,"message":"440","line":37,"column":11,"nodeType":"390","messageId":"391","endLine":37,"endColumn":19},{"ruleId":"388","severity":1,"message":"404","line":2,"column":10,"nodeType":"390","messageId":"391","endLine":2,"endColumn":23},{"ruleId":"398","severity":1,"message":"441","line":24,"column":8,"nodeType":"400","endLine":24,"endColumn":13,"suggestions":"442"},{"ruleId":"392","severity":1,"message":"393","line":35,"column":38,"nodeType":"394","messageId":"395","endLine":35,"endColumn":39,"fix":"443"},{"ruleId":"423","severity":1,"message":"424","line":38,"column":58,"nodeType":"425","messageId":"426","endLine":38,"endColumn":60},{"ruleId":"398","severity":1,"message":"444","line":47,"column":8,"nodeType":"400","endLine":47,"endColumn":10,"suggestions":"445"},{"ruleId":"388","severity":1,"message":"420","line":4,"column":8,"nodeType":"390","messageId":"391","endLine":4,"endColumn":21},{"ruleId":"408","severity":1,"message":"409","line":11,"column":47,"nodeType":"410","messageId":"411","endLine":11,"endColumn":49},{"ruleId":"388","severity":1,"message":"420","line":2,"column":8,"nodeType":"390","messageId":"391","endLine":2,"endColumn":21},"no-native-reassign",["446"],"no-negated-in-lhs",["447"],"@typescript-eslint/no-unused-vars","'LinkContext' is defined but never used.","Identifier","unusedVar","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"448","text":"449"},{"range":"450","text":"451"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'spotifyApi'. Either include it or remove the dependency array.","ArrayExpression",["452"],"'updatePlayer' is assigned a value but never used.","'TokenContext' is defined but never used.","'getHashParams' is defined but never used.",{"range":"453","text":"454"},"React Hook useEffect has missing dependencies: 'apiUpdate', 'player', 'playerInitialize', 'spotifyApi', and 'token'. Either include them or remove the dependency array.",["455"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","React Hook useEffect has a missing dependency: 'resetQuery'. Either include it or remove the dependency array. If 'resetQuery' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["456"],"'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'useEffect' is defined but never used.","'useLocation' is defined but never used.","'SpotifyWebApi' is defined but never used.",{"range":"457","text":"454"},{"range":"458","text":"454"},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",{"range":"459","text":"454"},{"range":"460","text":"454"},["461"],"React Hook useEffect has a missing dependency: 'fpPlaylists'. Either include it or remove the dependency array. You can also do a functional update 'setFpPlaylists(f => ...)' if you only need 'fpPlaylists' in the 'setFpPlaylists' call.",["462"],"'Speaker' is defined but never used.","'CollectionHeader' is defined but never used.","'AnyTxtRecord' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'history' is assigned a value but never used.","'uri' is assigned a value but never used.","'token' is assigned a value but never used.","'loggedIn' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'closeTip'. Either include it or remove the dependency array. If 'closeTip' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["463"],{"range":"464","text":"454"},"React Hook useEffect has missing dependencies: 'spotifyApi' and 'token'. Either include them or remove the dependency array.",["465"],"no-global-assign","no-unsafe-negation",[1744,1757],"\r\n          .",[2676,2693],"\r\n              .",{"desc":"466","fix":"467"},[2200,2219],"\r\n                .",{"desc":"468","fix":"469"},{"desc":"470","fix":"471"},[1146,1165],[1475,1494],[2080,2099],[2505,2524],{"desc":"472","fix":"473"},{"desc":"474","fix":"475"},{"desc":"476","fix":"477"},[1256,1275],{"desc":"472","fix":"478"},"Update the dependencies array to be: [spotifyApi]",{"range":"479","text":"480"},"Update the dependencies array to be: [apiUpdate, player, playerInitialize, spotifyApi, token]",{"range":"481","text":"482"},"Update the dependencies array to be: [resetQuery]",{"range":"483","text":"484"},"Update the dependencies array to be: [spotifyApi, token]",{"range":"485","text":"486"},"Update the dependencies array to be: [fpPlaylists, tempPlaylists]",{"range":"487","text":"488"},"Update the dependencies array to be: [closeTip, ref]",{"range":"489","text":"490"},{"range":"491","text":"486"},[3550,3552],"[spotifyApi]",[2676,2678],"[apiUpdate, player, playerInitialize, spotifyApi, token]",[361,363],"[resetQuery]",[3456,3463],"[spotifyApi, token]",[4257,4272],"[fpPlaylists, tempPlaylists]",[903,908],"[closeTip, ref]",[1652,1654]]